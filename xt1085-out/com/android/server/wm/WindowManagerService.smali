.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Landroid/view/WindowManagerPolicy$WindowManagerFuncs;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$1;,
        Lcom/android/server/wm/WindowManagerService$2;,
        Lcom/android/server/wm/WindowManagerService$DragInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;,
        Lcom/android/server/wm/WindowManagerService$LocalService;,
        Lcom/android/server/wm/WindowManagerService$MousePositionTracker;,
        Lcom/android/server/wm/WindowManagerService$RotationWatcher;,
        Lcom/android/server/wm/WindowManagerService$SettingsObserver;,
        Lcom/android/server/wm/WindowManagerService$UpdateAnimationScaleMode;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    }
.end annotation


# static fields
.field private static final ALWAYS_KEEP_CURRENT:Z = true

.field private static final ANIMATION_DURATION_SCALE:I = 0x2

.field private static final BOOT_ANIMATION_POLL_INTERVAL:I = 0xc8

.field private static final BOOT_ANIMATION_SERVICE:Ljava/lang/String; = "bootanim"

.field static final CUSTOM_SCREEN_ROTATION:Z = true

.field static final DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS:J = 0x12a05f200L

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field private static final DRAG_SHADOW_ALPHA_TRANSPARENT:F = 0.7071f

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAST_ANR_LIFETIME_DURATION_MSECS:I = 0x6ddd00

.field static final LAYER_OFFSET_DIM:I = 0x1

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field private static final MAX_SCREENSHOT_RETRIES:I = 0x3

.field static final PROFILE_ORIENTATION:Z = false

.field private static final PROPERTY_BUILD_DATE_UTC:Ljava/lang/String; = "ro.build.date.utc"

.field private static final PROPERTY_EMULATOR_CIRCULAR:Ljava/lang/String; = "ro.emulator.circular"

.field static final SEAMLESS_ROTATION_TIMEOUT_DURATION:I = 0x7d0

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field private static final TAG:Ljava/lang/String;

.field private static final TRANSITION_ANIMATION_SCALE:I = 0x1

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WINDOWS_FREEZING_SCREENS_ACTIVE:I = 0x1

.field static final WINDOWS_FREEZING_SCREENS_NONE:I = 0x0

.field static final WINDOWS_FREEZING_SCREENS_TIMEOUT:I = 0x2

.field private static final WINDOW_ANIMATION_SCALE:I = 0x0

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field static final WINDOW_REPLACEMENT_TIMEOUT_DURATION:I = 0x7d0

.field static final localLOGV:Z

.field private static mSingleHandSwitch:I


# instance fields
.field mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

.field final mActivityManager:Landroid/app/IActivityManager;

.field private final mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

.field final mAllowAnimationsInLowPowerMode:Z

.field final mAllowBootMessages:Z

.field mAllowTheaterModeWakeFromLayout:Z

.field mAltOrientation:Z

.field final mAmInternal:Landroid/app/ActivityManagerInternal;

.field mAnimateWallpaperWithTarget:Z

.field mAnimationScheduled:Z

.field mAnimationsDisabled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field mAnimatorDurationScaleSetting:F

.field final mAppOps:Landroid/app/AppOpsManager;

.field final mAppTransition:Lcom/android/server/wm/AppTransition;

.field mAppsFreezingScreen:I

.field mBootAnimationStopped:Z

.field private final mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

.field final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field private final mChangedStackList:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field final mChoreographer:Landroid/view/Choreographer;

.field mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

.field mClientFreezingScreen:Z

.field final mClosingApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

.field mCompatibleScreenScale:F

.field final mContext:Landroid/content/Context;

.field mCurConfiguration:Landroid/content/res/Configuration;

.field mCurrentFocus:Lcom/android/server/wm/WindowState;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field mDeferredRotationPauseCount:I

.field final mDestroyPreservedSurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayContents:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/DisplayContent;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

.field final mDisplayMetrics:Landroid/util/DisplayMetrics;

.field mDisplayReady:Z

.field final mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

.field final mDisplays:[Landroid/view/Display;

.field mDockedStackCreateBounds:Landroid/graphics/Rect;

.field mDockedStackCreateMode:I

.field mDragState:Lcom/android/server/wm/DragState;

.field final mDrawLockTimeoutMillis:J

.field mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

.field mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field mExitAnimId:I

.field final mFinishedEarlyAnim:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mFinishedStarting:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mFocusMayChange:Z

.field mFocusedApp:Lcom/android/server/wm/AppWindowToken;

.field mForceDisplayEnabled:Z

.field final mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mForceResizableTasks:Z

.field final mFxSession:Landroid/view/SurfaceSession;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardStatusChangeListener:Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

.field final mHasPermanentDpad:Z

.field final mHaveInputMethods:Z

.field mHoldingScreenOn:Lcom/android/server/wm/Session;

.field mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field mInTouchMode:Z

.field mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field final mInputMethodDialogs:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mInputMethodManager:Lcom/android/internal/view/IInputMethodManager;

.field mInputMethodTarget:Lcom/android/server/wm/WindowState;

.field mInputMethodTargetWaitingAnim:Z

.field mInputMethodWindow:Lcom/android/server/wm/WindowState;

.field final mInputMonitor:Lcom/android/server/wm/InputMonitor;

.field mIsTouchDevice:Z

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field private mKeyguardWaitingForActivityDrawn:Z

.field mLastANRState:Ljava/lang/String;

.field mLastDispatchedSystemUiVisibility:I

.field mLastDisplayFreezeDuration:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field mLastFocus:Lcom/android/server/wm/WindowState;

.field mLastKeyguardForcedOrientation:I

.field mLastOrientation:I

.field mLastStatusBarVisibility:I

.field mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

.field mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

.field mLastWindowForcedOrientation:I

.field final mLayersController:Lcom/android/server/wm/WindowLayersController;

.field mLayoutSeq:I

.field final mLimitedAlphaCompositing:Z

.field mLosingFocus:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field private mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

.field final mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List",
            "<",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mOnlyCore:Z

.field final mOpeningApps:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field private final mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

.field final mPolicy:Landroid/view/WindowManagerPolicy;

.field mPowerManager:Landroid/os/PowerManager;

.field mPowerManagerInternal:Landroid/os/PowerManagerInternal;

.field final mRealDisplayMetrics:Landroid/util/DisplayMetrics;

.field mRebuildTmp:[Lcom/android/server/wm/WindowState;

.field private final mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

.field final mReplacingWindowTimeouts:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRotation:I

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$RotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field mScreenCaptureDisabled:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;"
        }
    .end annotation
.end field

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mScreenRect:Landroid/graphics/Rect;

.field mSeamlessRotationCount:I

.field final mSessions:Landroid/util/ArraySet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/ArraySet",
            "<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

.field private final mSfHwRotation:I

.field mShowingBootMessages:Z

.field private mSingleHandAdapter:Lcom/android/server/wm/SingleHandAdapter;

.field public mSingleHandMode:I

.field mSkipAppTransitionAnimation:Z

.field mStackIdToStack:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/TaskStack;",
            ">;"
        }
    .end annotation
.end field

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSystemBooted:Z

.field mSystemDecorLayer:I

.field mTaskIdToTask:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;"
        }
    .end annotation
.end field

.field mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field private mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

.field final mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

.field final mTmpFloats:[F

.field final mTmpRect:Landroid/graphics/Rect;

.field final mTmpRect2:Landroid/graphics/Rect;

.field final mTmpRect3:Landroid/graphics/Rect;

.field final mTmpRectF:Landroid/graphics/RectF;

.field private final mTmpTaskIds:Landroid/util/SparseIntArray;

.field final mTmpTransform:Landroid/graphics/Matrix;

.field final mTmpWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mTokenMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mTransactionSequence:I

.field mTransitionAnimationScaleSetting:F

.field mTurnOnScreen:Z

.field private final mUiHandler:Landroid/os/Handler;

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mWaitingForConfig:Z

.field mWaitingForDrawn:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mWaitingForDrawnCallback:Ljava/lang/Runnable;

.field mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

.field mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

.field mWatermark:Lcom/android/server/wm/Watermark;

.field mWindowAnimationScaleSetting:F

.field final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

.field mWindowsChanged:Z

.field mWindowsFreezingScreen:I


# direct methods
.method static synthetic -get0(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/BoundsAnimationController;
    .registers 2

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

    return-object v0
.end method

.method static synthetic -get1(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .registers 2

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    return-object v0
.end method

.method static synthetic -wrap0(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    move-result v0

    return v0
.end method

.method static synthetic -wrap1(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/WindowState;
    .registers 2

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method static synthetic -wrap10(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateCircularDisplayMaskIfNeeded()V

    return-void
.end method

.method static synthetic -wrap2(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->finishPositioning()V

    return-void
.end method

.method static synthetic -wrap3(Lcom/android/server/wm/WindowManagerService;I)V
    .registers 2
    .param p1, "displayId"    # I

    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayChangedLocked(I)V

    return-void
.end method

.method static synthetic -wrap4(Lcom/android/server/wm/WindowManagerService;I)V
    .registers 2
    .param p1, "displayId"    # I

    .prologue
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayRemovedLocked(I)V

    return-void
.end method

.method static synthetic -wrap5(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;II)V
    .registers 4
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "x"    # I
    .param p3, "y"    # I

    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->handleTapOutsideTask(Lcom/android/server/wm/DisplayContent;II)V

    return-void
.end method

.method static synthetic -wrap6(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyFocusChanged()V

    return-void
.end method

.method static synthetic -wrap7(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyWindowsChanged()V

    return-void
.end method

.method static synthetic -wrap8(Lcom/android/server/wm/WindowManagerService;II)V
    .registers 3
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showStrictModeViolation(II)V

    return-void
.end method

.method static synthetic -wrap9(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;II)V
    .registers 4
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "startX"    # I
    .param p3, "startY"    # I

    .prologue
    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->startScrollingTask(Lcom/android/server/wm/DisplayContent;II)V

    return-void
.end method

.method static constructor <clinit>()V
    .registers 1

    .prologue
    .line 262
    const-string/jumbo v0, "WindowManager"

    sput-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    .line 260
    return-void
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V
    .registers 12
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    .prologue
    .line 959
    invoke-direct {p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    .line 365
    new-instance v3, Lcom/android/server/wm/WindowManagerService$1;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    .line 386
    const/4 v3, 0x0

    new-array v3, v3, [I

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 400
    new-instance v3, Lcom/android/server/policy/PhoneWindowManager;

    invoke-direct {v3}, Lcom/android/server/policy/PhoneWindowManager;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    .line 412
    new-instance v3, Landroid/util/ArraySet;

    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    .line 419
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    .line 424
    new-instance v3, Ljava/util/HashMap;

    invoke-direct {v3}, Ljava/util/HashMap;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    .line 430
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    .line 437
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    .line 443
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    .line 461
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    .line 466
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    .line 471
    const/16 v3, 0x14

    new-array v3, v3, [Lcom/android/server/wm/WindowState;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    .line 476
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    .line 483
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    .line 489
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    .line 495
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    .line 500
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    .line 510
    const/16 v3, 0x14

    new-array v3, v3, [Lcom/android/server/wm/WindowState;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    .line 517
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    .line 529
    const/16 v3, 0x9

    new-array v3, v3, [F

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    .line 530
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    .line 531
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    .line 532
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    .line 533
    new-instance v3, Landroid/graphics/RectF;

    invoke-direct {v3}, Landroid/graphics/RectF;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRectF:Landroid/graphics/RectF;

    .line 535
    new-instance v3, Landroid/graphics/Matrix;

    invoke-direct {v3}, Landroid/graphics/Matrix;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTransform:Landroid/graphics/Matrix;

    .line 539
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 540
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 541
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .line 542
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 543
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    .line 546
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 547
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 554
    new-instance v3, Landroid/util/SparseArray;

    const/4 v4, 0x2

    invoke-direct {v3, v4}, Landroid/util/SparseArray;-><init>(I)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    .line 556
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    .line 557
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    .line 558
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    .line 562
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateMode:I

    .line 565
    new-instance v3, Landroid/util/SparseIntArray;

    invoke-direct {v3}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    .line 567
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    .line 569
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mForceResizableTasks:Z

    .line 584
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    .line 587
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    .line 588
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    .line 590
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 591
    const-wide/16 v4, 0x0

    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 592
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 593
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 594
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 599
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    .line 601
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 602
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 603
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    .line 604
    const/4 v3, -0x1

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    .line 606
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    .line 609
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    .line 611
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    .line 616
    new-instance v3, Landroid/content/res/Configuration;

    invoke-direct {v3}, Landroid/content/res/Configuration;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    .line 624
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    .line 626
    new-instance v3, Landroid/util/ArraySet;

    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    .line 627
    new-instance v3, Landroid/util/ArraySet;

    invoke-direct {v3}, Landroid/util/ArraySet;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    .line 631
    new-instance v3, Landroid/util/DisplayMetrics;

    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 632
    new-instance v3, Landroid/util/DisplayMetrics;

    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 633
    new-instance v3, Landroid/util/DisplayMetrics;

    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 634
    new-instance v3, Landroid/util/DisplayMetrics;

    invoke-direct {v3}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 636
    new-instance v3, Lcom/android/server/wm/WindowManagerService$H;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 638
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    .line 640
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 641
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    .line 645
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 650
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 651
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    .line 655
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    .line 665
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    .line 723
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 728
    const/high16 v3, 0x3f800000    # 1.0f

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 729
    const/high16 v3, 0x3f800000    # 1.0f

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 730
    const/high16 v3, 0x3f800000    # 1.0f

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 731
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    .line 748
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    .line 763
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    .line 767
    new-instance v3, Landroid/util/SparseArray;

    invoke-direct {v3}, Landroid/util/SparseArray;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    .line 869
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    .line 870
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 877
    new-instance v3, Landroid/content/res/Configuration;

    invoke-direct {v3}, Landroid/content/res/Configuration;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    .line 889
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    .line 896
    new-instance v3, Lcom/android/server/wm/DisplayContentList;

    invoke-direct {v3}, Lcom/android/server/wm/DisplayContentList;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    .line 900
    new-instance v3, Lcom/android/server/wm/WindowManagerService$2;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$2;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    .line 899
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    .line 8055
    new-instance v3, Lcom/android/server/wm/InputMonitor;

    invoke-direct {v3, p0}, Lcom/android/server/wm/InputMonitor;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 11478
    new-instance v3, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    const/4 v4, 0x0

    invoke-direct {v3, v4}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;-><init>(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    .line 11827
    const/4 v3, 0x0

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mSingleHandMode:I

    .line 961
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 962
    iput-boolean p3, p0, Lcom/android/server/wm/WindowManagerService;->mHaveInputMethods:Z

    .line 963
    iput-boolean p4, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    .line 964
    iput-boolean p5, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    .line 965
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    .line 966
    const v4, 0x112000d

    .line 965
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v3

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mLimitedAlphaCompositing:Z

    .line 967
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    .line 968
    const v4, 0x1120091

    .line 967
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v3

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    .line 969
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    .line 970
    const v4, 0x11200ae

    .line 969
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v3

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    .line 971
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    .line 972
    const v4, 0x10e00a5

    .line 971
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v3

    int-to-long v4, v3

    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    .line 973
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    .line 974
    const v4, 0x11200b0

    .line 973
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v3

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAllowAnimationsInLowPowerMode:Z

    .line 975
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    .line 976
    const-class v3, Landroid/hardware/display/DisplayManagerInternal;

    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/hardware/display/DisplayManagerInternal;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 977
    new-instance v3, Lcom/android/server/wm/DisplaySettings;

    invoke-direct {v3}, Lcom/android/server/wm/DisplaySettings;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    .line 978
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    invoke-virtual {v3}, Lcom/android/server/wm/DisplaySettings;->readSettingsLocked()V

    .line 980
    new-instance v3, Lcom/android/server/wm/WallpaperController;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WallpaperController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    .line 981
    new-instance v3, Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowSurfacePlacer;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    .line 982
    new-instance v3, Lcom/android/server/wm/WindowLayersController;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowLayersController;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    .line 984
    const-class v3, Landroid/view/WindowManagerPolicy;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-static {v3, v4}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 986
    new-instance v3, Lcom/android/server/wm/PointerEventDispatcher;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const-string/jumbo v5, "WindowManager"

    invoke-virtual {v4, v5}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/android/server/wm/PointerEventDispatcher;-><init>(Landroid/view/InputChannel;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    .line 988
    new-instance v3, Landroid/view/SurfaceSession;

    invoke-direct {v3}, Landroid/view/SurfaceSession;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    .line 989
    const-string/jumbo v3, "display"

    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/hardware/display/DisplayManager;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 990
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v3}, Landroid/hardware/display/DisplayManager;->getDisplays()[Landroid/view/Display;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    .line 991
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    const/4 v3, 0x0

    array-length v5, v4

    :goto_285
    if-ge v3, v5, :cond_28f

    aget-object v0, v4, v3

    .line 992
    .local v0, "display":Landroid/view/Display;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    .line 991
    add-int/lit8 v3, v3, 0x1

    goto :goto_285

    .line 995
    .end local v0    # "display":Landroid/view/Display;
    :cond_28f
    new-instance v3, Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-direct {v3, v4, v5}, Lcom/android/server/wm/KeyguardDisableHandler;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    .line 997
    const-string/jumbo v3, "power"

    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/PowerManager;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    .line 998
    const-class v3, Landroid/os/PowerManagerInternal;

    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/os/PowerManagerInternal;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    .line 999
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    .line 1000
    new-instance v4, Lcom/android/server/wm/WindowManagerService$5;

    invoke-direct {v4, p0}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    .line 999
    invoke-virtual {v3, v4}, Landroid/os/PowerManagerInternal;->registerLowPowerModeObserver(Landroid/os/PowerManagerInternal$LowPowerModeListener;)V

    .line 1011
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManagerInternal:Landroid/os/PowerManagerInternal;

    invoke-virtual {v3}, Landroid/os/PowerManagerInternal;->getLowPowerModeEnabled()Z

    move-result v3

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    .line 1012
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    .line 1013
    const-string/jumbo v4, "SCREEN_FROZEN"

    const/4 v5, 0x1

    .line 1012
    invoke-virtual {v3, v5, v4}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    .line 1014
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1016
    new-instance v3, Lcom/android/server/wm/AppTransition;

    invoke-direct {v3, p1, p0}, Lcom/android/server/wm/AppTransition;-><init>(Landroid/content/Context;Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 1017
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    invoke-virtual {v3, v4}, Lcom/android/server/wm/AppTransition;->registerListenerLocked(Landroid/view/WindowManagerInternal$AppTransitionListener;)V

    .line 1020
    new-instance v3, Lcom/android/server/wm/BoundsAnimationController;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v5

    invoke-direct {v3, v4, v5}, Lcom/android/server/wm/BoundsAnimationController;-><init>(Lcom/android/server/wm/AppTransition;Landroid/os/Handler;)V

    .line 1019
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mBoundsAnimationController:Lcom/android/server/wm/BoundsAnimationController;

    .line 1022
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    .line 1023
    const-class v3, Landroid/app/ActivityManagerInternal;

    invoke-static {v3}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/ActivityManagerInternal;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAmInternal:Landroid/app/ActivityManagerInternal;

    .line 1024
    const-string/jumbo v3, "appops"

    invoke-virtual {p1, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/AppOpsManager;

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    .line 1026
    new-instance v2, Lcom/android/server/wm/WindowManagerService$6;

    invoke-direct {v2, p0}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    .line 1031
    .local v2, "opListener":Landroid/app/AppOpsManager$OnOpChangedInternalListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v4, 0x18

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v5, v2}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1032
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v4, 0x2d

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v5, v2}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 1035
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    .line 1036
    const-string/jumbo v4, "window_animation_scale"

    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 1035
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v3

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 1037
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    .line 1038
    const-string/jumbo v4, "transition_animation_scale"

    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 1037
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v3

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 1039
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    .line 1040
    const-string/jumbo v4, "animator_duration_scale"

    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 1039
    invoke-static {v3, v4, v5}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v3

    invoke-direct {p0, v3}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    .line 1043
    new-instance v1, Landroid/content/IntentFilter;

    invoke-direct {v1}, Landroid/content/IntentFilter;-><init>()V

    .line 1044
    .local v1, "filter":Landroid/content/IntentFilter;
    const-string/jumbo v3, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    invoke-virtual {v1, v3}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 1045
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v3, v4, v1}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 1047
    new-instance v3, Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowManagerService$SettingsObserver;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mSettingsObserver:Lcom/android/server/wm/WindowManagerService$SettingsObserver;

    .line 1049
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Landroid/os/PowerManager;

    .line 1050
    const-string/jumbo v4, "WindowManager"

    const v5, 0x2000000a

    .line 1049
    invoke-virtual {v3, v5, v4}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 1051
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 1053
    new-instance v3, Lcom/android/server/wm/WindowAnimator;

    invoke-direct {v3, p0}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    .line 1055
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v3

    .line 1056
    const v4, 0x1120035

    .line 1055
    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v3

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAllowTheaterModeWakeFromLayout:Z

    .line 1059
    const-class v3, Landroid/view/WindowManagerInternal;

    new-instance v4, Lcom/android/server/wm/WindowManagerService$LocalService;

    const/4 v5, 0x0

    invoke-direct {v4, p0, v5}, Lcom/android/server/wm/WindowManagerService$LocalService;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$LocalService;)V

    invoke-static {v3, v4}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 1060
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->initPolicy()V

    .line 1063
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v3

    invoke-virtual {v3, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 1065
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 1067
    :try_start_3a5
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->createWatermarkInTransaction()V
    :try_end_3a8
    .catchall {:try_start_3a5 .. :try_end_3a8} :catchall_3c1

    .line 1069
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 1073
    const-string/jumbo v3, "ro.sf.hwrotation"

    const/4 v4, 0x0

    invoke-static {v3, v4}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v3

    div-int/lit8 v3, v3, 0x5a

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mSfHwRotation:I

    .line 1075
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->showEmulatorDisplayOverlayIfNeeded()V

    .line 1076
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v3

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mUiHandler:Landroid/os/Handler;

    .line 960
    return-void

    .line 1068
    :catchall_3c1
    move-exception v3

    .line 1069
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 1068
    throw v3
.end method

.method synthetic constructor <init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZLcom/android/server/wm/WindowManagerService;)V
    .registers 7
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p3, "haveInputMethods"    # Z
    .param p4, "showBootMsgs"    # Z
    .param p5, "onlyCore"    # Z

    .prologue
    invoke-direct/range {p0 .. p5}, Lcom/android/server/wm/WindowManagerService;-><init>(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    return-void
.end method

.method private addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I
    .registers 29
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1175
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    .line 1176
    .local v10, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v10, :cond_9

    .line 1178
    const/16 v25, 0x0

    return v25

    .line 1180
    :cond_9
    move-object/from16 v0, p1

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 1181
    .local v9, "client":Landroid/view/IWindow;
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v17, v0

    .line 1183
    .local v17, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v24

    .line 1184
    .local v24, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-direct {v0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 1185
    .local v19, "tokenWindowList":Lcom/android/server/wm/WindowList;
    const/16 v20, 0x0

    .line 1186
    .local v20, "tokenWindowsPos":I
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v25

    if-nez v25, :cond_36

    .line 1187
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v17

    move-object/from16 v3, v24

    move-object/from16 v4, v19

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToTokenListLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;Lcom/android/server/wm/WindowList;)I

    move-result v25

    return v25

    .line 1195
    :cond_36
    const/4 v13, 0x0

    .line 1197
    .local v13, "pos":Lcom/android/server/wm/WindowState;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v16

    .line 1199
    .local v16, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/16 v18, -0x1

    .line 1200
    .local v18, "tokenNdx":I
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v25

    add-int/lit8 v15, v25, -0x1

    .end local v13    # "pos":Lcom/android/server/wm/WindowState;
    .local v15, "taskNdx":I
    :goto_43
    if-ltz v15, :cond_87

    .line 1201
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/Task;

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v21, v0

    .line 1202
    .local v21, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v25

    add-int/lit8 v18, v25, -0x1

    :goto_59
    if-ltz v18, :cond_85

    .line 1203
    move-object/from16 v0, v21

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/wm/AppWindowToken;

    .line 1204
    .local v14, "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v17

    if-ne v14, v0, :cond_c6

    .line 1205
    add-int/lit8 v18, v18, -0x1

    .line 1206
    if-gez v18, :cond_85

    .line 1207
    add-int/lit8 v15, v15, -0x1

    .line 1208
    if-ltz v15, :cond_85

    .line 1209
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/Task;

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v25

    add-int/lit8 v18, v25, -0x1

    .line 1223
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_85
    if-ltz v18, :cond_e8

    .line 1232
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_87
    if-eqz v13, :cond_ee

    .line 1234
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v25, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v26, v0

    invoke-interface/range {v26 .. v26}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v26

    invoke-virtual/range {v25 .. v26}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowToken;

    .line 1235
    .local v7, "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_be

    .line 1237
    move-object/from16 v0, p0

    invoke-direct {v0, v7, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 1238
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    .line 1239
    .local v5, "NC":I
    if-lez v5, :cond_be

    .line 1240
    const/16 v25, 0x0

    move-object/from16 v0, v19

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 1241
    .local v8, "bottom":Lcom/android/server/wm/WindowState;
    iget v0, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v25, v0

    if-gez v25, :cond_be

    .line 1242
    move-object v13, v8

    .line 1246
    .end local v5    # "NC":I
    .end local v8    # "bottom":Lcom/android/server/wm/WindowState;
    :cond_be
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1247
    return v20

    .line 1218
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_c6
    move-object/from16 v0, p0

    invoke-direct {v0, v14, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 1219
    iget-boolean v0, v14, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    move/from16 v25, v0

    if-nez v25, :cond_e4

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v25

    if-lez v25, :cond_e4

    .line 1220
    const/16 v25, 0x0

    move-object/from16 v0, v19

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    .line 1202
    :cond_e4
    add-int/lit8 v18, v18, -0x1

    goto/16 :goto_59

    .line 1200
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_e8
    add-int/lit8 v15, v15, -0x1

    goto/16 :goto_43

    .line 1252
    :cond_ec
    add-int/lit8 v15, v15, -0x1

    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_ee
    if-ltz v15, :cond_124

    .line 1253
    move-object/from16 v0, v16

    invoke-virtual {v0, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/Task;

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v21, v0

    .line 1254
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :goto_fe
    if-ltz v18, :cond_122

    .line 1255
    move-object/from16 v0, v21

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/wm/AppWindowToken;

    .line 1256
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    invoke-direct {v0, v14, v10}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 1257
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v6

    .line 1258
    .local v6, "NW":I
    if-lez v6, :cond_164

    .line 1259
    add-int/lit8 v25, v6, -0x1

    move-object/from16 v0, v19

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/WindowState;

    .line 1263
    .end local v6    # "NW":I
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_122
    if-ltz v18, :cond_ec

    .line 1269
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_124
    if-eqz v13, :cond_167

    .line 1272
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v25, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v26, v0

    invoke-interface/range {v26 .. v26}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v26

    invoke-virtual/range {v25 .. v26}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowToken;

    .line 1273
    .restart local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_15c

    .line 1274
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    .line 1275
    .restart local v5    # "NC":I
    if-lez v5, :cond_15c

    .line 1276
    iget-object v0, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v25, v0

    add-int/lit8 v26, v5, -0x1

    invoke-virtual/range {v25 .. v26}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowState;

    .line 1277
    .local v22, "top":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v25, v0

    if-ltz v25, :cond_15c

    .line 1278
    move-object/from16 v13, v22

    .line 1282
    .end local v5    # "NC":I
    .end local v22    # "top":Lcom/android/server/wm/WindowState;
    :cond_15c
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v13, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1283
    return v20

    .line 1254
    .end local v7    # "atoken":Lcom/android/server/wm/WindowToken;
    .restart local v6    # "NW":I
    .restart local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_164
    add-int/lit8 v18, v18, -0x1

    goto :goto_fe

    .line 1287
    .end local v6    # "NW":I
    .end local v14    # "t":Lcom/android/server/wm/AppWindowToken;
    .end local v21    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_167
    move-object/from16 v0, p1

    iget v12, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    .line 1289
    .local v12, "myLayer":I
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowList;->size()I

    move-result v25

    add-int/lit8 v11, v25, -0x1

    .local v11, "i":I
    :goto_171
    if-ltz v11, :cond_199

    .line 1290
    move-object/from16 v0, v24

    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/WindowState;

    .line 1295
    .local v23, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v23

    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move/from16 v25, v0

    move/from16 v0, v25

    if-gt v0, v12, :cond_1ad

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x7f2

    move/from16 v0, v25

    move/from16 v1, v26

    if-eq v0, v1, :cond_1ad

    .line 1302
    .end local v23    # "w":Lcom/android/server/wm/WindowState;
    :cond_199
    add-int/lit8 v25, v11, 0x1

    move-object/from16 v0, v24

    move/from16 v1, v25

    move-object/from16 v2, p1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1303
    const/16 v25, 0x1

    move/from16 v0, v25

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1304
    return v20

    .line 1289
    .restart local v23    # "w":Lcom/android/server/wm/WindowState;
    :cond_1ad
    add-int/lit8 v11, v11, -0x1

    goto :goto_171
.end method

.method private addAppWindowToTokenListLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowList;Lcom/android/server/wm/WindowList;)I
    .registers 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "token"    # Lcom/android/server/wm/WindowToken;
    .param p3, "windows"    # Lcom/android/server/wm/WindowList;
    .param p4, "tokenWindowList"    # Lcom/android/server/wm/WindowList;

    .prologue
    const/4 v8, 0x1

    const/4 v7, 0x0

    .line 1313
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v6, v8, :cond_18

    .line 1315
    invoke-virtual {p4, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1316
    .local v2, "lowestWindow":Lcom/android/server/wm/WindowState;
    invoke-direct {p0, v2, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1317
    iget-object v6, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-direct {p0, v2, v6}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v4

    .line 1345
    .end local v2    # "lowestWindow":Lcom/android/server/wm/WindowState;
    .local v4, "tokenWindowsPos":I
    :goto_17
    return v4

    .line 1319
    .end local v4    # "tokenWindowsPos":I
    :cond_18
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1320
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    .line 1321
    .local v5, "windowListPos":I
    add-int/lit8 v6, v5, -0x1

    invoke-virtual {p4, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1322
    .local v1, "lastWindow":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_36

    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-ne v1, v6, :cond_36

    .line 1323
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1324
    iget-object v6, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-direct {p0, v1, v6}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v4

    .restart local v4    # "tokenWindowsPos":I
    goto :goto_17

    .line 1326
    .end local v4    # "tokenWindowsPos":I
    :cond_36
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I

    move-result v3

    .line 1334
    .local v3, "newIdx":I
    add-int/lit8 v6, v3, 0x1

    invoke-virtual {p3, v6, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1335
    if-gez v3, :cond_45

    .line 1337
    const/4 v4, 0x0

    .line 1342
    .restart local v4    # "tokenWindowsPos":I
    :goto_42
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    goto :goto_17

    .line 1340
    .end local v4    # "tokenWindowsPos":I
    :cond_45
    invoke-virtual {p3, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    iget-object v7, p2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    .line 1339
    invoke-direct {p0, v6, v7}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v6

    add-int/lit8 v4, v6, 0x1

    .restart local v4    # "tokenWindowsPos":I
    goto :goto_42
.end method

.method private addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 15
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    .prologue
    .line 1376
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 1377
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 1378
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v2, :cond_9

    .line 1379
    return-void

    .line 1381
    :cond_9
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    .line 1383
    .local v1, "attached":Lcom/android/server/wm/WindowState;
    invoke-direct {p0, v6, v2}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 1387
    .local v7, "tokenWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1388
    .local v0, "NA":I
    iget v5, p1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    .line 1389
    .local v5, "sublayer":I
    const/high16 v4, -0x80000000

    .line 1390
    .local v4, "largestSublayer":I
    const/4 v10, 0x0

    .line 1392
    .local v10, "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    .end local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    .local v3, "i":I
    :goto_19
    if-ge v3, v0, :cond_38

    .line 1393
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 1394
    .local v8, "w":Lcom/android/server/wm/WindowState;
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    .line 1395
    .local v9, "wSublayer":I
    if-lt v9, v4, :cond_27

    .line 1396
    move v4, v9

    .line 1397
    move-object v10, v8

    .line 1399
    :cond_27
    if-gez v5, :cond_47

    .line 1402
    if-lt v9, v5, :cond_54

    .line 1403
    if-eqz p2, :cond_32

    .line 1405
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1407
    :cond_32
    if-ltz v9, :cond_35

    move-object v8, v1

    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    :cond_35
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1423
    .end local v9    # "wSublayer":I
    :cond_38
    :goto_38
    if-lt v3, v0, :cond_46

    .line 1424
    if-eqz p2, :cond_41

    .line 1426
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 1428
    :cond_41
    if-gez v5, :cond_57

    .line 1429
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1375
    :cond_46
    :goto_46
    return-void

    .line 1413
    .restart local v8    # "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "wSublayer":I
    :cond_47
    if-le v9, v5, :cond_54

    .line 1414
    if-eqz p2, :cond_50

    .line 1416
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1418
    :cond_50
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto :goto_38

    .line 1392
    :cond_54
    add-int/lit8 v3, v3, 0x1

    goto :goto_19

    .line 1431
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "wSublayer":I
    :cond_57
    if-ltz v4, :cond_5d

    :goto_59
    invoke-direct {p0, v10, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto :goto_46

    :cond_5d
    move-object v10, v1

    .line 1433
    goto :goto_59
.end method

.method private addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .registers 8
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1349
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 1352
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    iget v1, p1, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    .line 1354
    .local v1, "myLayer":I
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    add-int/lit8 v0, v4, -0x1

    .local v0, "i":I
    :goto_c
    if-ltz v0, :cond_20

    .line 1355
    invoke-virtual {v3, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1356
    .local v2, "otherWin":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getBaseType()I

    move-result v4

    const/16 v5, 0x7dd

    if-eq v4, v5, :cond_29

    iget v4, v2, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    if-gt v4, v1, :cond_29

    .line 1368
    .end local v2    # "otherWin":Lcom/android/server/wm/WindowState;
    :cond_20
    add-int/lit8 v0, v0, 0x1

    .line 1371
    invoke-virtual {v3, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1372
    const/4 v4, 0x1

    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1348
    return-void

    .line 1354
    .restart local v2    # "otherWin":Lcom/android/server/wm/WindowState;
    :cond_29
    add-int/lit8 v0, v0, -0x1

    goto :goto_c
.end method

.method private addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 7
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    .prologue
    .line 1442
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v3, :cond_24

    .line 1443
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 1444
    .local v1, "token":Lcom/android/server/wm/WindowToken;
    const/4 v2, 0x0

    .line 1445
    .local v2, "tokenWindowsPos":I
    iget-object v3, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_20

    .line 1446
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I

    move-result v2

    .line 1450
    :goto_f
    if-eqz p2, :cond_16

    .line 1452
    iget-object v3, v1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3, v2, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1458
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v2    # "tokenWindowsPos":I
    :cond_16
    :goto_16
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1459
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_1f

    .line 1460
    if-eqz p2, :cond_1f

    .line 1461
    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppWindowToken;->addWindow(Lcom/android/server/wm/WindowState;)V

    .line 1439
    :cond_1f
    return-void

    .line 1448
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v1    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v2    # "tokenWindowsPos":I
    :cond_20
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    goto :goto_f

    .line 1455
    .end local v1    # "token":Lcom/android/server/wm/WindowToken;
    .end local v2    # "tokenWindowsPos":I
    :cond_24
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V

    goto :goto_16
.end method

.method private adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V
    .registers 9
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotation"    # I
    .param p3, "uiMode"    # I
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    .prologue
    .line 7550
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p4, p5, p2, p3}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(IIII)I

    move-result v1

    .line 7551
    .local v1, "width":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    if-ge v1, v2, :cond_c

    .line 7552
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    .line 7554
    :cond_c
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    if-le v1, v2, :cond_12

    .line 7555
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    .line 7557
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p4, p5, p2, p3}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(IIII)I

    move-result v0

    .line 7558
    .local v0, "height":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    if-ge v0, v2, :cond_1e

    .line 7559
    iput v0, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    .line 7561
    :cond_1e
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    if-le v0, v2, :cond_24

    .line 7562
    iput v0, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    .line 7548
    :cond_24
    return-void
.end method

.method private applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z
    .registers 25
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "transit"    # I
    .param p4, "enter"    # Z
    .param p5, "isVoiceInteraction"    # Z

    .prologue
    .line 3280
    const-string/jumbo v2, "WM#applyAnimationLocked"

    const-wide/16 v6, 0x20

    invoke-static {v6, v7, v2}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 3281
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v2

    if-eqz v2, :cond_bc

    .line 3282
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v15

    .line 3283
    .local v15, "displayInfo":Landroid/view/DisplayInfo;
    iget v0, v15, Landroid/view/DisplayInfo;->appWidth:I

    move/from16 v17, v0

    .line 3284
    .local v17, "width":I
    iget v0, v15, Landroid/view/DisplayInfo;->appHeight:I

    move/from16 v16, v0

    .line 3289
    .local v16, "height":I
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v18

    .line 3290
    .local v18, "win":Lcom/android/server/wm/WindowState;
    new-instance v8, Landroid/graphics/Rect;

    const/4 v2, 0x0

    const/4 v6, 0x0

    move/from16 v0, v17

    move/from16 v1, v16

    invoke-direct {v8, v2, v6, v0, v1}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 3291
    .local v8, "frame":Landroid/graphics/Rect;
    new-instance v9, Landroid/graphics/Rect;

    .line 3292
    iget v2, v15, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v6, v15, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 3291
    const/4 v7, 0x0

    const/4 v12, 0x0

    invoke-direct {v9, v7, v12, v2, v6}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 3293
    .local v9, "displayFrame":Landroid/graphics/Rect;
    new-instance v10, Landroid/graphics/Rect;

    invoke-direct {v10}, Landroid/graphics/Rect;-><init>()V

    .line 3294
    .local v10, "insets":Landroid/graphics/Rect;
    const/4 v11, 0x0

    .line 3295
    .local v11, "surfaceInsets":Landroid/graphics/Rect;
    if-eqz v18, :cond_b2

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->inFreeformWorkspace()Z

    move-result v13

    .line 3296
    :goto_40
    if-eqz v18, :cond_58

    .line 3301
    if-eqz v13, :cond_b4

    .line 3302
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v8, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3306
    :goto_4b
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v2

    iget-object v11, v2, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    .line 3307
    .local v11, "surfaceInsets":Landroid/graphics/Rect;
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v10, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3310
    .end local v11    # "surfaceInsets":Landroid/graphics/Rect;
    :cond_58
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    if-eqz v2, :cond_60

    .line 3314
    const/16 p4, 0x0

    .line 3319
    .end local p4    # "enter":Z
    :cond_60
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget v6, v6, Landroid/content/res/Configuration;->uiMode:I

    .line 3320
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget v7, v7, Landroid/content/res/Configuration;->orientation:I

    .line 3321
    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget v14, v12, Lcom/android/server/wm/Task;->mTaskId:I

    move-object/from16 v3, p2

    move/from16 v4, p3

    move/from16 v5, p4

    move/from16 v12, p5

    .line 3319
    invoke-virtual/range {v2 .. v14}, Lcom/android/server/wm/AppTransition;->loadAnimation(Landroid/view/WindowManager$LayoutParams;IZIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZZI)Landroid/view/animation/Animation;

    move-result-object v3

    .line 3322
    .local v3, "a":Landroid/view/animation/Animation;
    if-eqz v3, :cond_a3

    .line 3324
    invoke-virtual {v8}, Landroid/graphics/Rect;->width()I

    move-result v4

    .line 3325
    .local v4, "containingWidth":I
    invoke-virtual {v8}, Landroid/graphics/Rect;->height()I

    move-result v5

    .line 3326
    .local v5, "containingHeight":I
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    .line 3327
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->canSkipFirstFrame()Z

    move-result v6

    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v7}, Lcom/android/server/wm/AppTransition;->getAppStackClipMode()I

    move-result v7

    .line 3326
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/AppWindowAnimator;->setAnimation(Landroid/view/animation/Animation;IIZI)V

    .line 3332
    .end local v3    # "a":Landroid/view/animation/Animation;
    .end local v4    # "containingWidth":I
    .end local v5    # "containingHeight":I
    .end local v8    # "frame":Landroid/graphics/Rect;
    .end local v9    # "displayFrame":Landroid/graphics/Rect;
    .end local v10    # "insets":Landroid/graphics/Rect;
    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v16    # "height":I
    .end local v17    # "width":I
    .end local v18    # "win":Lcom/android/server/wm/WindowState;
    :cond_a3
    :goto_a3
    const-wide/16 v6, 0x20

    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    .line 3334
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v2, :cond_c4

    const/4 v2, 0x1

    :goto_b1
    return v2

    .line 3295
    .restart local v8    # "frame":Landroid/graphics/Rect;
    .restart local v9    # "displayFrame":Landroid/graphics/Rect;
    .restart local v10    # "insets":Landroid/graphics/Rect;
    .local v11, "surfaceInsets":Landroid/graphics/Rect;
    .restart local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v16    # "height":I
    .restart local v17    # "width":I
    .restart local v18    # "win":Lcom/android/server/wm/WindowState;
    .restart local p4    # "enter":Z
    :cond_b2
    const/4 v13, 0x0

    .local v13, "freeform":Z
    goto :goto_40

    .line 3304
    .end local v13    # "freeform":Z
    :cond_b4
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    invoke-virtual {v8, v2}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    goto :goto_4b

    .line 3330
    .end local v8    # "frame":Landroid/graphics/Rect;
    .end local v9    # "displayFrame":Landroid/graphics/Rect;
    .end local v10    # "insets":Landroid/graphics/Rect;
    .end local v11    # "surfaceInsets":Landroid/graphics/Rect;
    .end local v15    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v16    # "height":I
    .end local v17    # "width":I
    .end local v18    # "win":Lcom/android/server/wm/WindowState;
    :cond_bc
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    goto :goto_a3

    .line 3334
    .end local p4    # "enter":Z
    :cond_c4
    const/4 v2, 0x0

    goto :goto_b1
.end method

.method static canBeImeTarget(Lcom/android/server/wm/WindowState;)Z
    .registers 6
    .param p0, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const v4, 0x20008

    const/4 v3, 0x0

    .line 1467
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int v0, v2, v4

    .line 1469
    .local v0, "fl":I
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 1470
    .local v1, "type":I
    if-eqz v0, :cond_12

    if-ne v0, v4, :cond_17

    .line 1487
    :cond_12
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v2

    return v2

    .line 1471
    :cond_17
    const/4 v2, 0x3

    if-eq v1, v2, :cond_12

    .line 1489
    return v3
.end method

.method private checkBootAnimationCompleteLocked()Z
    .registers 5

    .prologue
    const/16 v1, 0x25

    .line 6133
    const-string/jumbo v0, "bootanim"

    invoke-static {v0}, Landroid/os/SystemService;->isRunning(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_19

    .line 6134
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6135
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 6136
    const-wide/16 v2, 0xc8

    .line 6135
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 6138
    const/4 v0, 0x0

    return v0

    .line 6141
    :cond_19
    const/4 v0, 0x1

    return v0
.end method

.method private checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 8
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 3407
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    if-ne v1, v2, :cond_d

    .line 3408
    return v4

    .line 3411
    :cond_d
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_16

    .line 3413
    return v4

    .line 3415
    :cond_16
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3416
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 3415
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3417
    const-string/jumbo v2, ", uid="

    .line 3415
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3417
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 3415
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3418
    const-string/jumbo v2, " requires "

    .line 3415
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3419
    .local v0, "msg":Ljava/lang/String;
    const-string/jumbo v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3420
    return v3
.end method

.method private checkWaitingForWindowsLocked()Z
    .registers 13

    .prologue
    const/4 v11, 0x1

    .line 6002
    const/4 v2, 0x0

    .line 6003
    .local v2, "haveBootMsg":Z
    const/4 v1, 0x0

    .line 6006
    .local v1, "haveApp":Z
    const/4 v4, 0x0

    .line 6007
    .local v4, "haveWallpaper":Z
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v9}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v9

    .line 6008
    const v10, 0x1120059

    .line 6007
    invoke-virtual {v9, v10}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v9

    if-eqz v9, :cond_48

    .line 6009
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    if-eqz v9, :cond_46

    const/4 v7, 0x0

    .line 6010
    .local v7, "wallpaperEnabled":Z
    :goto_18
    const/4 v3, 0x1

    .line 6012
    .local v3, "haveKeyguard":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v8

    .line 6013
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 6014
    .local v0, "N":I
    const/4 v5, 0x0

    .end local v3    # "haveKeyguard":Z
    .local v5, "i":I
    :goto_22
    if-ge v5, v0, :cond_7a

    .line 6015
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 6016
    .local v6, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v9

    if-eqz v9, :cond_34

    iget-boolean v9, v6, Lcom/android/server/wm/WindowState;->mObscured:Z

    if-eqz v9, :cond_4a

    .line 6019
    :cond_34
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v9

    if-eqz v9, :cond_43

    .line 6020
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x7e5

    if-ne v9, v10, :cond_51

    .line 6021
    const/4 v2, 0x1

    .line 6014
    :cond_43
    :goto_43
    add-int/lit8 v5, v5, 0x1

    goto :goto_22

    .line 6009
    .end local v0    # "N":I
    .end local v5    # "i":I
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    .end local v7    # "wallpaperEnabled":Z
    .end local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_46
    const/4 v7, 0x1

    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_18

    .line 6007
    .end local v7    # "wallpaperEnabled":Z
    :cond_48
    const/4 v7, 0x0

    .restart local v7    # "wallpaperEnabled":Z
    goto :goto_18

    .line 6016
    .restart local v0    # "N":I
    .restart local v5    # "i":I
    .restart local v6    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4a
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v9

    if-nez v9, :cond_34

    .line 6017
    return v11

    .line 6022
    :cond_51
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v10, 0x2

    if-eq v9, v10, :cond_5f

    .line 6023
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v10, 0x4

    if-ne v9, v10, :cond_61

    .line 6024
    :cond_5f
    const/4 v1, 0x1

    .line 6023
    goto :goto_43

    .line 6025
    :cond_61
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x7dd

    if-ne v9, v10, :cond_6b

    .line 6026
    const/4 v4, 0x1

    goto :goto_43

    .line 6027
    :cond_6b
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v10, 0x7d0

    if-ne v9, v10, :cond_43

    .line 6028
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v9}, Landroid/view/WindowManagerPolicy;->isKeyguardDrawnLw()Z

    move-result v3

    .local v3, "haveKeyguard":Z
    goto :goto_43

    .line 6042
    .end local v3    # "haveKeyguard":Z
    .end local v6    # "w":Lcom/android/server/wm/WindowState;
    :cond_7a
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v9, :cond_80

    if-eqz v2, :cond_8e

    .line 6049
    :cond_80
    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v9, :cond_8c

    if-nez v1, :cond_88

    if-eqz v3, :cond_8f

    .line 6050
    :cond_88
    if-eqz v7, :cond_8c

    if-eqz v4, :cond_8f

    .line 6054
    :cond_8c
    const/4 v9, 0x0

    return v9

    .line 6043
    :cond_8e
    return v11

    .line 6051
    :cond_8f
    return v11
.end method

.method private computeCompatSmallestWidth(ZILandroid/util/DisplayMetrics;II)I
    .registers 21
    .param p1, "rotated"    # Z
    .param p2, "uiMode"    # I
    .param p3, "dm"    # Landroid/util/DisplayMetrics;
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    .prologue
    .line 7634
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    move-object/from16 v0, p3

    invoke-virtual {v1, v0}, Landroid/util/DisplayMetrics;->setTo(Landroid/util/DisplayMetrics;)V

    .line 7635
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 7637
    .local v5, "tmpDm":Landroid/util/DisplayMetrics;
    if-eqz p1, :cond_38

    .line 7638
    move/from16 v6, p5

    .line 7639
    .local v6, "unrotDw":I
    move/from16 v7, p4

    .line 7644
    .local v7, "unrotDh":I
    :goto_f
    const/4 v2, 0x0

    const/4 v3, 0x0

    move-object v1, p0

    move/from16 v4, p2

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    move-result v9

    .line 7645
    .local v9, "sw":I
    const/4 v10, 0x1

    move-object v8, p0

    move/from16 v11, p2

    move-object v12, v5

    move v13, v7

    move v14, v6

    invoke-direct/range {v8 .. v14}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    move-result v9

    .line 7646
    const/4 v3, 0x2

    move-object v1, p0

    move v2, v9

    move/from16 v4, p2

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    move-result v9

    .line 7647
    const/4 v10, 0x3

    move-object v8, p0

    move/from16 v11, p2

    move-object v12, v5

    move v13, v7

    move v14, v6

    invoke-direct/range {v8 .. v14}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I

    move-result v9

    .line 7648
    return v9

    .line 7641
    .end local v6    # "unrotDw":I
    .end local v7    # "unrotDh":I
    .end local v9    # "sw":I
    :cond_38
    move/from16 v6, p4

    .line 7642
    .restart local v6    # "unrotDw":I
    move/from16 v7, p5

    .restart local v7    # "unrotDh":I
    goto :goto_f
.end method

.method private computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 7

    .prologue
    const/4 v5, 0x0

    .line 10018
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 10019
    .local v1, "displayCount":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_8
    if-ge v2, v1, :cond_1c

    .line 10020
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 10021
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 10022
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_19

    .line 10023
    return-object v3

    .line 10019
    :cond_19
    add-int/lit8 v2, v2, 0x1

    goto :goto_8

    .line 10026
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_1c
    return-object v5
.end method

.method private computeNewConfigurationLocked()Landroid/content/res/Configuration;
    .registers 3

    .prologue
    .line 7538
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v1, :cond_6

    .line 7539
    const/4 v1, 0x0

    return-object v1

    .line 7541
    :cond_6
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    .line 7542
    .local v0, "config":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    iput v1, v0, Landroid/content/res/Configuration;->fontScale:F

    .line 7543
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    .line 7544
    return-object v0
.end method

.method private computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIIFLandroid/content/res/Configuration;)V
    .registers 22
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotated"    # Z
    .param p3, "uiMode"    # I
    .param p4, "dw"    # I
    .param p5, "dh"    # I
    .param p6, "density"    # F
    .param p7, "outConfig"    # Landroid/content/res/Configuration;

    .prologue
    .line 7595
    if-eqz p2, :cond_7d

    .line 7596
    move/from16 v5, p5

    .line 7597
    .local v5, "unrotDw":I
    move/from16 v6, p4

    .line 7602
    .local v6, "unrotDh":I
    :goto_6
    const/high16 v1, 0x40000000    # 2.0f

    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    .line 7603
    const/high16 v1, 0x40000000    # 2.0f

    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    .line 7604
    const/4 v1, 0x0

    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    .line 7605
    const/4 v1, 0x0

    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    .line 7606
    const/4 v3, 0x0

    move-object v1, p0

    move-object v2, p1

    move/from16 v4, p3

    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    .line 7607
    const/4 v9, 0x1

    move-object v7, p0

    move-object v8, p1

    move/from16 v10, p3

    move v11, v6

    move v12, v5

    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    .line 7608
    const/4 v3, 0x2

    move-object v1, p0

    move-object v2, p1

    move/from16 v4, p3

    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    .line 7609
    const/4 v9, 0x3

    move-object v7, p0

    move-object v8, p1

    move/from16 v10, p3

    move v11, v6

    move v12, v5

    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;IIII)V

    .line 7610
    move-object/from16 v0, p7

    iget v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    invoke-static {v1}, Landroid/content/res/Configuration;->resetScreenLayout(I)I

    move-result v2

    .line 7611
    .local v2, "sl":I
    const/4 v3, 0x0

    move-object v1, p0

    move/from16 v4, p6

    move/from16 v7, p3

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    move-result v2

    .line 7612
    const/4 v9, 0x1

    move-object v7, p0

    move v8, v2

    move/from16 v10, p6

    move v11, v6

    move v12, v5

    move/from16 v13, p3

    invoke-direct/range {v7 .. v13}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    move-result v2

    .line 7613
    const/4 v3, 0x2

    move-object v1, p0

    move/from16 v4, p6

    move/from16 v7, p3

    invoke-direct/range {v1 .. v7}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    move-result v2

    .line 7614
    const/4 v9, 0x3

    move-object v7, p0

    move v8, v2

    move/from16 v10, p6

    move v11, v6

    move v12, v5

    move/from16 v13, p3

    invoke-direct/range {v7 .. v13}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFIII)I

    move-result v2

    .line 7615
    iget v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    int-to-float v1, v1

    div-float v1, v1, p6

    float-to-int v1, v1

    move-object/from16 v0, p7

    iput v1, v0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    .line 7616
    move-object/from16 v0, p7

    iput v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    .line 7587
    return-void

    .line 7599
    .end local v2    # "sl":I
    .end local v5    # "unrotDw":I
    .end local v6    # "unrotDh":I
    :cond_7d
    move/from16 v5, p4

    .line 7600
    .restart local v5    # "unrotDw":I
    move/from16 v6, p5

    .restart local v6    # "unrotDh":I
    goto :goto_6
.end method

.method private configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 9
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 9400
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    .line 9401
    iget v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 9402
    iget v3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 9403
    iget v4, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 9400
    invoke-interface {v0, v1, v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setInitialDisplaySize(Landroid/view/Display;III)V

    .line 9405
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v6

    .line 9406
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    .line 9407
    iget v2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    iget v3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    .line 9408
    iget v4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    iget v5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    .line 9406
    invoke-interface/range {v0 .. v5}, Landroid/view/WindowManagerPolicy;->setDisplayOverscan(Landroid/view/Display;IIII)V

    .line 9399
    return-void
.end method

.method private static convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V
    .registers 6
    .param p0, "crop"    # Landroid/graphics/Rect;
    .param p1, "rot"    # I
    .param p2, "dw"    # I
    .param p3, "dh"    # I

    .prologue
    .line 6344
    const/4 v1, 0x1

    if-ne p1, v1, :cond_18

    .line 6345
    iget v0, p0, Landroid/graphics/Rect;->top:I

    .line 6346
    .local v0, "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->right:I

    sub-int v1, p2, v1

    iput v1, p0, Landroid/graphics/Rect;->top:I

    .line 6347
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    iput v1, p0, Landroid/graphics/Rect;->right:I

    .line 6348
    iget v1, p0, Landroid/graphics/Rect;->left:I

    sub-int v1, p2, v1

    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    .line 6349
    iput v0, p0, Landroid/graphics/Rect;->left:I

    .line 6343
    .end local v0    # "tmp":I
    :cond_17
    :goto_17
    return-void

    .line 6350
    :cond_18
    const/4 v1, 0x2

    if-ne p1, v1, :cond_34

    .line 6351
    iget v0, p0, Landroid/graphics/Rect;->top:I

    .line 6352
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    sub-int v1, p3, v1

    iput v1, p0, Landroid/graphics/Rect;->top:I

    .line 6353
    sub-int v1, p3, v0

    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    .line 6354
    iget v0, p0, Landroid/graphics/Rect;->right:I

    .line 6355
    iget v1, p0, Landroid/graphics/Rect;->left:I

    sub-int v1, p2, v1

    iput v1, p0, Landroid/graphics/Rect;->right:I

    .line 6356
    sub-int v1, p2, v0

    iput v1, p0, Landroid/graphics/Rect;->left:I

    goto :goto_17

    .line 6357
    .end local v0    # "tmp":I
    :cond_34
    const/4 v1, 0x3

    if-ne p1, v1, :cond_17

    .line 6358
    iget v0, p0, Landroid/graphics/Rect;->top:I

    .line 6359
    .restart local v0    # "tmp":I
    iget v1, p0, Landroid/graphics/Rect;->left:I

    iput v1, p0, Landroid/graphics/Rect;->top:I

    .line 6360
    iget v1, p0, Landroid/graphics/Rect;->bottom:I

    sub-int v1, p3, v1

    iput v1, p0, Landroid/graphics/Rect;->left:I

    .line 6361
    iget v1, p0, Landroid/graphics/Rect;->right:I

    iput v1, p0, Landroid/graphics/Rect;->bottom:I

    .line 6362
    sub-int v1, p3, v0

    iput v1, p0, Landroid/graphics/Rect;->right:I

    goto :goto_17
.end method

.method private createSurfaceControl(Landroid/view/Surface;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    .registers 9
    .param p1, "outSurface"    # Landroid/view/Surface;
    .param p2, "result"    # I
    .param p3, "win"    # Lcom/android/server/wm/WindowState;
    .param p4, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    .prologue
    .line 3141
    iget-boolean v1, p3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-nez v1, :cond_6

    .line 3142
    or-int/lit8 p2, p2, 0x4

    .line 3144
    :cond_6
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked()Lcom/android/server/wm/WindowSurfaceController;

    move-result-object v0

    .line 3145
    .local v0, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-eqz v0, :cond_10

    .line 3146
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowSurfaceController;->getSurface(Landroid/view/Surface;)V

    .line 3154
    :goto_f
    return p2

    .line 3151
    :cond_10
    const-string/jumbo v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Failed to create surface control for "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3152
    invoke-virtual {p1}, Landroid/view/Surface;->release()V

    goto :goto_f
.end method

.method private createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;
    .registers 16
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "userId"    # I
    .param p4, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p5, "bounds"    # Landroid/graphics/Rect;
    .param p6, "config"    # Landroid/content/res/Configuration;

    .prologue
    const/4 v8, 0x1

    const/4 v7, 0x0

    .line 3525
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/TaskStack;

    .line 3526
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_26

    .line 3527
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "addAppToken: invalid stackId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 3529
    :cond_26
    const/4 v1, 0x2

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v1, v7

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v1, v8

    const/16 v3, 0x7919

    invoke-static {v3, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 3530
    new-instance v0, Lcom/android/server/wm/Task;

    move v1, p1

    move v3, p3

    move-object v4, p0

    move-object v5, p5

    move-object v6, p6

    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/Task;-><init>(ILcom/android/server/wm/TaskStack;ILcom/android/server/wm/WindowManagerService;Landroid/graphics/Rect;Landroid/content/res/Configuration;)V

    .line 3531
    .local v0, "task":Lcom/android/server/wm/Task;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 3532
    iget-boolean v1, p4, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    if-eqz v1, :cond_54

    move v1, v7

    :goto_4e
    iget-boolean v3, p4, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    invoke-virtual {v2, v0, v1, v3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;ZZ)V

    .line 3533
    return-object v0

    :cond_54
    move v1, v8

    .line 3532
    goto :goto_4e
.end method

.method static dipToPixel(ILandroid/util/DisplayMetrics;)I
    .registers 4
    .param p0, "dip"    # I
    .param p1, "displayMetrics"    # Landroid/util/DisplayMetrics;

    .prologue
    .line 11385
    int-to-float v0, p0

    const/4 v1, 0x1

    invoke-static {v1, v0, p1}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v0

    float-to-int v0, v0

    return v0
.end method

.method private displayReady(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 8240
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8241
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 8242
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1a

    .line 8243
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->addDisplayLocked(I)V

    .line 8244
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->initializeDisplayBaseInfo()V

    .line 8245
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    if-eqz v1, :cond_1a

    .line 8246
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    invoke-virtual {v1}, Lcom/android/server/wm/TaskTapPointerEventListener;->init()V
    :try_end_1a
    .catchall {:try_start_3 .. :try_end_1a} :catchall_1c

    :cond_1a
    monitor-exit v2

    .line 8239
    return-void

    .line 8240
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1c
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method private doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z
    .registers 12
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "callingUid"    # I
    .param p3, "attachedWindow"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/16 v7, 0x19

    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 2268
    if-eqz p3, :cond_15

    .line 2269
    iget-object v4, p3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_13

    .line 2270
    iget-object v4, p3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget v4, v4, Lcom/android/server/wm/AppWindowToken;->targetSdk:I

    if-le v4, v7, :cond_11

    .line 2269
    :goto_10
    return v2

    :cond_11
    move v2, v3

    .line 2270
    goto :goto_10

    :cond_13
    move v2, v3

    .line 2269
    goto :goto_10

    .line 2274
    :cond_15
    :try_start_15
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    .line 2276
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    .line 2275
    const/4 v6, 0x0

    .line 2274
    invoke-virtual {v4, p1, v6, v5}, Landroid/content/pm/PackageManager;->getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v0

    .line 2277
    .local v0, "appInfo":Landroid/content/pm/ApplicationInfo;
    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v4, p2, :cond_4f

    .line 2278
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " not in UID "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 2284
    .end local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :catch_4d
    move-exception v1

    .line 2288
    :cond_4e
    return v3

    .line 2281
    .restart local v0    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_4f
    iget v4, v0, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I
    :try_end_51
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_15 .. :try_end_51} :catch_4d

    if-le v4, v7, :cond_4e

    .line 2282
    return v2
.end method

.method private static excludeWindowTypeFromTapOutTask(I)Z
    .registers 2
    .param p0, "windowType"    # I

    .prologue
    .line 1867
    sparse-switch p0, :sswitch_data_8

    .line 1873
    const/4 v0, 0x0

    return v0

    .line 1871
    :sswitch_5
    const/4 v0, 0x1

    return v0

    .line 1867
    nop

    :sswitch_data_8
    .sparse-switch
        0x7d0 -> :sswitch_5
        0x7dc -> :sswitch_5
        0x7e3 -> :sswitch_5
    .end sparse-switch
.end method

.method private findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I
    .registers 7
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1125
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 1126
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "j":I
    :goto_a
    if-ltz v0, :cond_1c

    .line 1127
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1128
    .local v1, "wentry":Lcom/android/server/wm/WindowState;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v3, v4, :cond_19

    .line 1129
    return v0

    .line 1126
    :cond_19
    add-int/lit8 v0, v0, -0x1

    goto :goto_a

    .line 1132
    .end local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :cond_1c
    const/4 v3, -0x1

    return v3
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .registers 10
    .param p1, "hashCode"    # I

    .prologue
    .line 7498
    const/4 v6, -0x1

    if-ne p1, v6, :cond_8

    .line 7500
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v6

    return-object v6

    .line 7503
    :cond_8
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 7504
    :try_start_b
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 7505
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_12
    if-ge v0, v1, :cond_3b

    .line 7506
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 7507
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 7508
    .local v2, "numWindows":I
    const/4 v4, 0x0

    .local v4, "winNdx":I
    :goto_25
    if-ge v4, v2, :cond_38

    .line 7509
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 7510
    .local v3, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
    :try_end_30
    .catchall {:try_start_b .. :try_end_30} :catchall_3e

    move-result v6

    if-ne v6, p1, :cond_35

    monitor-exit v7

    .line 7511
    return-object v3

    .line 7508
    :cond_35
    add-int/lit8 v4, v4, 0x1

    goto :goto_25

    .line 7505
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_38
    add-int/lit8 v0, v0, 0x1

    goto :goto_12

    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3b
    monitor-exit v7

    .line 7517
    const/4 v6, 0x0

    return-object v6

    .line 7503
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_3e
    move-exception v6

    monitor-exit v7

    throw v6
.end method

.method private finishPositioning()V
    .registers 4

    .prologue
    .line 7930
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7931
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    if-eqz v0, :cond_15

    .line 7932
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    invoke-virtual {v0}, Lcom/android/server/wm/TaskPositioner;->unregister()V

    .line 7933
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    .line 7934
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_17

    :cond_15
    monitor-exit v1

    .line 7926
    return-void

    .line 7930
    :catchall_17
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method static fixScale(F)F
    .registers 2
    .param p0, "scale"    # F

    .prologue
    .line 5699
    const/4 v0, 0x0

    cmpg-float v0, p0, v0

    if-gez v0, :cond_b

    const/4 p0, 0x0

    .line 5701
    :cond_6
    :goto_6
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    move-result v0

    return v0

    .line 5700
    :cond_b
    const/high16 v0, 0x41a00000    # 20.0f

    cmpl-float v0, p0, v0

    if-lez v0, :cond_6

    const/high16 p0, 0x41a00000    # 20.0f

    goto :goto_6
.end method

.method private getAppSpecifiedOrientation()I
    .registers 15

    .prologue
    .line 3696
    const/4 v7, -0x1

    .line 3697
    .local v7, "lastOrientation":I
    const/4 v3, 0x0

    .line 3698
    .local v3, "findingBehind":Z
    const/4 v6, 0x0

    .line 3699
    .local v6, "lastFullscreen":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 3700
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v10

    .line 3701
    .local v10, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v13, 0x3

    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    move-result v13

    if-nez v13, :cond_4e

    .line 3702
    const/4 v13, 0x2

    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    move-result v5

    .line 3704
    :goto_17
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v13

    iget-object v13, v13, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    invoke-virtual {v13}, Lcom/android/server/wm/DockedStackDividerController;->isMinimizedDock()Z

    move-result v2

    .line 3705
    .local v2, "dockMinimized":Z
    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    move-result v13

    add-int/lit8 v9, v13, -0x1

    .end local v3    # "findingBehind":Z
    .end local v6    # "lastFullscreen":Z
    .local v9, "taskNdx":I
    :goto_27
    if-ltz v9, :cond_87

    .line 3706
    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/wm/Task;

    iget-object v12, v13, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 3707
    .local v12, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v12}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v13

    add-int/lit8 v4, v13, -0x1

    .line 3708
    .local v4, "firstToken":I
    move v11, v4

    .local v11, "tokenNdx":I
    :goto_38
    if-ltz v11, :cond_84

    .line 3709
    invoke-virtual {v12, v11}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/AppWindowToken;

    .line 3715
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v3, :cond_46

    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-eqz v13, :cond_50

    .line 3721
    :cond_46
    if-ne v11, v4, :cond_57

    .line 3725
    const/4 v13, 0x3

    if-eq v7, v13, :cond_57

    if-eqz v6, :cond_57

    .line 3728
    return v7

    .line 3701
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "dockMinimized":Z
    .end local v4    # "firstToken":I
    .end local v9    # "taskNdx":I
    .end local v11    # "tokenNdx":I
    .end local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    .restart local v3    # "findingBehind":Z
    .restart local v6    # "lastFullscreen":Z
    :cond_4e
    const/4 v5, 0x1

    .local v5, "inMultiWindow":Z
    goto :goto_17

    .line 3715
    .end local v3    # "findingBehind":Z
    .end local v5    # "inMultiWindow":Z
    .end local v6    # "lastFullscreen":Z
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v2    # "dockMinimized":Z
    .restart local v4    # "firstToken":I
    .restart local v9    # "taskNdx":I
    .restart local v11    # "tokenNdx":I
    .restart local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_50
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-eqz v13, :cond_46

    .line 3708
    :cond_54
    :goto_54
    add-int/lit8 v11, v11, -0x1

    goto :goto_38

    .line 3733
    :cond_57
    iget-boolean v13, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-nez v13, :cond_54

    .line 3742
    if-eqz v5, :cond_67

    iget-object v13, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    invoke-virtual {v13}, Lcom/android/server/wm/Task;->isHomeTask()Z

    move-result v13

    if-eqz v13, :cond_54

    if-eqz v2, :cond_54

    .line 3746
    :cond_67
    if-nez v11, :cond_6b

    .line 3748
    iget v7, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 3751
    :cond_6b
    iget v8, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 3755
    .local v8, "or":I
    iget-boolean v6, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 3756
    .local v6, "lastFullscreen":Z
    if-eqz v6, :cond_75

    const/4 v13, 0x3

    if-eq v8, v13, :cond_75

    .line 3759
    return v8

    .line 3762
    :cond_75
    const/4 v13, -0x1

    if-eq v8, v13, :cond_7c

    const/4 v13, 0x3

    if-eq v8, v13, :cond_7c

    .line 3765
    return v8

    .line 3767
    :cond_7c
    const/4 v13, 0x3

    if-ne v8, v13, :cond_82

    const/4 v13, 0x1

    :goto_80
    or-int/2addr v3, v13

    .local v3, "findingBehind":Z
    goto :goto_54

    .end local v3    # "findingBehind":Z
    :cond_82
    const/4 v13, 0x0

    goto :goto_80

    .line 3705
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "lastFullscreen":Z
    .end local v8    # "or":I
    :cond_84
    add-int/lit8 v9, v9, -0x1

    goto :goto_27

    .line 3776
    .end local v4    # "firstToken":I
    .end local v11    # "tokenNdx":I
    .end local v12    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_87
    if-eqz v5, :cond_8b

    const/4 v13, -0x1

    :goto_8a
    return v13

    :cond_8b
    iget v13, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    goto :goto_8a
.end method

.method private getFocusedWindow()Lcom/android/server/wm/WindowState;
    .registers 3

    .prologue
    .line 8104
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 8105
    :try_start_3
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_9

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 8104
    :catchall_9
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 2

    .prologue
    .line 8110
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    return-object v0
.end method

.method private getForcedDisplayDensityForUserLocked(I)I
    .registers 8
    .param p1, "userId"    # I

    .prologue
    const/4 v5, 0x0

    const/4 v4, 0x0

    .line 9346
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    .line 9347
    const-string/jumbo v3, "display_density_forced"

    .line 9346
    invoke-static {v2, v3, p1}, Landroid/provider/Settings$Secure;->getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v0

    .line 9348
    .local v0, "densityStr":Ljava/lang/String;
    if-eqz v0, :cond_17

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    if-nez v2, :cond_1e

    .line 9349
    :cond_17
    const-string/jumbo v2, "ro.config.density_override"

    invoke-static {v2, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 9351
    :cond_1e
    if-eqz v0, :cond_2c

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_2c

    .line 9353
    :try_start_26
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_29
    .catch Ljava/lang/NumberFormatException; {:try_start_26 .. :try_end_29} :catch_2b

    move-result v2

    return v2

    .line 9354
    :catch_2b
    move-exception v1

    .line 9357
    :cond_2c
    return v4
.end method

.method private getNonDecorInsetsLocked(Landroid/graphics/Rect;)V
    .registers 7
    .param p1, "outInsets"    # Landroid/graphics/Rect;

    .prologue
    .line 11423
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v0

    .line 11424
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget v2, v0, Landroid/view/DisplayInfo;->rotation:I

    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    invoke-interface {v1, v2, v3, v4, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorInsetsLw(IIILandroid/graphics/Rect;)V

    .line 11422
    return-void
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .registers 9
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    .prologue
    .line 10259
    array-length v3, p0

    if-ge p1, v3, :cond_13

    .line 10260
    aget-object v1, p0, p1

    .line 10261
    .local v1, "str":Ljava/lang/String;
    if-eqz v1, :cond_13

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v3

    if-lez v3, :cond_13

    .line 10263
    :try_start_d
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_10} :catch_12

    move-result v2

    .line 10264
    .local v2, "val":I
    return v2

    .line 10265
    .end local v2    # "val":I
    :catch_12
    move-exception v0

    .line 10269
    .end local v1    # "str":Ljava/lang/String;
    :cond_13
    if-nez p2, :cond_16

    .line 10270
    return p3

    .line 10272
    :cond_16
    int-to-float v3, p3

    invoke-static {p2, v3, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v3

    float-to-int v2, v3

    .line 10273
    .restart local v2    # "val":I
    return v2
.end method

.method private getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;
    .registers 8
    .param p1, "token"    # Lcom/android/server/wm/WindowToken;
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 1142
    new-instance v3, Lcom/android/server/wm/WindowList;

    invoke-direct {v3}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 1143
    .local v3, "windowList":Lcom/android/server/wm/WindowList;
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1144
    .local v0, "count":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_c
    if-ge v1, v0, :cond_22

    .line 1145
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1146
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    if-ne v4, p2, :cond_1f

    .line 1147
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 1144
    :cond_1f
    add-int/lit8 v1, v1, 0x1

    goto :goto_c

    .line 1150
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_22
    return-object v3
.end method

.method private handleDisplayChangedLocked(I)V
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 11221
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 11222
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_9

    .line 11223
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 11225
    :cond_9
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    .line 11220
    return-void
.end method

.method private handleDisplayRemovedLocked(I)V
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 11198
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 11199
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_24

    .line 11200
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->isAnimating()Z

    move-result v1

    if-eqz v1, :cond_10

    .line 11201
    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/server/wm/DisplayContent;->mDeferredRemoval:Z

    .line 11202
    return-void

    .line 11205
    :cond_10
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->delete(I)V

    .line 11206
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->close()V

    .line 11207
    if-nez p1, :cond_24

    .line 11208
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 11209
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 11212
    :cond_24
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowAnimator;->removeDisplayLocked(I)V

    .line 11213
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V

    .line 11197
    return-void
.end method

.method private handleTapOutsideTask(Lcom/android/server/wm/DisplayContent;II)V
    .registers 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "x"    # I
    .param p3, "y"    # I

    .prologue
    .line 7858
    const/4 v2, -0x1

    .line 7859
    .local v2, "taskId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 7860
    :try_start_4
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->findTaskForControlPoint(II)Lcom/android/server/wm/Task;

    move-result-object v1

    .line 7861
    .local v1, "task":Lcom/android/server/wm/Task;
    if-eqz v1, :cond_24

    .line 7863
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->getTopVisibleAppMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v3

    int-to-float v5, p2

    int-to-float v6, p3

    const/4 v7, 0x1

    .line 7862
    invoke-direct {p0, v3, v7, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_14
    .catchall {:try_start_4 .. :try_end_14} :catchall_29

    move-result v3

    if-nez v3, :cond_19

    monitor-exit v4

    .line 7864
    return-void

    .line 7866
    :cond_19
    :try_start_19
    iget v2, v1, Lcom/android/server/wm/Task;->mTaskId:I
    :try_end_1b
    .catchall {:try_start_19 .. :try_end_1b} :catchall_29

    :goto_1b
    monitor-exit v4

    .line 7871
    if-ltz v2, :cond_23

    .line 7873
    :try_start_1e
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v3, v2}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_23
    .catch Landroid/os/RemoteException; {:try_start_1e .. :try_end_23} :catch_2c

    .line 7857
    :cond_23
    :goto_23
    return-void

    .line 7868
    :cond_24
    :try_start_24
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->taskIdFromPoint(II)I
    :try_end_27
    .catchall {:try_start_24 .. :try_end_27} :catchall_29

    move-result v2

    goto :goto_1b

    .line 7859
    .end local v1    # "task":Lcom/android/server/wm/Task;
    :catchall_29
    move-exception v3

    monitor-exit v4

    throw v3

    .line 7874
    .restart local v1    # "task":Lcom/android/server/wm/Task;
    :catch_2c
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_23
.end method

.method private indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .registers 6
    .param p1, "targetWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "windows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 1160
    invoke-virtual {p2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_6
    if-ltz v0, :cond_25

    .line 1161
    invoke-virtual {p2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1162
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-ne v1, p1, :cond_11

    .line 1163
    return v0

    .line 1165
    :cond_11
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_22

    .line 1166
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v2

    if-ltz v2, :cond_22

    .line 1167
    return v0

    .line 1160
    :cond_22
    add-int/lit8 v0, v0, -0x1

    goto :goto_6

    .line 1171
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_25
    const/4 v2, -0x1

    return v2
.end method

.method private initPolicy()V
    .registers 5

    .prologue
    .line 949
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/WindowManagerService$4;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    .line 956
    const-wide/16 v2, 0x0

    .line 949
    invoke-virtual {v0, v1, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 948
    return-void
.end method

.method private isSystemSecure()Z
    .registers 4

    .prologue
    .line 7206
    const-string/jumbo v0, "1"

    const-string/jumbo v1, "ro.secure"

    const-string/jumbo v2, "1"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_25

    .line 7207
    const-string/jumbo v0, "0"

    const-string/jumbo v1, "ro.debuggable"

    const-string/jumbo v2, "0"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 7206
    :goto_24
    return v0

    :cond_25
    const/4 v0, 0x0

    goto :goto_24
.end method

.method private judgeSingleHandSwitchBySize()Z
    .registers 3

    .prologue
    .line 11864
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    const v1, 0x11200dd

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    return v0
.end method

.method static logSurface(Landroid/view/SurfaceControl;Ljava/lang/String;Ljava/lang/String;)V
    .registers 6
    .param p0, "s"    # Landroid/view/SurfaceControl;
    .param p1, "title"    # Ljava/lang/String;
    .param p2, "msg"    # Ljava/lang/String;

    .prologue
    .line 2686
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "  SURFACE "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " / "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2687
    .local v0, "str":Ljava/lang/String;
    const-string/jumbo v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2685
    return-void
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Z)V
    .registers 6
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "withStackTrace"    # Z

    .prologue
    .line 2677
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "  SURFACE "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 2678
    .local v0, "str":Ljava/lang/String;
    if-eqz p2, :cond_27

    .line 2679
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    invoke-static {v1, v0}, Lcom/android/server/wm/WindowManagerService;->logWithStack(Ljava/lang/String;Ljava/lang/String;)V

    .line 2676
    :goto_26
    return-void

    .line 2681
    :cond_27
    const-string/jumbo v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_26
.end method

.method static logWithStack(Ljava/lang/String;Ljava/lang/String;)V
    .registers 3
    .param p0, "tag"    # Ljava/lang/String;
    .param p1, "s"    # Ljava/lang/String;

    .prologue
    .line 2691
    const/4 v0, 0x0

    .line 2696
    .local v0, "e":Ljava/lang/RuntimeException;
    invoke-static {p0, p1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2690
    return-void
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)Lcom/android/server/wm/WindowManagerService;
    .registers 13
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "im"    # Lcom/android/server/input/InputManagerService;
    .param p2, "haveInputMethods"    # Z
    .param p3, "showBootMsgs"    # Z
    .param p4, "onlyCore"    # Z

    .prologue
    .line 937
    const/4 v0, 0x1

    new-array v1, v0, [Lcom/android/server/wm/WindowManagerService;

    .line 938
    .local v1, "holder":[Lcom/android/server/wm/WindowManagerService;
    invoke-static {}, Lcom/android/server/DisplayThread;->getHandler()Landroid/os/Handler;

    move-result-object v7

    new-instance v0, Lcom/android/server/wm/WindowManagerService$3;

    move-object v2, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    move v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService$3;-><init>([Lcom/android/server/wm/WindowManagerService;Landroid/content/Context;Lcom/android/server/input/InputManagerService;ZZZ)V

    .line 944
    const-wide/16 v2, 0x0

    .line 938
    invoke-virtual {v7, v0, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 945
    const/4 v0, 0x0

    aget-object v0, v1, v0

    return-object v0
.end method

.method private newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;
    .registers 9
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 11097
    new-instance v0, Lcom/android/server/wm/DisplayContent;

    invoke-direct {v0, p1, p0}, Lcom/android/server/wm/DisplayContent;-><init>(Landroid/view/Display;Lcom/android/server/wm/WindowManagerService;)V

    .line 11098
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v1

    .line 11100
    .local v1, "displayId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 11102
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v2

    .line 11103
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    .line 11104
    .local v3, "rect":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    iget-object v5, v2, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    iget-object v6, v2, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    invoke-virtual {v4, v5, v6, v3}, Lcom/android/server/wm/DisplaySettings;->getOverscanLocked(Ljava/lang/String;Ljava/lang/String;Landroid/graphics/Rect;)V

    .line 11105
    iget v4, v3, Landroid/graphics/Rect;->left:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanLeft:I

    .line 11106
    iget v4, v3, Landroid/graphics/Rect;->top:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanTop:I

    .line 11107
    iget v4, v3, Landroid/graphics/Rect;->right:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanRight:I

    .line 11108
    iget v4, v3, Landroid/graphics/Rect;->bottom:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanBottom:I

    .line 11109
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v4, v1, v2}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 11110
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 11113
    if-nez v1, :cond_4b

    .line 11114
    new-instance v4, Lcom/android/server/wm/TaskTapPointerEventListener;

    invoke-direct {v4, p0, v0}, Lcom/android/server/wm/TaskTapPointerEventListener;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;)V

    iput-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    .line 11115
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/TaskTapPointerEventListener;

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 11116
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 11119
    :cond_4b
    return-object v0
.end method

.method private notifyFocusChanged()V
    .registers 6

    .prologue
    .line 7484
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 7485
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_2a

    move-result v3

    if-eqz v3, :cond_d

    monitor-exit v4

    .line 7486
    return-void

    .line 7488
    :cond_d
    :try_start_d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 7489
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1d
    .catchall {:try_start_d .. :try_end_1d} :catchall_2a

    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    .line 7491
    array-length v0, v2

    .line 7492
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_20
    if-ge v1, v0, :cond_2d

    .line 7493
    aget-object v3, v2, v1

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    .line 7492
    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    .line 7484
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_2a
    move-exception v3

    monitor-exit v4

    throw v3

    .line 7482
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_2d
    return-void
.end method

.method private notifyWindowsChanged()V
    .registers 6

    .prologue
    .line 7469
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 7470
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_2a

    move-result v3

    if-eqz v3, :cond_d

    monitor-exit v4

    .line 7471
    return-void

    .line 7473
    :cond_d
    :try_start_d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 7474
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :try_end_1d
    .catchall {:try_start_d .. :try_end_1d} :catchall_2a

    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4

    .line 7476
    array-length v0, v2

    .line 7477
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_20
    if-ge v1, v0, :cond_2d

    .line 7478
    aget-object v3, v2, v1

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    .line 7477
    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    .line 7469
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_2a
    move-exception v3

    monitor-exit v4

    throw v3

    .line 7467
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :cond_2d
    return-void
.end method

.method private onConfigurationChanged()[I
    .registers 7

    .prologue
    .line 3936
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->onConfigurationChanged()V

    .line 3938
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 3939
    .local v0, "defaultDisplayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    invoke-virtual {v4, v0}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_16

    .line 3943
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    invoke-virtual {v4, v0}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    .line 3945
    :cond_16
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContentList;->size()I

    move-result v4

    add-int/lit8 v1, v4, -0x1

    .local v1, "i":I
    :goto_1e
    if-ltz v1, :cond_2e

    .line 3946
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/DisplayContentList;->remove(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/DisplayContent;

    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 3945
    add-int/lit8 v1, v1, -0x1

    goto :goto_1e

    .line 3949
    :cond_2e
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v4

    invoke-virtual {v4}, Lcom/android/server/wm/DockedStackDividerController;->onConfigurationChanged()V

    .line 3950
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 3951
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v3, v4, -0x1

    .local v3, "stackNdx":I
    :goto_42
    if-ltz v3, :cond_60

    .line 3952
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/TaskStack;

    .line 3953
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->onConfigurationChanged()Z

    move-result v4

    if-eqz v4, :cond_5d

    .line 3954
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    iget v5, v2, Lcom/android/server/wm/TaskStack;->mStackId:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3951
    :cond_5d
    add-int/lit8 v3, v3, -0x1

    goto :goto_42

    .line 3957
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_60
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_6a

    .line 3958
    const/4 v4, 0x0

    .line 3957
    :goto_69
    return-object v4

    .line 3958
    :cond_6a
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mChangedStackList:Ljava/util/ArrayList;

    invoke-static {v4}, Lcom/android/internal/util/ArrayUtils;->convertToIntArray(Ljava/util/List;)[I

    move-result-object v4

    goto :goto_69
.end method

.method private placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 6
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1099
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 1100
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    .line 1104
    .local v0, "i":I
    add-int/lit8 v2, v0, 0x1

    invoke-virtual {v1, v2, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1105
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1098
    return-void
.end method

.method private placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 8
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1109
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 1110
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    .line 1114
    .local v0, "i":I
    if-gez v0, :cond_30

    .line 1115
    const-string/jumbo v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "placeWindowBefore: Unable to find "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " in "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 1116
    const/4 v0, 0x0

    .line 1118
    :cond_30
    invoke-virtual {v1, v0, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1119
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1108
    return-void
.end method

.method private prepareFreezingAllTaskBounds()V
    .registers 6

    .prologue
    .line 3926
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v0, v4, -0x1

    .local v0, "i":I
    :goto_8
    if-ltz v0, :cond_2d

    .line 3927
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v3

    .line 3928
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v2, v4, -0x1

    .local v2, "stackNdx":I
    :goto_1c
    if-ltz v2, :cond_2a

    .line 3929
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 3930
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->prepareFreezingTaskBounds()V

    .line 3928
    add-int/lit8 v2, v2, -0x1

    goto :goto_1c

    .line 3926
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_2a
    add-int/lit8 v0, v0, -0x1

    goto :goto_8

    .line 3925
    .end local v2    # "stackNdx":I
    .end local v3    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    :cond_2d
    return-void
.end method

.method private prepareNoneTransitionForRelaunching(Lcom/android/server/wm/AppWindowToken;)V
    .registers 4
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v1, 0x0

    .line 2327
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v0, :cond_d

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_e

    .line 2322
    :cond_d
    :goto_d
    return-void

    .line 2327
    :cond_e
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->isRelaunching()Z

    move-result v0

    if-eqz v0, :cond_d

    .line 2328
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v0, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 2329
    invoke-virtual {p0, v1, v1}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    .line 2330
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    goto :goto_d
.end method

.method private prepareWindowReplacementTransition(Lcom/android/server/wm/AppWindowToken;)Z
    .registers 12
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v9, 0x1

    const/4 v5, 0x0

    .line 2295
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    .line 2296
    const/4 v3, 0x0

    .line 2297
    .local v3, "replacedWindow":Lcom/android/server/wm/WindowState;
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    add-int/lit8 v2, v4, -0x1

    .end local v3    # "replacedWindow":Lcom/android/server/wm/WindowState;
    .local v2, "i":I
    :goto_e
    if-ltz v2, :cond_2a

    if-nez v3, :cond_2a

    .line 2298
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 2299
    .local v0, "candidate":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    if-eqz v4, :cond_27

    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    if-eqz v4, :cond_27

    .line 2300
    iget-boolean v4, v0, Lcom/android/server/wm/WindowState;->mAnimateReplacingWindow:Z

    .line 2299
    if-eqz v4, :cond_27

    .line 2301
    move-object v3, v0

    .line 2297
    :cond_27
    add-int/lit8 v2, v2, -0x1

    goto :goto_e

    .line 2304
    .end local v0    # "candidate":Lcom/android/server/wm/WindowState;
    :cond_2a
    if-nez v3, :cond_2d

    .line 2307
    return v5

    .line 2311
    :cond_2d
    iget-object v1, v3, Lcom/android/server/wm/WindowState;->mVisibleFrame:Landroid/graphics/Rect;

    .line 2314
    .local v1, "frame":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v4, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 2315
    const/16 v4, 0x12

    invoke-virtual {p0, v4, v9}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    .line 2316
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    iget v5, v1, Landroid/graphics/Rect;->left:I

    iget v6, v1, Landroid/graphics/Rect;->top:I

    .line 2317
    invoke-virtual {v1}, Landroid/graphics/Rect;->width()I

    move-result v7

    invoke-virtual {v1}, Landroid/graphics/Rect;->height()I

    move-result v8

    .line 2316
    invoke-virtual {v4, v5, v6, v7, v8}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V

    .line 2318
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    .line 2319
    return v9
.end method

.method private final reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I
    .registers 9
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "index"    # I
    .param p3, "token"    # Lcom/android/server/wm/WindowToken;

    .prologue
    .line 5033
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5034
    .local v0, "NW":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_7
    if-ge v1, v0, :cond_22

    .line 5035
    iget-object v4, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 5036
    .local v2, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 5037
    .local v3, "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    if-eq v3, p1, :cond_19

    if-nez v3, :cond_1f

    .line 5038
    :cond_19
    iput-object p1, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 5039
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result p2

    .line 5034
    :cond_1f
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 5042
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .end local v3    # "winDisplayContent":Lcom/android/server/wm/DisplayContent;
    :cond_22
    return p2
.end method

.method private final reAddWindowLocked(ILcom/android/server/wm/WindowState;)I
    .registers 10
    .param p1, "index"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v6, 0x0

    .line 5000
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 5002
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5003
    .local v0, "NCW":I
    const/4 v3, 0x0

    .line 5004
    .local v3, "winAdded":Z
    const/4 v2, 0x0

    .local v2, "j":I
    :goto_d
    if-ge v2, v0, :cond_2f

    .line 5005
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 5006
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_25

    iget v5, v1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    if-ltz v5, :cond_25

    .line 5009
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 5010
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 5011
    add-int/lit8 p1, p1, 0x1

    .line 5012
    const/4 v3, 0x1

    .line 5016
    :cond_25
    iput-boolean v6, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 5017
    invoke-virtual {v4, p1, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 5018
    add-int/lit8 p1, p1, 0x1

    .line 5004
    add-int/lit8 v2, v2, 0x1

    goto :goto_d

    .line 5020
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_2f
    if-nez v3, :cond_38

    .line 5023
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 5024
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 5025
    add-int/lit8 p1, p1, 0x1

    .line 5027
    :cond_38
    const/4 v5, 0x1

    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 5028
    return p1
.end method

.method private reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V
    .registers 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v2, 0x0

    .line 1687
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 1691
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    .line 1692
    .local v0, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v1

    .line 1693
    .local v1, "wpos":I
    if-ltz v1, :cond_17

    .line 1695
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 1696
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1697
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 1686
    :cond_17
    return-void
.end method

.method private readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/16 v11, 0x2c

    const/4 v9, 0x0

    const/4 v10, 0x0

    .line 9183
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v7

    .line 9184
    const-string/jumbo v8, "display_size_forced"

    .line 9183
    invoke-static {v7, v8}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 9185
    .local v5, "sizeStr":Ljava/lang/String;
    if-eqz v5, :cond_19

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v7

    if-nez v7, :cond_20

    .line 9186
    :cond_19
    const-string/jumbo v7, "ro.config.size_override"

    invoke-static {v7, v9}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    .line 9188
    :cond_20
    if-eqz v5, :cond_78

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v7

    if-lez v7, :cond_78

    .line 9189
    invoke-virtual {v5, v11}, Ljava/lang/String;->indexOf(I)I

    move-result v4

    .line 9190
    .local v4, "pos":I
    if-lez v4, :cond_78

    invoke-virtual {v5, v11}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v7

    if-ne v7, v4, :cond_78

    .line 9193
    const/4 v7, 0x0

    :try_start_35
    invoke-virtual {v5, v7, v4}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v7

    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v6

    .line 9194
    .local v6, "width":I
    add-int/lit8 v7, v4, 0x1

    invoke-virtual {v5, v7}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v7

    invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2

    .line 9195
    .local v2, "height":I
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    if-ne v7, v6, :cond_4f

    .line 9196
    iget v7, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    if-eq v7, v2, :cond_78

    .line 9197
    :cond_4f
    const-string/jumbo v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "FORCED DISPLAY SIZE: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string/jumbo v9, "x"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9198
    iput v6, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 9199
    iput v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I
    :try_end_78
    .catch Ljava/lang/NumberFormatException; {:try_start_35 .. :try_end_78} :catch_9e

    .line 9207
    .end local v2    # "height":I
    .end local v4    # "pos":I
    .end local v6    # "width":I
    :cond_78
    :goto_78
    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    invoke-direct {p0, v7}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    move-result v0

    .line 9208
    .local v0, "density":I
    if-eqz v0, :cond_82

    .line 9209
    iput v0, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 9213
    :cond_82
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v7

    .line 9214
    const-string/jumbo v8, "display_scaling_force"

    .line 9213
    invoke-static {v7, v8, v10}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v3

    .line 9215
    .local v3, "mode":I
    if-eqz v3, :cond_9d

    .line 9216
    const-string/jumbo v7, "WindowManager"

    const-string/jumbo v8, "FORCED DISPLAY SCALING DISABLED"

    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9217
    const/4 v7, 0x1

    iput-boolean v7, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    .line 9181
    :cond_9d
    return-void

    .line 9201
    .end local v0    # "density":I
    .end local v3    # "mode":I
    .restart local v4    # "pos":I
    :catch_9e
    move-exception v1

    .local v1, "ex":Ljava/lang/NumberFormatException;
    goto :goto_78
.end method

.method private rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 31
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 9489
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v23

    .line 9490
    .local v23, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 9492
    .local v4, "NW":I
    const/4 v8, -0x1

    .line 9493
    .local v8, "lastBelow":I
    const/4 v9, 0x0

    .line 9495
    .local v9, "numRemoved":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    array-length v0, v0

    move/from16 v26, v0

    move/from16 v0, v26

    if-ge v0, v4, :cond_27

    .line 9496
    add-int/lit8 v26, v4, 0xa

    move/from16 v0, v26

    new-array v0, v0, [Lcom/android/server/wm/WindowState;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    .line 9500
    :cond_27
    const/4 v6, 0x0

    .line 9501
    .local v6, "i":I
    :goto_28
    if-ge v6, v4, :cond_7d

    .line 9502
    move-object/from16 v0, v23

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/WindowState;

    .line 9503
    .local v21, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v26, v0

    if-eqz v26, :cond_5f

    .line 9504
    move-object/from16 v0, v23

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowState;

    .line 9505
    .local v22, "win":Lcom/android/server/wm/WindowState;
    const/16 v26, 0x1

    move/from16 v0, v26

    move-object/from16 v1, v22

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 9506
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    move-object/from16 v26, v0

    aput-object v22, v26, v9

    .line 9507
    const/16 v26, 0x1

    move/from16 v0, v26

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 9509
    add-int/lit8 v4, v4, -0x1

    .line 9510
    add-int/lit8 v9, v9, 0x1

    .line 9511
    goto :goto_28

    .line 9512
    .end local v22    # "win":Lcom/android/server/wm/WindowState;
    :cond_5f
    add-int/lit8 v26, v6, -0x1

    move/from16 v0, v26

    if-ne v8, v0, :cond_7a

    .line 9513
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v26, v0

    const/16 v27, 0x7dd

    move/from16 v0, v26

    move/from16 v1, v27

    if-ne v0, v1, :cond_7a

    .line 9514
    move v8, v6

    .line 9517
    :cond_7a
    add-int/lit8 v6, v6, 0x1

    goto :goto_28

    .line 9522
    .end local v21    # "w":Lcom/android/server/wm/WindowState;
    :cond_7d
    add-int/lit8 v8, v8, 0x1

    .line 9523
    move v6, v8

    .line 9529
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v15

    .line 9530
    .local v15, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 9531
    .local v10, "numStacks":I
    const/4 v14, 0x0

    .local v14, "stackNdx":I
    :goto_89
    if-ge v14, v10, :cond_b2

    .line 9532
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/TaskStack;

    move-object/from16 v0, v26

    iget-object v5, v0, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 9533
    .local v5, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v3

    .line 9534
    .local v3, "NT":I
    const/4 v7, 0x0

    .local v7, "j":I
    :goto_9a
    if-ge v7, v3, :cond_af

    .line 9535
    invoke-virtual {v5, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/WindowToken;

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v26

    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    move-result v6

    .line 9534
    add-int/lit8 v7, v7, 0x1

    goto :goto_9a

    .line 9531
    :cond_af
    add-int/lit8 v14, v14, 0x1

    goto :goto_89

    .line 9540
    .end local v3    # "NT":I
    .end local v5    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "j":I
    :cond_b2
    const/4 v14, 0x0

    :goto_b3
    if-ge v14, v10, :cond_10e

    .line 9541
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/TaskStack;

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v18

    .line 9542
    .local v18, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v11

    .line 9543
    .local v11, "numTasks":I
    const/16 v17, 0x0

    .local v17, "taskNdx":I
    :goto_c5
    move/from16 v0, v17

    if-ge v0, v11, :cond_10b

    .line 9544
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/Task;

    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v20, v0

    .line 9545
    .local v20, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v12

    .line 9546
    .local v12, "numTokens":I
    const/16 v19, 0x0

    .local v19, "tokenNdx":I
    :goto_df
    move/from16 v0, v19

    if-ge v0, v12, :cond_108

    .line 9547
    move-object/from16 v0, v20

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/AppWindowToken;

    .line 9548
    .local v25, "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    move/from16 v26, v0

    if-eqz v26, :cond_fb

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/AppWindowToken;->waitingForReplacement()Z

    move-result v26

    if-eqz v26, :cond_105

    .line 9551
    :cond_fb
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v25

    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    move-result v6

    .line 9546
    :cond_105
    add-int/lit8 v19, v19, 0x1

    goto :goto_df

    .line 9543
    .end local v25    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_108
    add-int/lit8 v17, v17, 0x1

    goto :goto_c5

    .line 9540
    .end local v12    # "numTokens":I
    .end local v19    # "tokenNdx":I
    .end local v20    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_10b
    add-int/lit8 v14, v14, 0x1

    goto :goto_b3

    .line 9556
    .end local v11    # "numTasks":I
    .end local v17    # "taskNdx":I
    .end local v18    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_10e
    sub-int/2addr v6, v8

    .line 9557
    if-eq v6, v9, :cond_1ed

    .line 9558
    const/16 v26, 0x1

    move/from16 v0, v26

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9559
    const-string/jumbo v26, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v28, "On display="

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v28

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    const-string/jumbo v28, " Rebuild removed "

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    .line 9560
    const-string/jumbo v28, " windows but added "

    .line 9559
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v27

    .line 9560
    const-string/jumbo v28, " rebuildAppWindowListLocked() "

    .line 9559
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    .line 9561
    const-string/jumbo v28, " callers="

    .line 9559
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    .line 9561
    const/16 v28, 0xa

    invoke-static/range {v28 .. v28}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v28

    .line 9559
    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9562
    const/4 v6, 0x0

    :goto_16a
    if-ge v6, v9, :cond_1d5

    .line 9563
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    move-object/from16 v26, v0

    aget-object v24, v26, v6

    .line 9564
    .local v24, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v24

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    move/from16 v26, v0

    if-eqz v26, :cond_1d2

    .line 9565
    new-instance v16, Ljava/io/StringWriter;

    invoke-direct/range {v16 .. v16}, Ljava/io/StringWriter;-><init>()V

    .line 9566
    .local v16, "sw":Ljava/io/StringWriter;
    new-instance v13, Lcom/android/internal/util/FastPrintWriter;

    const/16 v26, 0x0

    const/16 v27, 0x400

    move-object/from16 v0, v16

    move/from16 v1, v26

    move/from16 v2, v27

    invoke-direct {v13, v0, v1, v2}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 9567
    .local v13, "pw":Ljava/io/PrintWriter;
    const-string/jumbo v26, ""

    const/16 v27, 0x1

    move-object/from16 v0, v24

    move-object/from16 v1, v26

    move/from16 v2, v27

    invoke-virtual {v0, v13, v1, v2}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 9568
    invoke-virtual {v13}, Ljava/io/PrintWriter;->flush()V

    .line 9569
    const-string/jumbo v26, "WindowManager"

    new-instance v27, Ljava/lang/StringBuilder;

    invoke-direct/range {v27 .. v27}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v28, "This window was lost: "

    invoke-virtual/range {v27 .. v28}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v27

    move-object/from16 v0, v27

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v27

    invoke-virtual/range {v27 .. v27}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9570
    const-string/jumbo v26, "WindowManager"

    invoke-virtual/range {v16 .. v16}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v27

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9571
    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    .line 9562
    .end local v13    # "pw":Ljava/io/PrintWriter;
    .end local v16    # "sw":Ljava/io/StringWriter;
    :cond_1d2
    add-int/lit8 v6, v6, 0x1

    goto :goto_16a

    .line 9574
    .end local v24    # "ws":Lcom/android/server/wm/WindowState;
    :cond_1d5
    const-string/jumbo v26, "WindowManager"

    const-string/jumbo v27, "Current app token list:"

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9575
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpAppTokensLocked()V

    .line 9576
    const-string/jumbo v26, "WindowManager"

    const-string/jumbo v27, "Final window list:"

    invoke-static/range {v26 .. v27}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9577
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked()V

    .line 9579
    :cond_1ed
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    move-object/from16 v26, v0

    const/16 v27, 0x0

    invoke-static/range {v26 .. v27}, Ljava/util/Arrays;->fill([Ljava/lang/Object;Ljava/lang/Object;)V

    .line 9488
    return-void
.end method

.method private reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v2, 0x1

    const/4 v3, 0x0

    .line 9375
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v1, :cond_7

    .line 9376
    return-void

    .line 9378
    :cond_7
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9379
    iput-boolean v2, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9381
    invoke-virtual {p0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v0

    .line 9382
    .local v0, "configChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v1}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 9383
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v1, v4}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    .line 9384
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    .line 9385
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    move-result v1

    if-eqz v1, :cond_4e

    move v1, v2

    :goto_2c
    or-int/2addr v0, v1

    .line 9387
    if-eqz v0, :cond_48

    .line 9388
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 9389
    invoke-direct {p0, v3, v3, v3}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 9390
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x12

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 9391
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_48

    .line 9392
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mReconfigureOnConfigurationChanged:Lcom/android/server/wm/DisplayContentList;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    .line 9396
    :cond_48
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 9373
    return-void

    :cond_4e
    move v1, v3

    .line 9385
    goto :goto_2c
.end method

.method private reduceCompatConfigWidthSize(IIILandroid/util/DisplayMetrics;II)I
    .registers 11
    .param p1, "curSize"    # I
    .param p2, "rotation"    # I
    .param p3, "uiMode"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;
    .param p5, "dw"    # I
    .param p6, "dh"    # I

    .prologue
    .line 7622
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p5, p6, p2, p3}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    move-result v2

    iput v2, p4, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    .line 7623
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p5, p6, p2, p3}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    move-result v2

    iput v2, p4, Landroid/util/DisplayMetrics;->noncompatHeightPixels:I

    .line 7624
    const/4 v2, 0x0

    invoke-static {p4, v2}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    move-result v0

    .line 7625
    .local v0, "scale":F
    iget v2, p4, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    int-to-float v2, v2

    div-float/2addr v2, v0

    iget v3, p4, Landroid/util/DisplayMetrics;->density:F

    div-float/2addr v2, v3

    const/high16 v3, 0x3f000000    # 0.5f

    add-float/2addr v2, v3

    float-to-int v1, v2

    .line 7626
    .local v1, "size":I
    if-eqz p1, :cond_24

    if-ge v1, p1, :cond_25

    .line 7627
    :cond_24
    move p1, v1

    .line 7629
    :cond_25
    return p1
.end method

.method private reduceConfigLayout(IIFIII)I
    .registers 13
    .param p1, "curLayout"    # I
    .param p2, "rotation"    # I
    .param p3, "density"    # F
    .param p4, "dw"    # I
    .param p5, "dh"    # I
    .param p6, "uiMode"    # I

    .prologue
    .line 7570
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, p4, p5, p2, p6}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    move-result v4

    .line 7571
    .local v4, "w":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, p4, p5, p2, p6}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    move-result v0

    .line 7574
    .local v0, "h":I
    move v1, v4

    .line 7575
    .local v1, "longSize":I
    move v2, v0

    .line 7576
    .local v2, "shortSize":I
    if-ge v4, v0, :cond_13

    .line 7577
    move v3, v4

    .line 7578
    .local v3, "tmp":I
    move v1, v0

    .line 7579
    move v2, v4

    .line 7581
    .end local v3    # "tmp":I
    :cond_13
    int-to-float v5, v1

    div-float/2addr v5, p3

    float-to-int v1, v5

    .line 7582
    int-to-float v5, v2

    div-float/2addr v5, p3

    float-to-int v2, v5

    .line 7583
    invoke-static {p1, v1, v2}, Landroid/content/res/Configuration;->reduceScreenLayout(III)I

    move-result v5

    return v5
.end method

.method private relayoutVisibleWindow(Landroid/content/res/Configuration;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;II)I
    .registers 15
    .param p1, "outConfig"    # Landroid/content/res/Configuration;
    .param p2, "result"    # I
    .param p3, "win"    # Lcom/android/server/wm/WindowState;
    .param p4, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p5, "attrChanges"    # I
    .param p6, "oldVisibility"    # I

    .prologue
    const/16 v4, 0x8

    const/4 v7, 0x1

    const/4 v3, 0x0

    .line 3159
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v2

    if-nez v2, :cond_be

    const/4 v2, 0x2

    :goto_b
    or-int/2addr p2, v2

    .line 3160
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    if-eqz v2, :cond_48

    .line 3161
    sget-object v2, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "relayoutVisibleWindow: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " mAnimatingExit=true, mRemoveOnExit="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 3162
    iget-boolean v6, p3, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    .line 3161
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 3162
    const-string/jumbo v6, ", mDestroying="

    .line 3161
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 3162
    iget-boolean v6, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 3161
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v2, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 3164
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->cancelExitAnimationForNextAnimationLocked()V

    .line 3165
    iput-boolean v3, p3, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 3167
    :cond_48
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    if-eqz v2, :cond_53

    .line 3168
    iput-boolean v3, p3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 3169
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v2, p3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3171
    :cond_53
    if-ne p6, v4, :cond_57

    .line 3172
    iput-boolean v7, p4, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 3175
    :cond_57
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    iput v2, p3, Lcom/android/server/wm/WindowState;->mLastVisibleLayoutRotation:I

    .line 3177
    iput-boolean v7, p4, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 3178
    and-int/lit8 v2, p2, 0x2

    if-eqz v2, :cond_64

    .line 3179
    invoke-virtual {p3, p1}, Lcom/android/server/wm/WindowState;->prepareWindowToDisplayDuringRelayout(Landroid/content/res/Configuration;)V

    .line 3181
    :cond_64
    and-int/lit8 v2, p5, 0x8

    if-eqz v2, :cond_73

    .line 3185
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->tryChangeFormatInPlaceLocked()Z

    move-result v2

    if-nez v2, :cond_73

    .line 3186
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->preserveSurfaceLocked()V

    .line 3187
    or-int/lit8 p2, p2, 0x6

    .line 3194
    :cond_73
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizeChanged()Z

    move-result v2

    if-nez v2, :cond_7f

    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizing()Z

    move-result v2

    if-eqz v2, :cond_92

    .line 3195
    :cond_7f
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->setDragResizing()V

    .line 3196
    invoke-virtual {p3, v3}, Lcom/android/server/wm/WindowState;->setResizedWhileNotDragResizing(Z)V

    .line 3201
    iget-boolean v2, p3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v2, :cond_92

    iget-object v2, p3, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v2, :cond_92

    .line 3202
    invoke-virtual {p4}, Lcom/android/server/wm/WindowStateAnimator;->preserveSurfaceLocked()V

    .line 3203
    or-int/lit8 p2, p2, 0x2

    .line 3206
    :cond_92
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizing()Z

    move-result v2

    if-eqz v2, :cond_c3

    .line 3207
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->getResizeMode()I

    move-result v2

    if-nez v2, :cond_c1

    const/4 v1, 0x1

    .line 3208
    .local v1, "freeformResizing":Z
    :goto_9f
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isDragResizing()Z

    move-result v2

    if-eqz v2, :cond_c7

    .line 3209
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->getResizeMode()I

    move-result v2

    if-ne v2, v7, :cond_c5

    const/4 v0, 0x1

    .line 3210
    .local v0, "dockedResizing":Z
    :goto_ac
    if-eqz v1, :cond_c9

    const/16 v2, 0x10

    :goto_b0
    or-int/2addr p2, v2

    .line 3211
    if-eqz v0, :cond_b4

    move v3, v4

    :cond_b4
    or-int/2addr p2, v3

    .line 3212
    invoke-virtual {p3}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    move-result v2

    if-eqz v2, :cond_bd

    .line 3215
    or-int/lit8 p2, p2, 0x2

    .line 3217
    :cond_bd
    return p2

    .end local v0    # "dockedResizing":Z
    .end local v1    # "freeformResizing":Z
    :cond_be
    move v2, v3

    .line 3159
    goto/16 :goto_b

    .line 3207
    :cond_c1
    const/4 v1, 0x0

    .restart local v1    # "freeformResizing":Z
    goto :goto_9f

    .line 3206
    .end local v1    # "freeformResizing":Z
    :cond_c3
    const/4 v1, 0x0

    .restart local v1    # "freeformResizing":Z
    goto :goto_9f

    .line 3209
    :cond_c5
    const/4 v0, 0x0

    .restart local v0    # "dockedResizing":Z
    goto :goto_ac

    .line 3208
    .end local v0    # "dockedResizing":Z
    :cond_c7
    const/4 v0, 0x0

    .restart local v0    # "dockedResizing":Z
    goto :goto_ac

    :cond_c9
    move v2, v3

    .line 3210
    goto :goto_b0
.end method

.method private setAnimatorDurationScale(F)V
    .registers 2
    .param p1, "scale"    # F

    .prologue
    .line 5747
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 5748
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    .line 5746
    return-void
.end method

.method private setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    .registers 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "density"    # I

    .prologue
    .line 9368
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 9369
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9367
    return-void
.end method

.method private setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V
    .registers 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "mode"    # I

    .prologue
    const/4 v1, 0x0

    .line 9176
    const-string/jumbo v2, "WindowManager"

    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Using display scaling mode: "

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    if-nez p2, :cond_29

    const-string/jumbo v0, "auto"

    :goto_15
    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-static {v2, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9177
    if-eqz p2, :cond_2d

    const/4 v0, 0x1

    :goto_23
    iput-boolean v0, p1, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    .line 9178
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9175
    return-void

    .line 9176
    :cond_29
    const-string/jumbo v0, "off"

    goto :goto_15

    :cond_2d
    move v0, v1

    .line 9177
    goto :goto_23
.end method

.method private setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V
    .registers 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "width"    # I
    .param p3, "height"    # I

    .prologue
    .line 9223
    const-string/jumbo v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "Using new display size: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "x"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9224
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 9225
    iput p3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 9226
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9222
    return-void
.end method

.method private setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    .registers 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    .prologue
    .line 9434
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v7

    .line 9435
    .local v7, "displayInfo":Landroid/view/DisplayInfo;
    iput p2, v7, Landroid/view/DisplayInfo;->overscanLeft:I

    .line 9436
    iput p3, v7, Landroid/view/DisplayInfo;->overscanTop:I

    .line 9437
    iput p4, v7, Landroid/view/DisplayInfo;->overscanRight:I

    .line 9438
    iput p5, v7, Landroid/view/DisplayInfo;->overscanBottom:I

    .line 9440
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    iget-object v1, v7, Landroid/view/DisplayInfo;->uniqueId:Ljava/lang/String;

    iget-object v2, v7, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    move v3, p2

    move v4, p3

    move v5, p4

    move v6, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/DisplaySettings;->setOverscanLocked(Ljava/lang/String;Ljava/lang/String;IIII)V

    .line 9442
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    invoke-virtual {v0}, Lcom/android/server/wm/DisplaySettings;->writeSettingsLocked()V

    .line 9444
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9433
    return-void
.end method

.method private setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V
    .registers 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v2, 0x0

    .line 2381
    const/4 v1, 0x1

    iput-boolean v1, p1, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    .line 2382
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2386
    const/4 v1, 0x3

    .line 2385
    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v0

    .line 2387
    .local v0, "focusChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 2388
    if-eqz v0, :cond_18

    .line 2389
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2380
    :cond_18
    return-void
.end method

.method private showAuditSafeModeNotification()V
    .registers 12

    .prologue
    const v10, 0x104067a

    const/4 v9, 0x0

    const/4 v8, 0x1

    .line 8123
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 8124
    new-instance v5, Landroid/content/Intent;

    const-string/jumbo v6, "android.intent.action.VIEW"

    .line 8125
    const-string/jumbo v7, "https://support.google.com/nexus/answer/2852139"

    invoke-static {v7}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v7

    .line 8124
    invoke-direct {v5, v6, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 8123
    invoke-static {v4, v9, v5, v9}, Landroid/app/PendingIntent;->getActivity(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;

    move-result-object v2

    .line 8127
    .local v2, "pendingIntent":Landroid/app/PendingIntent;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4, v10}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v3

    .line 8129
    .local v3, "title":Ljava/lang/String;
    new-instance v4, Landroid/app/Notification$Builder;

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v4, v5}, Landroid/app/Notification$Builder;-><init>(Landroid/content/Context;)V

    .line 8130
    const v5, 0x108008a

    .line 8129
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setSmallIcon(I)Landroid/app/Notification$Builder;

    move-result-object v4

    .line 8131
    const-wide/16 v6, 0x0

    .line 8129
    invoke-virtual {v4, v6, v7}, Landroid/app/Notification$Builder;->setWhen(J)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setOngoing(Z)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4, v3}, Landroid/app/Notification$Builder;->setTicker(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setLocalOnly(Z)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setPriority(I)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4, v8}, Landroid/app/Notification$Builder;->setVisibility(I)Landroid/app/Notification$Builder;

    move-result-object v4

    .line 8137
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 8138
    const v6, 0x106005b

    .line 8137
    invoke-virtual {v5, v6}, Landroid/content/Context;->getColor(I)I

    move-result v5

    .line 8129
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setColor(I)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4, v3}, Landroid/app/Notification$Builder;->setContentTitle(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v4

    .line 8140
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const v6, 0x104067b

    invoke-virtual {v5, v6}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v5

    .line 8129
    invoke-virtual {v4, v5}, Landroid/app/Notification$Builder;->setContentText(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4, v2}, Landroid/app/Notification$Builder;->setContentIntent(Landroid/app/PendingIntent;)Landroid/app/Notification$Builder;

    move-result-object v4

    invoke-virtual {v4}, Landroid/app/Notification$Builder;->build()Landroid/app/Notification;

    move-result-object v0

    .line 8144
    .local v0, "notification":Landroid/app/Notification;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 8145
    const-string/jumbo v5, "notification"

    .line 8144
    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/NotificationManager;

    .line 8148
    .local v1, "notificationManager":Landroid/app/NotificationManager;
    sget-object v4, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    .line 8147
    const/4 v5, 0x0

    invoke-virtual {v1, v5, v10, v0, v4}, Landroid/app/NotificationManager;->notifyAsUser(Ljava/lang/String;ILandroid/app/Notification;Landroid/os/UserHandle;)V

    .line 8122
    return-void
.end method

.method private showStrictModeViolation(II)V
    .registers 15
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    .prologue
    .line 6296
    if-eqz p1, :cond_3b

    const/4 v4, 0x1

    .line 6297
    .local v4, "on":Z
    :goto_3
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v9

    .line 6301
    if-eqz v4, :cond_44

    .line 6302
    const/4 v1, 0x0

    .line 6303
    .local v1, "isVisible":Z
    :try_start_9
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 6304
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_10
    if-ge v0, v2, :cond_40

    .line 6305
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 6306
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 6307
    .local v3, "numWindows":I
    const/4 v5, 0x0

    .local v5, "winNdx":I
    :goto_23
    if-ge v5, v3, :cond_38

    .line 6308
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 6309
    .local v7, "ws":Lcom/android/server/wm/WindowState;
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget v8, v8, Lcom/android/server/wm/Session;->mPid:I

    if-ne v8, p2, :cond_3d

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z
    :try_end_34
    .catchall {:try_start_9 .. :try_end_34} :catchall_6b

    move-result v8

    if-eqz v8, :cond_3d

    .line 6310
    const/4 v1, 0x1

    .line 6304
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_38
    add-int/lit8 v0, v0, 0x1

    goto :goto_10

    .line 6296
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    .end local v3    # "numWindows":I
    .end local v4    # "on":Z
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3b
    const/4 v4, 0x0

    .restart local v4    # "on":Z
    goto :goto_3

    .line 6307
    .restart local v0    # "displayNdx":I
    .restart local v1    # "isVisible":Z
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3d
    add-int/lit8 v5, v5, 0x1

    goto :goto_23

    .line 6315
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_40
    if-nez v1, :cond_44

    monitor-exit v9

    .line 6316
    return-void

    .line 6322
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    :cond_44
    :try_start_44
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_47
    .catchall {:try_start_44 .. :try_end_47} :catchall_6b

    .line 6325
    :try_start_47
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    if-nez v8, :cond_5c

    .line 6326
    new-instance v8, Lcom/android/server/wm/StrictModeFlash;

    .line 6327
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v10

    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    .line 6326
    invoke-direct {v8, v10, v11}, Lcom/android/server/wm/StrictModeFlash;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;)V

    iput-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    .line 6329
    :cond_5c
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    invoke-virtual {v8, v4}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(Z)V
    :try_end_61
    .catchall {:try_start_47 .. :try_end_61} :catchall_66

    .line 6331
    :try_start_61
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_64
    .catchall {:try_start_61 .. :try_end_64} :catchall_6b

    monitor-exit v9

    .line 6295
    return-void

    .line 6330
    :catchall_66
    move-exception v8

    .line 6331
    :try_start_67
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 6330
    throw v8
    :try_end_6b
    .catchall {:try_start_67 .. :try_end_6b} :catchall_6b

    .line 6297
    :catchall_6b
    move-exception v8

    monitor-exit v9

    throw v8
.end method

.method private startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 10
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/16 v7, 0x11

    const/4 v6, 0x1

    const/4 v4, 0x0

    .line 4803
    iget-boolean v3, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-nez v3, :cond_45

    .line 4804
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-nez v3, :cond_2f

    .line 4805
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-boolean v6, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    .line 4806
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput v4, v3, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    .line 4807
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    add-int/lit8 v3, v3, 0x1

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 4808
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    if-ne v3, v6, :cond_2f

    .line 4809
    invoke-direct {p0, v4, v4, v4}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 4810
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 4811
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v4, 0x7d0

    invoke-virtual {v3, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 4814
    :cond_2f
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 4815
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_36
    if-ge v1, v0, :cond_45

    .line 4816
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 4817
    .local v2, "w":Lcom/android/server/wm/WindowState;
    iput-boolean v6, v2, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    .line 4815
    add-int/lit8 v1, v1, 0x1

    goto :goto_36

    .line 4800
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_45
    return-void
.end method

.method private startFreezingDisplayLocked(ZII)V
    .registers 16
    .param p1, "inTransaction"    # Z
    .param p2, "exitAnim"    # I
    .param p3, "enterAnim"    # I

    .prologue
    const/4 v3, 0x0

    .line 10091
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v1, :cond_6

    .line 10092
    return-void

    .line 10095
    :cond_6
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v1, :cond_8a

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    move-result v1

    if-eqz v1, :cond_8a

    .line 10105
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 10107
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 10108
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    iput-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 10109
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 10111
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->freezeInputDispatchingLw()V

    .line 10116
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, v3, v3}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 10118
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v1

    if-eqz v1, :cond_39

    .line 10119
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->freeze()V

    .line 10128
    :cond_39
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 10129
    iput p3, p0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    .line 10130
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 10131
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    .line 10133
    .local v8, "displayId":I
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, v8}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v0

    .line 10134
    .local v0, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v0, :cond_50

    .line 10135
    invoke-virtual {v0}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 10139
    :cond_50
    const/4 v6, 0x0

    .line 10140
    .local v6, "isSecure":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v10

    .line 10141
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    .line 10142
    .local v7, "N":I
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_5a
    if-ge v9, v7, :cond_71

    .line 10143
    invoke-virtual {v10, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/WindowState;

    .line 10144
    .local v11, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v11}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v1

    if-eqz v1, :cond_8b

    iget-object v1, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit16 v1, v1, 0x2000

    if-eqz v1, :cond_8b

    .line 10145
    const/4 v6, 0x1

    .line 10151
    .end local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_71
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 10152
    new-instance v0, Lcom/android/server/wm/ScreenRotationAnimation;

    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 10153
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->isDefaultOrientationForced()Z

    move-result v5

    move v4, p1

    .line 10152
    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceSession;ZZZ)V

    .line 10154
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, v8, v0}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 10090
    return-void

    .line 10098
    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "isSecure":Z
    .end local v7    # "N":I
    .end local v8    # "displayId":I
    .end local v9    # "i":I
    .end local v10    # "windows":Lcom/android/server/wm/WindowList;
    :cond_8a
    return-void

    .line 10142
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .restart local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "isSecure":Z
    .restart local v7    # "N":I
    .restart local v8    # "displayId":I
    .restart local v9    # "i":I
    .restart local v10    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v11    # "ws":Lcom/android/server/wm/WindowState;
    :cond_8b
    add-int/lit8 v9, v9, 0x1

    goto :goto_5a
.end method

.method private startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    .registers 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "resize"    # Z
    .param p3, "startX"    # F
    .param p4, "startY"    # F

    .prologue
    const/4 v8, 0x1

    const/4 v7, 0x0

    const/4 v6, 0x0

    .line 7883
    if-eqz p1, :cond_b

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v3

    if-nez v3, :cond_26

    .line 7884
    :cond_b
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "startPositioningLocked: Bad window "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7885
    return v7

    .line 7887
    :cond_26
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    if-nez v3, :cond_53

    .line 7888
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "startPositioningLocked: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " has no input channel, "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 7889
    const-string/jumbo v5, " probably being removed"

    .line 7888
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 7890
    return v7

    .line 7893
    :cond_53
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 7894
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_74

    .line 7895
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "startPositioningLocked: Invalid display content "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7896
    return v7

    .line 7899
    :cond_74
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v0

    .line 7900
    .local v0, "display":Landroid/view/Display;
    new-instance v3, Lcom/android/server/wm/TaskPositioner;

    invoke-direct {v3, p0}, Lcom/android/server/wm/TaskPositioner;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    .line 7901
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    invoke-virtual {v3, v0}, Lcom/android/server/wm/TaskPositioner;->register(Landroid/view/Display;)V

    .line 7902
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 7908
    move-object v2, p1

    .line 7909
    .local v2, "transferFocusFromWin":Lcom/android/server/wm/WindowState;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v3, :cond_9c

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eq v3, p1, :cond_9c

    .line 7910
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v3, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v3, v4, :cond_9c

    .line 7911
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 7913
    :cond_9c
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    .line 7914
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    iget-object v5, v5, Lcom/android/server/wm/TaskPositioner;->mServerChannel:Landroid/view/InputChannel;

    .line 7913
    invoke-virtual {v3, v4, v5}, Lcom/android/server/input/InputManagerService;->transferTouchFocus(Landroid/view/InputChannel;Landroid/view/InputChannel;)Z

    move-result v3

    if-nez v3, :cond_c0

    .line 7915
    const-string/jumbo v3, "WindowManager"

    const-string/jumbo v4, "startPositioningLocked: Unable to transfer touch focus"

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 7916
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    invoke-virtual {v3}, Lcom/android/server/wm/TaskPositioner;->unregister()V

    .line 7917
    iput-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    .line 7918
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 7919
    return v7

    .line 7922
    :cond_c0
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskPositioner:Lcom/android/server/wm/TaskPositioner;

    invoke-virtual {v3, p1, p2, p3, p4}, Lcom/android/server/wm/TaskPositioner;->startDragLocked(Lcom/android/server/wm/WindowState;ZFF)V

    .line 7923
    return v8
.end method

.method private startScrollingTask(Lcom/android/server/wm/DisplayContent;II)V
    .registers 13
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "startX"    # I
    .param p3, "startY"    # I

    .prologue
    .line 7841
    const/4 v2, 0x0

    .line 7842
    .local v2, "task":Lcom/android/server/wm/Task;
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 7843
    :try_start_4
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->taskIdFromPoint(II)I

    move-result v3

    .line 7844
    .local v3, "taskId":I
    if-ltz v3, :cond_14

    .line 7845
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object v0, v4

    check-cast v0, Lcom/android/server/wm/Task;

    move-object v2, v0

    .line 7847
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :cond_14
    if-eqz v2, :cond_32

    invoke-virtual {v2}, Lcom/android/server/wm/Task;->isDockedInEffect()Z

    move-result v4

    if-eqz v4, :cond_32

    .line 7848
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->getTopVisibleAppMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v4

    int-to-float v6, p2

    int-to-float v7, p3

    const/4 v8, 0x0

    .line 7847
    invoke-direct {p0, v4, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_26
    .catchall {:try_start_4 .. :try_end_26} :catchall_34

    move-result v4

    if-eqz v4, :cond_32

    monitor-exit v5

    .line 7853
    :try_start_2a
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    iget v5, v2, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-interface {v4, v5}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_31
    .catch Landroid/os/RemoteException; {:try_start_2a .. :try_end_31} :catch_37

    .line 7837
    :goto_31
    return-void

    :cond_32
    monitor-exit v5

    .line 7849
    return-void

    .line 7842
    .end local v3    # "taskId":I
    :catchall_34
    move-exception v4

    monitor-exit v5

    throw v4

    .line 7854
    .restart local v3    # "taskId":I
    :catch_37
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_31
.end method

.method private tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I
    .registers 9
    .param p1, "interestingPos"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1663
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 1664
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v4

    .line 1665
    .local v4, "wpos":I
    if-ltz v4, :cond_34

    .line 1666
    if-ge v4, p1, :cond_e

    add-int/lit8 p1, p1, -0x1

    .line 1668
    :cond_e
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 1669
    const/4 v5, 0x1

    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1670
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1671
    .local v0, "NC":I
    :cond_1a
    :goto_1a
    if-lez v0, :cond_34

    .line 1672
    add-int/lit8 v0, v0, -0x1

    .line 1673
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1674
    .local v2, "cw":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v1

    .line 1675
    .local v1, "cpos":I
    if-ltz v1, :cond_1a

    .line 1676
    if-ge v1, p1, :cond_30

    add-int/lit8 p1, p1, -0x1

    .line 1679
    :cond_30
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    goto :goto_1a

    .line 1683
    .end local v0    # "NC":I
    .end local v1    # "cpos":I
    .end local v2    # "cw":Lcom/android/server/wm/WindowState;
    :cond_34
    return p1
.end method

.method private transferStartingWindow(Landroid/os/IBinder;Lcom/android/server/wm/AppWindowToken;)Z
    .registers 14
    .param p1, "transferFrom"    # Landroid/os/IBinder;
    .param p2, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v9, 0x0

    const/4 v10, 0x1

    const/4 v8, 0x0

    .line 4311
    if-nez p1, :cond_6

    .line 4312
    return v9

    .line 4314
    :cond_6
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v5

    .line 4315
    .local v5, "ttoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v5, :cond_d

    .line 4316
    return v9

    .line 4318
    :cond_d
    iget-object v1, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 4319
    .local v1, "startingWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_94

    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    if-eqz v7, :cond_94

    .line 4322
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    .line 4327
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 4330
    .local v2, "origId":J
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 4331
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    .line 4332
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 4333
    iput-boolean v9, v5, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 4334
    iput-object v1, p2, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 4335
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    .line 4336
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 4337
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    .line 4338
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 4339
    iput-boolean v10, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 4340
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 4341
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    .line 4342
    iput-object p2, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 4347
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 4348
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 4351
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 4352
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 4353
    invoke-direct {p0, v1, v10}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 4360
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-eqz v7, :cond_5d

    .line 4361
    iput-boolean v10, p2, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 4362
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 4364
    :cond_5d
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    if-eqz v7, :cond_63

    .line 4365
    iput-boolean v10, p2, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    .line 4367
    :cond_63
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-nez v7, :cond_6b

    .line 4368
    iput-boolean v9, p2, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 4369
    iput-boolean v9, p2, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 4371
    :cond_6b
    iget-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    iget-boolean v8, v5, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eq v7, v8, :cond_78

    .line 4372
    iget-boolean v7, v5, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    iput-boolean v7, p2, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 4373
    invoke-virtual {p2}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 4375
    :cond_78
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    .line 4376
    iget-object v8, p2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v9, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 4375
    invoke-virtual {v7, v8, v9}, Lcom/android/server/wm/AppWindowAnimator;->transferCurrentAnimation(Lcom/android/server/wm/AppWindowAnimator;Lcom/android/server/wm/WindowStateAnimator;)V

    .line 4378
    const/4 v7, 0x3

    invoke-virtual {p0, v7, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 4380
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    iput-boolean v10, v7, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 4381
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 4382
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4383
    return v10

    .line 4384
    .end local v2    # "origId":J
    :cond_94
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v7, :cond_ad

    .line 4389
    iget-object v7, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    iput-object v7, p2, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 4390
    iput-object v8, v5, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 4391
    iput-boolean v10, v5, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 4392
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v8, 0x5

    invoke-virtual {v7, v8, p2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    .line 4396
    .local v0, "m":Landroid/os/Message;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    .line 4397
    return v10

    .line 4399
    .end local v0    # "m":Landroid/os/Message;
    :cond_ad
    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    .line 4400
    .local v4, "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    iget-object v6, p2, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    .line 4401
    .local v6, "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    if-eqz v7, :cond_cc

    .line 4403
    iget-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    if-eqz v7, :cond_be

    .line 4404
    iget-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    invoke-virtual {v7}, Landroid/view/SurfaceControl;->destroy()V

    .line 4406
    :cond_be
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    iput-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 4407
    iget v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    iput v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    .line 4408
    iget-object v7, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    iput-object v7, v6, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    .line 4409
    iput-object v8, v4, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 4411
    :cond_cc
    return v9
.end method

.method private tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;ZZ)Z
    .registers 11
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p3, "isDefaultDisplay"    # Z
    .param p4, "focusMayChange"    # Z

    .prologue
    const/4 v5, 0x0

    const/4 v4, 0x0

    const/4 v3, 0x1

    .line 3106
    const/4 v0, 0x2

    .line 3107
    .local v0, "transit":I
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_c

    .line 3108
    const/4 v0, 0x5

    .line 3110
    :cond_c
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v1

    if-eqz v1, :cond_2f

    invoke-virtual {p2, v0, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v1

    if-eqz v1, :cond_2f

    .line 3111
    move p4, p3

    .line 3112
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 3113
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    .line 3132
    :goto_1f
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v1, :cond_2e

    .line 3133
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v1

    if-nez v1, :cond_2e

    .line 3134
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual {v1, p1, v0}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 3136
    :cond_2e
    return p4

    .line 3114
    :cond_2f
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    move-result v1

    if-eqz v1, :cond_3e

    .line 3117
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 3118
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    goto :goto_1f

    .line 3119
    :cond_3e
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v1, p1}, Lcom/android/server/wm/WallpaperController;->isWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v1

    if-eqz v1, :cond_4d

    .line 3123
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 3124
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iput-boolean v3, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    goto :goto_1f

    .line 3126
    :cond_4d
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v1, p1, :cond_53

    .line 3127
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 3129
    :cond_53
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->destroyOrSaveSurface()V

    goto :goto_1f
.end method

.method private updateCircularDisplayMaskIfNeeded()V
    .registers 8

    .prologue
    .line 6199
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/res/Resources;->getConfiguration()Landroid/content/res/Configuration;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/res/Configuration;->isScreenRound()Z

    move-result v4

    if-eqz v4, :cond_46

    .line 6200
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    .line 6201
    const v5, 0x1120094

    .line 6200
    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v4

    .line 6199
    if-eqz v4, :cond_46

    .line 6203
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 6204
    :try_start_22
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I
    :try_end_24
    .catchall {:try_start_22 .. :try_end_24} :catchall_47

    .local v0, "currentUserId":I
    monitor-exit v4

    .line 6209
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    .line 6210
    const-string/jumbo v5, "accessibility_display_inversion_enabled"

    const/4 v6, 0x0

    .line 6209
    invoke-static {v4, v5, v6, v0}, Landroid/provider/Settings$Secure;->getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I

    move-result v1

    .line 6211
    .local v1, "inversionState":I
    const/4 v4, 0x1

    if-ne v1, v4, :cond_4a

    const/4 v3, 0x0

    .line 6212
    .local v3, "showMask":I
    :goto_37
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x23

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    move-result-object v2

    .line 6213
    .local v2, "m":Landroid/os/Message;
    iput v3, v2, Landroid/os/Message;->arg1:I

    .line 6214
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v4, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 6197
    .end local v0    # "currentUserId":I
    .end local v1    # "inversionState":I
    .end local v2    # "m":Landroid/os/Message;
    .end local v3    # "showMask":I
    :cond_46
    return-void

    .line 6203
    :catchall_47
    move-exception v5

    monitor-exit v4

    throw v5

    .line 6211
    .restart local v0    # "currentUserId":I
    .restart local v1    # "inversionState":I
    :cond_4a
    const/4 v3, 0x1

    .restart local v3    # "showMask":I
    goto :goto_37
.end method

.method private updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .registers 11
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    .prologue
    const/4 v7, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    .line 3801
    iget-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v4, :cond_8

    .line 3802
    return-object v7

    .line 3804
    :cond_8
    const/4 v2, 0x0

    .line 3806
    .local v2, "config":Landroid/content/res/Configuration;
    invoke-virtual {p0, v6}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v4

    if-eqz v4, :cond_26

    .line 3810
    if-eqz p2, :cond_17

    .line 3811
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    iget-boolean v4, v4, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    if-eqz v4, :cond_1c

    .line 3817
    :cond_17
    :goto_17
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;

    move-result-object v2

    .line 3842
    .end local v2    # "config":Landroid/content/res/Configuration;
    :cond_1b
    :goto_1b
    return-object v2

    .line 3812
    .restart local v2    # "config":Landroid/content/res/Configuration;
    :cond_1c
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 3813
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_17

    .line 3814
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    goto :goto_17

    .line 3819
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_26
    if-eqz p1, :cond_1b

    .line 3824
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v4}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 3825
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v4, p1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    .line 3826
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V

    .line 3827
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    move-result v4

    if-eqz v4, :cond_1b

    .line 3828
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 3829
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3830
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iput-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3831
    const/4 v4, 0x2

    new-array v0, v4, [I

    .line 3832
    .local v0, "anim":[I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v4

    if-eqz v4, :cond_63

    .line 3833
    aput v6, v0, v5

    aput v6, v0, v6

    .line 3837
    :goto_54
    aget v4, v0, v6

    aget v5, v0, v5

    invoke-direct {p0, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 3838
    new-instance v2, Landroid/content/res/Configuration;

    .end local v2    # "config":Landroid/content/res/Configuration;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-direct {v2, v4}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .local v2, "config":Landroid/content/res/Configuration;
    goto :goto_1b

    .line 3835
    .local v2, "config":Landroid/content/res/Configuration;
    :cond_63
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    goto :goto_54
.end method


# virtual methods
.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIIZZLandroid/graphics/Rect;Landroid/content/res/Configuration;IZZII)V
    .registers 33
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showForAllUsers"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "voiceInteraction"    # Z
    .param p11, "launchTaskBehind"    # Z
    .param p12, "taskBounds"    # Landroid/graphics/Rect;
    .param p13, "config"    # Landroid/content/res/Configuration;
    .param p14, "taskResizeMode"    # I
    .param p15, "alwaysFocusable"    # Z
    .param p16, "homeTask"    # Z
    .param p17, "targetSdkVersion"    # I
    .param p18, "rotationAnimationHint"    # I

    .prologue
    .line 3542
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    .line 3543
    const-string/jumbo v3, "addAppToken()"

    .line 3542
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 3544
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 3555
    :cond_15
    :try_start_15
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->getKeyDispatchingTimeout()J
    :try_end_18
    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_18} :catch_49

    move-result-wide v2

    const-wide/32 v4, 0xf4240

    mul-long v10, v2, v4

    .line 3561
    .local v10, "inputDispatchingTimeoutNanos":J
    :goto_1e
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v13

    .line 3562
    :try_start_21
    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v6

    .line 3563
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v6, :cond_59

    .line 3564
    const-string/jumbo v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to add existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_47
    .catchall {:try_start_21 .. :try_end_47} :catchall_be

    monitor-exit v13

    .line 3565
    return-void

    .line 3556
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v10    # "inputDispatchingTimeoutNanos":J
    :catch_49
    move-exception v9

    .line 3557
    .local v9, "ex":Landroid/os/RemoteException;
    const-string/jumbo v2, "WindowManager"

    const-string/jumbo v3, "Could not get dispatching timeout."

    invoke-static {v2, v3, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3558
    const-wide v10, 0x12a05f200L

    .restart local v10    # "inputDispatchingTimeoutNanos":J
    goto :goto_1e

    .line 3567
    .end local v9    # "ex":Landroid/os/RemoteException;
    .restart local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_59
    :try_start_59
    new-instance v6, Lcom/android/server/wm/AppWindowToken;

    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p2

    move/from16 v1, p10

    invoke-direct {v6, p0, v0, v1}, Lcom/android/server/wm/AppWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IApplicationToken;Z)V

    .line 3568
    .restart local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    iput-wide v10, v6, Lcom/android/server/wm/AppWindowToken;->inputDispatchingTimeoutNanos:J

    .line 3569
    move/from16 v0, p6

    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 3570
    move/from16 v0, p7

    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->showForAllUsers:Z

    .line 3571
    move/from16 v0, p17

    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->targetSdk:I

    .line 3572
    move/from16 v0, p5

    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 3573
    move/from16 v0, p9

    and-int/lit16 v2, v0, 0x480

    if-eqz v2, :cond_bc

    const/4 v2, 0x1

    :goto_7b
    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    .line 3575
    move/from16 v0, p11

    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->mLaunchTaskBehind:Z

    .line 3576
    move/from16 v0, p15

    iput-boolean v0, v6, Lcom/android/server/wm/AppWindowToken;->mAlwaysFocusable:Z

    .line 3579
    move/from16 v0, p18

    iput v0, v6, Lcom/android/server/wm/AppWindowToken;->mRotationAnimationHint:I

    .line 3581
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    move/from16 v0, p3

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/Task;

    .line 3582
    .local v12, "task":Lcom/android/server/wm/Task;
    if-nez v12, :cond_a4

    move-object v2, p0

    move/from16 v3, p3

    move/from16 v4, p4

    move/from16 v5, p8

    move-object/from16 v7, p12

    move-object/from16 v8, p13

    .line 3583
    invoke-direct/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;

    move-result-object v12

    .line 3585
    :cond_a4
    move/from16 v0, p14

    move/from16 v1, p16

    invoke-virtual {v12, p1, v6, v0, v1}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;IZ)V

    .line 3587
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    invoke-virtual {v2, v3, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3590
    const/4 v2, 0x1

    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 3591
    const/4 v2, 0x1

    iput-boolean v2, v6, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z
    :try_end_ba
    .catchall {:try_start_59 .. :try_end_ba} :catchall_be

    monitor-exit v13

    .line 3541
    return-void

    .line 3573
    .end local v12    # "task":Lcom/android/server/wm/Task;
    :cond_bc
    const/4 v2, 0x0

    goto :goto_7b

    .line 3561
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_be
    move-exception v2

    monitor-exit v13

    throw v2
.end method

.method public addInputConsumer(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)Landroid/view/WindowManagerPolicy$InputConsumer;
    .registers 7
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;

    .prologue
    .line 10425
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 10426
    :try_start_3
    new-instance v0, Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;

    invoke-direct {v0, p0, p1, p2}, Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;)V

    .line 10428
    .local v0, "inputConsumerImpl":Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;
    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    .line 10429
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v3, 0x1

    invoke-virtual {v1, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_12

    monitor-exit v2

    .line 10430
    return-object v0

    .line 10425
    .end local v0    # "inputConsumerImpl":Lcom/android/server/wm/WindowManagerService$HideNavInputConsumer;
    :catchall_12
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .registers 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v2, 0x1

    .line 1646
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v0

    .line 1647
    .local v0, "pos":I
    if-ltz v0, :cond_1c

    .line 1648
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1652
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v1

    invoke-virtual {v1, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1653
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1654
    add-int/lit8 v1, v0, 0x1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    .line 1655
    return-void

    .line 1657
    :cond_1c
    const/4 v1, 0x0

    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1658
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 1659
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    .line 1645
    return-void
.end method

.method public addSystemUIVisibilityFlag(I)V
    .registers 3
    .param p1, "flags"    # I

    .prologue
    .line 5798
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    or-int/2addr v0, p1

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    .line 5797
    return-void
.end method

.method public addTask(IIZ)V
    .registers 9
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    .prologue
    .line 5277
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 5280
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_28

    .line 5281
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_f

    monitor-exit v4

    .line 5283
    return-void

    .line 5285
    :cond_f
    :try_start_f
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 5286
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v1, v2, p3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;Z)V

    .line 5287
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5288
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5289
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_26
    .catchall {:try_start_f .. :try_end_26} :catchall_28

    monitor-exit v4

    .line 5276
    return-void

    .line 5277
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_28
    move-exception v3

    monitor-exit v4

    throw v3
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/view/InputChannel;)I
    .registers 50
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "viewVisibility"    # I
    .param p6, "displayId"    # I
    .param p7, "outContentInsets"    # Landroid/graphics/Rect;
    .param p8, "outStableInsets"    # Landroid/graphics/Rect;
    .param p9, "outOutsets"    # Landroid/graphics/Rect;
    .param p10, "outInputChannel"    # Landroid/view/InputChannel;

    .prologue
    .line 1880
    const/4 v3, 0x1

    new-array v0, v3, [I

    move-object/from16 v24, v0

    .line 1881
    .local v24, "appOp":[I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    move-object/from16 v1, v24

    invoke-interface {v3, v0, v1}, Landroid/view/WindowManagerPolicy;->checkAddPermission(Landroid/view/WindowManager$LayoutParams;[I)I

    move-result v34

    .line 1882
    .local v34, "res":I
    if-eqz v34, :cond_14

    .line 1883
    return v34

    .line 1886
    :cond_14
    const/16 v31, 0x0

    .line 1887
    .local v31, "reportNewConfig":Z
    const/4 v7, 0x0

    .line 1889
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v26

    .line 1890
    .local v26, "callingUid":I
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v36, v0

    .line 1892
    .local v36, "type":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v38, v0

    monitor-enter v38

    .line 1893
    :try_start_28
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v3, :cond_3a

    .line 1894
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string/jumbo v4, "Display has not been initialialized"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_37
    .catchall {:try_start_28 .. :try_end_37} :catchall_37

    .line 1892
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :catchall_37
    move-exception v3

    monitor-exit v38

    throw v3

    .line 1897
    .restart local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_3a
    :try_start_3a
    move-object/from16 v0, p0

    move/from16 v1, p6

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v12

    .line 1898
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v12, :cond_6b

    .line 1899
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add window to a display that does not exist: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1900
    const-string/jumbo v5, ".  Aborting."

    .line 1899
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_67
    .catchall {:try_start_3a .. :try_end_67} :catchall_37

    .line 1901
    const/16 v3, -0x9

    monitor-exit v38

    return v3

    .line 1903
    :cond_6b
    :try_start_6b
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/wm/Session;->mUid:I

    invoke-virtual {v12, v3}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v3

    if-nez v3, :cond_9c

    .line 1904
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add window to a display for which the application does not have access: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1905
    const-string/jumbo v5, ".  Aborting."

    .line 1904
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_98
    .catchall {:try_start_6b .. :try_end_98} :catchall_37

    .line 1906
    const/16 v3, -0x9

    monitor-exit v38

    return v3

    .line 1909
    :cond_9c
    :try_start_9c
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_d0

    .line 1910
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Window "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v5, " is already added"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_cd
    .catchall {:try_start_9c .. :try_end_cd} :catchall_37

    .line 1911
    const/4 v3, -0x5

    monitor-exit v38

    return v3

    .line 1914
    :cond_d0
    const/16 v3, 0x3e8

    move/from16 v0, v36

    if-lt v0, v3, :cond_14a

    const/16 v3, 0x7cf

    move/from16 v0, v36

    if-gt v0, v3, :cond_14a

    .line 1915
    :try_start_dc
    move-object/from16 v0, p4

    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v3, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v7

    .line 1916
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    if-nez v7, :cond_112

    .line 1917
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add window with token that is not a window: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1918
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1917
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1918
    const-string/jumbo v5, ".  Aborting."

    .line 1917
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_10f
    .catchall {:try_start_dc .. :try_end_10f} :catchall_37

    .line 1919
    const/4 v3, -0x2

    monitor-exit v38

    return v3

    .line 1921
    :cond_112
    :try_start_112
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3e8

    if-lt v3, v4, :cond_14a

    .line 1922
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x7cf

    if-gt v3, v4, :cond_14a

    .line 1923
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add window with token that is a sub-window: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1924
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1923
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1924
    const-string/jumbo v5, ".  Aborting."

    .line 1923
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_147
    .catchall {:try_start_112 .. :try_end_147} :catchall_37

    .line 1925
    const/4 v3, -0x2

    monitor-exit v38

    return v3

    .line 1929
    .end local v7    # "attachedWindow":Lcom/android/server/wm/WindowState;
    :cond_14a
    const/16 v3, 0x7ee

    move/from16 v0, v36

    if-ne v0, v3, :cond_156

    :try_start_150
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    move-result v3

    if-eqz v3, :cond_19f

    .line 1934
    :cond_156
    const/16 v23, 0x0

    .line 1935
    .local v23, "addToken":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 1936
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    const/16 v25, 0x0

    .line 1937
    .local v25, "atoken":Lcom/android/server/wm/AppWindowToken;
    const/16 v22, 0x0

    .line 1939
    .local v22, "addToastWindowRequiresToken":Z
    if-nez v6, :cond_34a

    .line 1940
    const/4 v3, 0x1

    move/from16 v0, v36

    if-lt v0, v3, :cond_1ab

    const/16 v3, 0x63

    move/from16 v0, v36

    if-gt v0, v3, :cond_1ab

    .line 1941
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add application window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1942
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1941
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1942
    const-string/jumbo v5, ".  Aborting."

    .line 1941
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_19c
    .catchall {:try_start_150 .. :try_end_19c} :catchall_37

    .line 1943
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1930
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v22    # "addToastWindowRequiresToken":Z
    .end local v23    # "addToken":Z
    .end local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_19f
    :try_start_19f
    const-string/jumbo v3, "WindowManager"

    const-string/jumbo v4, "Attempted to add private presentation window to a non-private display.  Aborting."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1a8
    .catchall {:try_start_19f .. :try_end_1a8} :catchall_37

    .line 1931
    const/4 v3, -0x8

    monitor-exit v38

    return v3

    .line 1945
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v22    # "addToastWindowRequiresToken":Z
    .restart local v23    # "addToken":Z
    .restart local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_1ab
    const/16 v3, 0x7db

    move/from16 v0, v36

    if-ne v0, v3, :cond_1d9

    .line 1946
    :try_start_1b1
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add input method window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1947
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1946
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1947
    const-string/jumbo v5, ".  Aborting."

    .line 1946
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1d6
    .catchall {:try_start_1b1 .. :try_end_1d6} :catchall_37

    .line 1948
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1950
    :cond_1d9
    const/16 v3, 0x7ef

    move/from16 v0, v36

    if-ne v0, v3, :cond_207

    .line 1951
    :try_start_1df
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add voice interaction window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1952
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1952
    const-string/jumbo v5, ".  Aborting."

    .line 1951
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_204
    .catchall {:try_start_1df .. :try_end_204} :catchall_37

    .line 1953
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1955
    :cond_207
    const/16 v3, 0x7dd

    move/from16 v0, v36

    if-ne v0, v3, :cond_235

    .line 1956
    :try_start_20d
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add wallpaper window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1957
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1956
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1957
    const-string/jumbo v5, ".  Aborting."

    .line 1956
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_232
    .catchall {:try_start_20d .. :try_end_232} :catchall_37

    .line 1958
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1960
    :cond_235
    const/16 v3, 0x7e7

    move/from16 v0, v36

    if-ne v0, v3, :cond_263

    .line 1961
    :try_start_23b
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add Dream window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1962
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1961
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1962
    const-string/jumbo v5, ".  Aborting."

    .line 1961
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_260
    .catchall {:try_start_23b .. :try_end_260} :catchall_37

    .line 1963
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1965
    :cond_263
    const/16 v3, 0x7f3

    move/from16 v0, v36

    if-ne v0, v3, :cond_291

    .line 1966
    :try_start_269
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add QS dialog window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1967
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1966
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1967
    const-string/jumbo v5, ".  Aborting."

    .line 1966
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_28e
    .catchall {:try_start_269 .. :try_end_28e} :catchall_37

    .line 1968
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1970
    :cond_291
    const/16 v3, 0x7f0

    move/from16 v0, v36

    if-ne v0, v3, :cond_2bf

    .line 1971
    :try_start_297
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add Accessibility overlay window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1972
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1971
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1972
    const-string/jumbo v5, ".  Aborting."

    .line 1971
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2bc
    .catchall {:try_start_297 .. :try_end_2bc} :catchall_37

    .line 1973
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1975
    :cond_2bf
    const/16 v3, 0x7d5

    move/from16 v0, v36

    if-ne v0, v3, :cond_2fb

    .line 1977
    :try_start_2c5
    move-object/from16 v0, p4

    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-direct {v0, v3, v1, v7}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    move-result v3

    if-eqz v3, :cond_2fb

    .line 1979
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add a toast window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1980
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 1979
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1980
    const-string/jumbo v5, ".  Aborting."

    .line 1979
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2f8
    .catchall {:try_start_2c5 .. :try_end_2f8} :catchall_37

    .line 1981
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 1984
    :cond_2fb
    :try_start_2fb
    new-instance v6, Lcom/android/server/wm/WindowToken;

    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p4

    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v4, -0x1

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 1985
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v23, 0x1

    .line 2057
    .end local v22    # "addToastWindowRequiresToken":Z
    .end local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_30a
    :goto_30a
    new-instance v2, Lcom/android/server/wm/WindowState;

    .line 2058
    const/4 v3, 0x0

    aget v8, v24, v3

    move-object/from16 v3, p0

    move-object/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    .line 2057
    invoke-direct/range {v2 .. v12}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;IILandroid/view/WindowManager$LayoutParams;ILcom/android/server/wm/DisplayContent;)V

    .line 2059
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;

    if-nez v3, :cond_564

    .line 2062
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Adding window client "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2063
    const-string/jumbo v5, " that is dead, aborting."

    .line 2062
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_347
    .catchall {:try_start_2fb .. :try_end_347} :catchall_37

    .line 2064
    const/4 v3, -0x4

    monitor-exit v38

    return v3

    .line 1986
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .restart local v22    # "addToastWindowRequiresToken":Z
    .restart local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_34a
    const/4 v3, 0x1

    move/from16 v0, v36

    if-lt v0, v3, :cond_3b7

    const/16 v3, 0x63

    move/from16 v0, v36

    if-gt v0, v3, :cond_3b7

    .line 1987
    :try_start_355
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v25, v0

    .line 1988
    .local v25, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v25, :cond_37f

    .line 1989
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add window with non-application token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1990
    const-string/jumbo v5, ".  Aborting."

    .line 1989
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_37c
    .catchall {:try_start_355 .. :try_end_37c} :catchall_37

    .line 1991
    const/4 v3, -0x3

    monitor-exit v38

    return v3

    .line 1992
    :cond_37f
    :try_start_37f
    move-object/from16 v0, v25

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v3, :cond_3a9

    .line 1993
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add window with exiting application token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 1994
    const-string/jumbo v5, ".  Aborting."

    .line 1993
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3a6
    .catchall {:try_start_37f .. :try_end_3a6} :catchall_37

    .line 1995
    const/4 v3, -0x4

    monitor-exit v38

    return v3

    .line 1997
    :cond_3a9
    const/4 v3, 0x3

    move/from16 v0, v36

    if-ne v0, v3, :cond_30a

    :try_start_3ae
    move-object/from16 v0, v25

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z
    :try_end_3b2
    .catchall {:try_start_3ae .. :try_end_3b2} :catchall_37

    if-eqz v3, :cond_30a

    .line 2001
    const/4 v3, -0x6

    monitor-exit v38

    return v3

    .line 2003
    .local v25, "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_3b7
    const/16 v3, 0x7db

    move/from16 v0, v36

    if-ne v0, v3, :cond_3eb

    .line 2004
    :try_start_3bd
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7db

    if-eq v3, v4, :cond_30a

    .line 2005
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add input method window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2006
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2005
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2006
    const-string/jumbo v5, ".  Aborting."

    .line 2005
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3e8
    .catchall {:try_start_3bd .. :try_end_3e8} :catchall_37

    .line 2007
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 2009
    :cond_3eb
    const/16 v3, 0x7ef

    move/from16 v0, v36

    if-ne v0, v3, :cond_41f

    .line 2010
    :try_start_3f1
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7ef

    if-eq v3, v4, :cond_30a

    .line 2011
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add voice interaction window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2012
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2011
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2012
    const-string/jumbo v5, ".  Aborting."

    .line 2011
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_41c
    .catchall {:try_start_3f1 .. :try_end_41c} :catchall_37

    .line 2013
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 2015
    :cond_41f
    const/16 v3, 0x7dd

    move/from16 v0, v36

    if-ne v0, v3, :cond_453

    .line 2016
    :try_start_425
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7dd

    if-eq v3, v4, :cond_30a

    .line 2017
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add wallpaper window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2018
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2017
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2018
    const-string/jumbo v5, ".  Aborting."

    .line 2017
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_450
    .catchall {:try_start_425 .. :try_end_450} :catchall_37

    .line 2019
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 2021
    :cond_453
    const/16 v3, 0x7e7

    move/from16 v0, v36

    if-ne v0, v3, :cond_487

    .line 2022
    :try_start_459
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7e7

    if-eq v3, v4, :cond_30a

    .line 2023
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add Dream window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2024
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2023
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2024
    const-string/jumbo v5, ".  Aborting."

    .line 2023
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_484
    .catchall {:try_start_459 .. :try_end_484} :catchall_37

    .line 2025
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 2027
    :cond_487
    const/16 v3, 0x7f0

    move/from16 v0, v36

    if-ne v0, v3, :cond_4bb

    .line 2028
    :try_start_48d
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7f0

    if-eq v3, v4, :cond_30a

    .line 2029
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add Accessibility overlay window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2030
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2029
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2030
    const-string/jumbo v5, ".  Aborting."

    .line 2029
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4b8
    .catchall {:try_start_48d .. :try_end_4b8} :catchall_37

    .line 2031
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 2033
    :cond_4bb
    const/16 v3, 0x7d5

    move/from16 v0, v36

    if-ne v0, v3, :cond_4fd

    .line 2035
    :try_start_4c1
    move-object/from16 v0, p4

    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-direct {v0, v3, v1, v7}, Lcom/android/server/wm/WindowManagerService;->doesAddToastWindowRequireToken(Ljava/lang/String;ILcom/android/server/wm/WindowState;)Z

    move-result v22

    .line 2037
    .local v22, "addToastWindowRequiresToken":Z
    if-eqz v22, :cond_30a

    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7d5

    if-eq v3, v4, :cond_30a

    .line 2038
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add a toast window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2039
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2038
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2039
    const-string/jumbo v5, ".  Aborting."

    .line 2038
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4fa
    .catchall {:try_start_4c1 .. :try_end_4fa} :catchall_37

    .line 2040
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 2042
    .local v22, "addToastWindowRequiresToken":Z
    :cond_4fd
    const/16 v3, 0x7f3

    move/from16 v0, v36

    if-ne v0, v3, :cond_531

    .line 2043
    :try_start_503
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7f3

    if-eq v3, v4, :cond_30a

    .line 2044
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to add QS dialog window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2045
    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2044
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 2045
    const-string/jumbo v5, ".  Aborting."

    .line 2044
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_52e
    .catchall {:try_start_503 .. :try_end_52e} :catchall_37

    .line 2046
    const/4 v3, -0x1

    monitor-exit v38

    return v3

    .line 2048
    :cond_531
    :try_start_531
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_30a

    .line 2049
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Non-null appWindowToken for system window of type="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v36

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2052
    const/4 v3, 0x0

    move-object/from16 v0, p4

    iput-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    .line 2053
    new-instance v6, Lcom/android/server/wm/WindowToken;

    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 2054
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/16 v23, 0x1

    goto/16 :goto_30a

    .line 2067
    .end local v22    # "addToastWindowRequiresToken":Z
    .end local v25    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_564
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    if-nez v3, :cond_577

    .line 2068
    const-string/jumbo v3, "WindowManager"

    const-string/jumbo v4, "Adding window to Display that has been removed."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_573
    .catchall {:try_start_531 .. :try_end_573} :catchall_37

    .line 2069
    const/16 v3, -0x9

    monitor-exit v38

    return v3

    .line 2072
    :cond_577
    :try_start_577
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    .line 2073
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->checkShowToOwnerOnly(Landroid/view/WindowManager$LayoutParams;)Z

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setShowToOwnerOnlyLocked(Z)V

    .line 2075
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v3, v2, v0}, Landroid/view/WindowManagerPolicy;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I
    :try_end_596
    .catchall {:try_start_577 .. :try_end_596} :catchall_37

    move-result v34

    .line 2076
    if-eqz v34, :cond_59b

    monitor-exit v38

    .line 2077
    return v34

    .line 2080
    :cond_59b
    if-eqz p10, :cond_5cf

    .line 2081
    :try_start_59d
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    and-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_5cc

    const/16 v30, 0x1

    .line 2082
    .local v30, "openInputChannels":Z
    :goto_5a7
    if-eqz v30, :cond_5ae

    .line 2083
    move-object/from16 v0, p10

    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V

    .line 2096
    :cond_5ae
    const/16 v3, 0x7d5

    move/from16 v0, v36

    if-ne v0, v3, :cond_5f1

    .line 2097
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    move/from16 v0, v26

    invoke-virtual {v3, v0}, Lcom/android/server/wm/DisplayContent;->canAddToastWindowForUid(I)Z

    move-result v3

    if-nez v3, :cond_5d2

    .line 2098
    const-string/jumbo v3, "WindowManager"

    const-string/jumbo v4, "Adding more than one toast window for UID at a time."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_5c9
    .catchall {:try_start_59d .. :try_end_5c9} :catchall_37

    .line 2099
    const/4 v3, -0x5

    monitor-exit v38

    return v3

    .line 2081
    .end local v30    # "openInputChannels":Z
    :cond_5cc
    const/16 v30, 0x0

    goto :goto_5a7

    .line 2080
    :cond_5cf
    const/16 v30, 0x0

    goto :goto_5a7

    .line 2106
    .restart local v30    # "openInputChannels":Z
    :cond_5d2
    if-nez v22, :cond_5dc

    .line 2107
    :try_start_5d4
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit8 v3, v3, 0x8

    if-nez v3, :cond_749

    .line 2110
    :cond_5dc
    :goto_5dc
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 2111
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x34

    invoke-virtual {v4, v5, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v4

    .line 2112
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v8, v5, Landroid/view/WindowManager$LayoutParams;->hideTimeoutMilliseconds:J

    .line 2110
    invoke-virtual {v3, v4, v8, v9}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 2118
    :cond_5f1
    const/16 v34, 0x0

    .line 2120
    invoke-static/range {v36 .. v36}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    move-result v3

    if-eqz v3, :cond_5fe

    .line 2121
    iget-object v3, v12, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2124
    :cond_5fe
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v32

    .line 2126
    .local v32, "origId":J
    if-eqz v23, :cond_60f

    .line 2127
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2129
    :cond_60f
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->attach()V

    .line 2130
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2131
    iget v3, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v4, -0x1

    if-eq v3, v4, :cond_63f

    .line 2132
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    iget v4, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v5

    .line 2133
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v8

    .line 2132
    invoke-virtual {v3, v4, v5, v8}, Landroid/app/AppOpsManager;->startOpNoThrow(IILjava/lang/String;)I

    move-result v35

    .line 2134
    .local v35, "startOpResult":I
    if-eqz v35, :cond_63f

    .line 2135
    const/4 v3, 0x3

    move/from16 v0, v35

    if-eq v0, v3, :cond_63f

    .line 2136
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    .line 2140
    .end local v35    # "startOpResult":I
    :cond_63f
    const/4 v3, 0x3

    move/from16 v0, v36

    if-ne v0, v3, :cond_64c

    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_64c

    .line 2141
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 2146
    :cond_64c
    const/16 v29, 0x1

    .line 2148
    .local v29, "imMayMove":Z
    const/16 v3, 0x7db

    move/from16 v0, v36

    if-ne v0, v3, :cond_75b

    .line 2149
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 2150
    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 2151
    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    .line 2152
    const/16 v29, 0x0

    .line 2177
    :cond_662
    :goto_662
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->applyScrollIfNeeded()V

    .line 2181
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->applyAdjustForImeIfNeeded()V

    .line 2183
    const/16 v3, 0x7f2

    move/from16 v0, v36

    if-ne v0, v3, :cond_679

    .line 2184
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v3

    invoke-virtual {v3, v2}, Lcom/android/server/wm/DockedStackDividerController;->setWindow(Lcom/android/server/wm/WindowState;)V

    .line 2187
    :cond_679
    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v37, v0

    .line 2188
    .local v37, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v3, 0x1

    move-object/from16 v0, v37

    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 2189
    const/4 v3, 0x1

    move-object/from16 v0, v37

    iput-boolean v3, v0, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 2191
    if-eqz v25, :cond_693

    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->prepareWindowReplacementTransition(Lcom/android/server/wm/AppWindowToken;)Z

    move-result v3

    if-eqz v3, :cond_7bc

    .line 2198
    :cond_693
    :goto_693
    iget-boolean v3, v12, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    if-eqz v3, :cond_7c8

    .line 2199
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v27

    .line 2201
    .local v27, "displayInfo":Landroid/view/DisplayInfo;
    if-eqz v25, :cond_7c5

    move-object/from16 v0, v25

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    if-eqz v3, :cond_7c5

    .line 2202
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    .line 2203
    .local v15, "taskBounds":Landroid/graphics/Rect;
    move-object/from16 v0, v25

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    invoke-virtual {v3, v4}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V

    .line 2207
    .end local v15    # "taskBounds":Landroid/graphics/Rect;
    :goto_6b2
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v14, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    move/from16 v16, v0

    .line 2208
    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v17, v0

    move-object/from16 v0, v27

    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v18, v0

    move-object/from16 v19, p7

    move-object/from16 v20, p8

    move-object/from16 v21, p9

    .line 2207
    invoke-interface/range {v13 .. v21}, Landroid/view/WindowManagerPolicy;->getInsetHintLw(Landroid/view/WindowManager$LayoutParams;Landroid/graphics/Rect;IIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    move-result v3

    if-eqz v3, :cond_6d8

    .line 2210
    const/16 v34, 0x4

    .line 2217
    .end local v27    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_6d8
    :goto_6d8
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    if-eqz v3, :cond_6e0

    .line 2218
    or-int/lit8 v34, v34, 0x1

    .line 2220
    :cond_6e0
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_7d0

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eqz v3, :cond_7d0

    .line 2224
    :goto_6ea
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 2226
    const/16 v28, 0x0

    .line 2227
    .local v28, "focusChanged":Z
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v3

    if-eqz v3, :cond_705

    .line 2228
    const/4 v3, 0x1

    .line 2229
    const/4 v4, 0x0

    .line 2228
    move-object/from16 v0, p0

    invoke-virtual {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v28

    .line 2230
    .local v28, "focusChanged":Z
    if-eqz v28, :cond_705

    .line 2231
    const/16 v29, 0x0

    .line 2235
    .end local v28    # "focusChanged":Z
    :cond_705
    if-eqz v29, :cond_70d

    .line 2236
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 2239
    :cond_70d
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 2243
    if-eqz v28, :cond_726

    .line 2244
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    const/4 v5, 0x0

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    .line 2246
    :cond_726
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2251
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v3

    if-eqz v3, :cond_73f

    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z
    :try_end_73a
    .catchall {:try_start_5d4 .. :try_end_73a} :catchall_37

    move-result v3

    if-eqz v3, :cond_73f

    .line 2252
    const/16 v31, 0x1

    :cond_73f
    monitor-exit v38

    .line 2256
    if-eqz v31, :cond_745

    .line 2257
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    .line 2260
    :cond_745
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2262
    return v34

    .line 2108
    .end local v29    # "imMayMove":Z
    .end local v32    # "origId":J
    .end local v37    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_749
    :try_start_749
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v3, :cond_5dc

    .line 2109
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget v3, v3, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    move/from16 v0, v26

    if-eq v3, v0, :cond_5f1

    goto/16 :goto_5dc

    .line 2153
    .restart local v29    # "imMayMove":Z
    .restart local v32    # "origId":J
    :cond_75b
    const/16 v3, 0x7dc

    move/from16 v0, v36

    if-ne v0, v3, :cond_77e

    .line 2154
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2155
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 2156
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v3

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    .line 2157
    const/16 v29, 0x0

    goto/16 :goto_662

    .line 2159
    :cond_77e
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 2160
    const/16 v3, 0x7dd

    move/from16 v0, v36

    if-ne v0, v3, :cond_799

    .line 2161
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v3}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    .line 2162
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_662

    .line 2163
    :cond_799
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v4, 0x100000

    and-int/2addr v3, v4

    if-eqz v3, :cond_7aa

    .line 2164
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_662

    .line 2165
    :cond_7aa
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v3, v2}, Lcom/android/server/wm/WallpaperController;->isBelowWallpaperTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v3

    if-eqz v3, :cond_662

    .line 2171
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_662

    .line 2195
    .restart local v37    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_7bc
    move-object/from16 v0, p0

    move-object/from16 v1, v25

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->prepareNoneTransitionForRelaunching(Lcom/android/server/wm/AppWindowToken;)V

    goto/16 :goto_693

    .line 2205
    .restart local v27    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_7c5
    const/4 v15, 0x0

    .local v15, "taskBounds":Landroid/graphics/Rect;
    goto/16 :goto_6b2

    .line 2213
    .end local v15    # "taskBounds":Landroid/graphics/Rect;
    .end local v27    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_7c8
    invoke-virtual/range {p7 .. p7}, Landroid/graphics/Rect;->setEmpty()V

    .line 2214
    invoke-virtual/range {p8 .. p8}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_7ce
    .catchall {:try_start_749 .. :try_end_7ce} :catchall_37

    goto/16 :goto_6d8

    .line 2221
    :cond_7d0
    or-int/lit8 v34, v34, 0x2

    goto/16 :goto_6ea
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .prologue
    .line 7456
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7457
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 7455
    return-void

    .line 7456
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public addWindowToken(Landroid/os/IBinder;I)V
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I

    .prologue
    .line 3437
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 3438
    const-string/jumbo v2, "addWindowToken()"

    .line 3437
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 3439
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 3442
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3443
    :try_start_18
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 3444
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_3e

    .line 3445
    const-string/jumbo v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to add existing input method token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3c
    .catchall {:try_start_18 .. :try_end_3c} :catchall_54

    monitor-exit v2

    .line 3446
    return-void

    .line 3448
    :cond_3e
    :try_start_3e
    new-instance v0, Lcom/android/server/wm/WindowToken;

    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    const/4 v1, 0x1

    invoke-direct {v0, p0, p1, p2, v1}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 3449
    .restart local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3450
    const/16 v1, 0x7dd

    if-ne p2, v1, :cond_52

    .line 3451
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WallpaperController;->addWallpaperToken(Lcom/android/server/wm/WindowToken;)V
    :try_end_52
    .catchall {:try_start_3e .. :try_end_52} :catchall_54

    :cond_52
    monitor-exit v2

    .line 3436
    return-void

    .line 3442
    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_54
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method adjustAnimationBackground(Lcom/android/server/wm/WindowStateAnimator;)I
    .registers 6
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    .prologue
    .line 9839
    iget-object v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 9840
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_c
    if-ltz v0, :cond_26

    .line 9841
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 9842
    .local v1, "testWin":Lcom/android/server/wm/WindowState;
    iget-boolean v3, v1, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v3, :cond_23

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v3

    if-eqz v3, :cond_23

    .line 9843
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    return v3

    .line 9840
    :cond_23
    add-int/lit8 v0, v0, -0x1

    goto :goto_c

    .line 9846
    .end local v1    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_26
    iget v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    return v3
.end method

.method adjustForImeIfNeeded(Lcom/android/server/wm/DisplayContent;)V
    .registers 25
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 7940
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 7941
    .local v5, "imeWin":Lcom/android/server/wm/WindowState;
    if-eqz v5, :cond_84

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v1

    if-eqz v1, :cond_84

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v1

    if-eqz v1, :cond_84

    .line 7942
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->isImeHideRequested()Z

    move-result v1

    if-eqz v1, :cond_81

    const/16 v19, 0x0

    .line 7943
    .local v19, "imeVisible":Z
    :goto_1e
    const/4 v1, 0x3

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->isStackVisibleLocked(I)Z

    move-result v10

    .line 7944
    .local v10, "dockVisible":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getImeFocusStackLocked()Lcom/android/server/wm/TaskStack;

    move-result-object v18

    .line 7945
    .local v18, "imeTargetStack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_87

    if-eqz v18, :cond_87

    .line 7946
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/TaskStack;->getDockSide()I

    move-result v15

    .line 7947
    .local v15, "imeDockSide":I
    :goto_31
    const/4 v1, 0x2

    if-ne v15, v1, :cond_89

    const/16 v17, 0x1

    .line 7948
    .local v17, "imeOnTop":Z
    :goto_36
    const/4 v1, 0x4

    if-ne v15, v1, :cond_8c

    const/4 v2, 0x1

    .line 7949
    .local v2, "imeOnBottom":Z
    :goto_3a
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->isMinimizedDock()Z

    move-result v13

    .line 7950
    .local v13, "dockMinimized":Z
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getInputMethodWindowVisibleHeightLw()I

    move-result v6

    .line 7951
    .local v6, "imeHeight":I
    if-eqz v19, :cond_91

    .line 7952
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    invoke-virtual {v1}, Lcom/android/server/wm/DockedStackDividerController;->getImeHeightAdjustedFor()I

    move-result v1

    if-eq v6, v1, :cond_8e

    const/16 v16, 0x1

    .line 7960
    .local v16, "imeHeightChanged":Z
    :goto_58
    if-eqz v19, :cond_62

    if-eqz v10, :cond_62

    if-nez v17, :cond_60

    if-eqz v2, :cond_62

    :cond_60
    if-eqz v13, :cond_94

    .line 7974
    :cond_62
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v22

    .line 7975
    .local v22, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v14, v1, -0x1

    .local v14, "i":I
    :goto_6c
    if-ltz v14, :cond_df

    .line 7976
    move-object/from16 v0, v22

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/TaskStack;

    .line 7977
    .local v21, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v10, :cond_dd

    const/4 v1, 0x0

    :goto_79
    move-object/from16 v0, v21

    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->resetAdjustedForIme(Z)V

    .line 7975
    add-int/lit8 v14, v14, -0x1

    goto :goto_6c

    .line 7942
    .end local v2    # "imeOnBottom":Z
    .end local v6    # "imeHeight":I
    .end local v10    # "dockVisible":Z
    .end local v13    # "dockMinimized":Z
    .end local v14    # "i":I
    .end local v15    # "imeDockSide":I
    .end local v16    # "imeHeightChanged":Z
    .end local v17    # "imeOnTop":Z
    .end local v18    # "imeTargetStack":Lcom/android/server/wm/TaskStack;
    .end local v19    # "imeVisible":Z
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v22    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    :cond_81
    const/16 v19, 0x1

    .restart local v19    # "imeVisible":Z
    goto :goto_1e

    .line 7941
    .end local v19    # "imeVisible":Z
    :cond_84
    const/16 v19, 0x0

    .restart local v19    # "imeVisible":Z
    goto :goto_1e

    .line 7946
    .restart local v10    # "dockVisible":Z
    .restart local v18    # "imeTargetStack":Lcom/android/server/wm/TaskStack;
    :cond_87
    const/4 v15, -0x1

    goto :goto_31

    .line 7947
    .restart local v15    # "imeDockSide":I
    :cond_89
    const/16 v17, 0x0

    .restart local v17    # "imeOnTop":Z
    goto :goto_36

    .line 7948
    :cond_8c
    const/4 v2, 0x0

    .restart local v2    # "imeOnBottom":Z
    goto :goto_3a

    .line 7952
    .restart local v6    # "imeHeight":I
    .restart local v13    # "dockMinimized":Z
    :cond_8e
    const/16 v16, 0x0

    .restart local v16    # "imeHeightChanged":Z
    goto :goto_58

    .line 7951
    .end local v16    # "imeHeightChanged":Z
    :cond_91
    const/16 v16, 0x0

    .restart local v16    # "imeHeightChanged":Z
    goto :goto_58

    .line 7961
    :cond_94
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v22

    .line 7962
    .restart local v22    # "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I

    move-result v1

    add-int/lit8 v14, v1, -0x1

    .restart local v14    # "i":I
    :goto_9e
    if-ltz v14, :cond_d3

    .line 7963
    move-object/from16 v0, v22

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/TaskStack;

    .line 7964
    .restart local v21    # "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/TaskStack;->getDockSide()I

    move-result v1

    const/4 v3, 0x4

    if-ne v1, v3, :cond_c7

    const/16 v20, 0x1

    .line 7965
    .local v20, "isDockedOnBottom":Z
    :goto_b1
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    move-result v1

    if-eqz v1, :cond_cc

    if-nez v2, :cond_bb

    if-eqz v20, :cond_cc

    .line 7966
    :cond_bb
    if-eqz v2, :cond_ca

    move/from16 v1, v16

    :goto_bf
    move-object/from16 v0, v21

    invoke-virtual {v0, v5, v1}, Lcom/android/server/wm/TaskStack;->setAdjustedForIme(Lcom/android/server/wm/WindowState;Z)V

    .line 7962
    :goto_c4
    add-int/lit8 v14, v14, -0x1

    goto :goto_9e

    .line 7964
    .end local v20    # "isDockedOnBottom":Z
    :cond_c7
    const/16 v20, 0x0

    .restart local v20    # "isDockedOnBottom":Z
    goto :goto_b1

    .line 7966
    :cond_ca
    const/4 v1, 0x0

    goto :goto_bf

    .line 7968
    :cond_cc
    const/4 v1, 0x0

    move-object/from16 v0, v21

    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->resetAdjustedForIme(Z)V

    goto :goto_c4

    .line 7971
    .end local v20    # "isDockedOnBottom":Z
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_d3
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    .line 7972
    const/4 v3, 0x1

    const/4 v4, 0x1

    .line 7971
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/wm/DockedStackDividerController;->setAdjustedForIme(ZZZLcom/android/server/wm/WindowState;I)V

    .line 7939
    :goto_dc
    return-void

    .line 7977
    .restart local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_dd
    const/4 v1, 0x1

    goto :goto_79

    .line 7979
    .end local v21    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_df
    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    .line 7980
    const/4 v8, 0x0

    const/4 v9, 0x0

    move-object v11, v5

    move v12, v6

    .line 7979
    invoke-virtual/range {v7 .. v12}, Lcom/android/server/wm/DockedStackDividerController;->setAdjustedForIme(ZZZLcom/android/server/wm/WindowState;I)V

    goto :goto_dc
.end method

.method public animateResizePinnedStack(Landroid/graphics/Rect;I)V
    .registers 11
    .param p1, "bounds"    # Landroid/graphics/Rect;
    .param p2, "animationDuration"    # I

    .prologue
    .line 11351
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 11352
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/TaskStack;

    .line 11353
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_18

    .line 11354
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    const-string/jumbo v1, "animateResizePinnedStack: stackId 4 not found."

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_31

    monitor-exit v6

    .line 11355
    return-void

    .line 11357
    :cond_18
    :try_start_18
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    .line 11358
    .local v3, "originalBounds":Landroid/graphics/Rect;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V

    .line 11359
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v7

    new-instance v0, Lcom/android/server/wm/WindowManagerService$10;

    move-object v1, p0

    move-object v4, p1

    move v5, p2

    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService$10;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/TaskStack;Landroid/graphics/Rect;Landroid/graphics/Rect;I)V

    invoke-virtual {v7, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
    :try_end_2f
    .catchall {:try_start_18 .. :try_end_2f} :catchall_31

    monitor-exit v6

    .line 11350
    return-void

    .line 11351
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "originalBounds":Landroid/graphics/Rect;
    :catchall_31
    move-exception v0

    monitor-exit v6

    throw v0
.end method

.method public attachStack(IIZ)Landroid/graphics/Rect;
    .registers 14
    .param p1, "stackId"    # I
    .param p2, "displayId"    # I
    .param p3, "onTop"    # Z

    .prologue
    const/4 v9, 0x0

    .line 5169
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 5171
    .local v4, "origId":J
    :try_start_5
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7
    :try_end_8
    .catchall {:try_start_5 .. :try_end_8} :catchall_6a

    .line 5172
    :try_start_8
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/DisplayContent;

    .line 5173
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v0, 0x0

    .line 5174
    .local v0, "attachedToDisplay":Z
    if-eqz v2, :cond_62

    .line 5175
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/TaskStack;

    .line 5176
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v3, :cond_3c

    .line 5179
    invoke-virtual {v2, p1}, Lcom/android/server/wm/DisplayContent;->getStackById(I)Lcom/android/server/wm/TaskStack;

    move-result-object v3

    .line 5180
    if-eqz v3, :cond_4f

    .line 5183
    invoke-virtual {v2, v3}, Lcom/android/server/wm/DisplayContent;->detachStack(Lcom/android/server/wm/TaskStack;)V

    .line 5184
    const/4 v6, 0x0

    iput-boolean v6, v3, Lcom/android/server/wm/TaskStack;->mDeferDetach:Z

    .line 5185
    const/4 v0, 0x1

    .line 5190
    :goto_2a
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v6, p1, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 5191
    const/4 v6, 0x3

    if-ne p1, v6, :cond_3c

    .line 5192
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v6

    iget-object v6, v6, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    .line 5193
    const/4 v8, 0x1

    .line 5192
    invoke-virtual {v6, v8}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    .line 5196
    :cond_3c
    if-nez v0, :cond_41

    .line 5197
    invoke-virtual {v3, v2}, Lcom/android/server/wm/TaskStack;->attachDisplayContent(Lcom/android/server/wm/DisplayContent;)V

    .line 5199
    :cond_41
    invoke-virtual {v2, v3, p3}, Lcom/android/server/wm/DisplayContent;->attachStack(Lcom/android/server/wm/TaskStack;Z)V

    .line 5200
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getRawFullscreen()Z
    :try_end_47
    .catchall {:try_start_8 .. :try_end_47} :catchall_67

    move-result v6

    if-eqz v6, :cond_55

    :try_start_4a
    monitor-exit v7
    :try_end_4b
    .catchall {:try_start_4a .. :try_end_4b} :catchall_6a

    .line 5209
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5201
    return-object v9

    .line 5187
    :cond_4f
    :try_start_4f
    new-instance v3, Lcom/android/server/wm/TaskStack;

    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    invoke-direct {v3, p0, p1}, Lcom/android/server/wm/TaskStack;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    .restart local v3    # "stack":Lcom/android/server/wm/TaskStack;
    goto :goto_2a

    .line 5203
    :cond_55
    new-instance v1, Landroid/graphics/Rect;

    invoke-direct {v1}, Landroid/graphics/Rect;-><init>()V

    .line 5204
    .local v1, "bounds":Landroid/graphics/Rect;
    invoke-virtual {v3, v1}, Lcom/android/server/wm/TaskStack;->getRawBounds(Landroid/graphics/Rect;)V
    :try_end_5d
    .catchall {:try_start_4f .. :try_end_5d} :catchall_67

    :try_start_5d
    monitor-exit v7
    :try_end_5e
    .catchall {:try_start_5d .. :try_end_5e} :catchall_6a

    .line 5209
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5205
    return-object v1

    .end local v1    # "bounds":Landroid/graphics/Rect;
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_62
    :try_start_62
    monitor-exit v7
    :try_end_63
    .catchall {:try_start_62 .. :try_end_63} :catchall_6a

    .line 5209
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5211
    return-object v9

    .line 5171
    .end local v0    # "attachedToDisplay":Z
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_67
    move-exception v6

    :try_start_68
    monitor-exit v7

    throw v6
    :try_end_6a
    .catchall {:try_start_68 .. :try_end_6a} :catchall_6a

    .line 5208
    :catchall_6a
    move-exception v6

    .line 5209
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5208
    throw v6
.end method

.method public cancelTaskThumbnailTransition(I)V
    .registers 5
    .param p1, "taskId"    # I

    .prologue
    .line 5268
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5269
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 5270
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_10

    .line 5271
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->cancelTaskThumbnailTransition()V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_12

    :cond_10
    monitor-exit v2

    .line 5267
    return-void

    .line 5268
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_12
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public cancelTaskWindowTransition(I)V
    .registers 5
    .param p1, "taskId"    # I

    .prologue
    .line 5258
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5259
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 5260
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_10

    .line 5261
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->cancelTaskWindowTransition()V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_12

    :cond_10
    monitor-exit v2

    .line 5257
    return-void

    .line 5258
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_12
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method checkDrawnWindowsLocked()V
    .registers 5

    .prologue
    .line 9752
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_c

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawnCallback:Ljava/lang/Runnable;

    if-nez v2, :cond_d

    .line 9753
    :cond_c
    return-void

    .line 9755
    :cond_d
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "j":I
    :goto_15
    if-ltz v0, :cond_3f

    .line 9756
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 9761
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-nez v2, :cond_39

    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v2, :cond_39

    iget-boolean v2, v1, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    if-eqz v2, :cond_39

    .line 9765
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->hasDrawnLw()Z

    move-result v2

    if-eqz v2, :cond_36

    .line 9768
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9755
    :cond_36
    :goto_36
    add-int/lit8 v0, v0, -0x1

    goto :goto_15

    .line 9764
    :cond_39
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_36

    .line 9771
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_3f
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_55

    .line 9773
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x18

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 9774
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x21

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 9751
    :cond_55
    return-void
.end method

.method public clearForcedDisplayDensityForUser(II)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "userId"    # I

    .prologue
    const/4 v6, 0x0

    const/4 v3, 0x0

    .line 9311
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 9312
    const-string/jumbo v1, "android.permission.WRITE_SECURE_SETTINGS"

    .line 9311
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_16

    .line 9314
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9317
    :cond_16
    if-eqz p1, :cond_21

    .line 9318
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "Can only set the default display"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9321
    :cond_21
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 9322
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    const-string/jumbo v5, "clearForcedDisplayDensityForUser"

    const/4 v4, 0x1

    move v2, p2

    .line 9321
    invoke-static/range {v0 .. v6}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    move-result v7

    .line 9324
    .local v7, "callingUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 9326
    .local v10, "ident":J
    :try_start_36
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1
    :try_end_39
    .catchall {:try_start_36 .. :try_end_39} :catchall_5f

    .line 9327
    :try_start_39
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    .line 9328
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v8, :cond_48

    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    if-ne v0, v7, :cond_48

    .line 9330
    iget v0, v8, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    .line 9329
    invoke-direct {p0, v8, v0}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 9332
    :cond_48
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 9333
    const-string/jumbo v2, "display_density_forced"

    const-string/jumbo v3, ""

    .line 9332
    invoke-static {v0, v2, v3, v7}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z
    :try_end_57
    .catchall {:try_start_39 .. :try_end_57} :catchall_5c

    :try_start_57
    monitor-exit v1
    :try_end_58
    .catchall {:try_start_57 .. :try_end_58} :catchall_5f

    .line 9336
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9310
    return-void

    .line 9326
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_5c
    move-exception v0

    :try_start_5d
    monitor-exit v1

    throw v0
    :try_end_5f
    .catchall {:try_start_5d .. :try_end_5f} :catchall_5f

    .line 9335
    :catchall_5f
    move-exception v0

    .line 9336
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9335
    throw v0
.end method

.method public clearForcedDisplaySize(I)V
    .registers 9
    .param p1, "displayId"    # I

    .prologue
    .line 9231
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 9232
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    .line 9231
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_14

    .line 9234
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9237
    :cond_14
    if-eqz p1, :cond_1f

    .line 9238
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v4, "Can only set the default display"

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9240
    :cond_1f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 9242
    .local v2, "ident":J
    :try_start_23
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_4a

    .line 9243
    :try_start_26
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9244
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_42

    .line 9245
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    .line 9246
    iget v5, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    .line 9245
    invoke-direct {p0, v0, v1, v5}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    .line 9247
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    .line 9248
    const-string/jumbo v5, "display_size_forced"

    const-string/jumbo v6, ""

    .line 9247
    invoke-static {v1, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_42
    .catchall {:try_start_26 .. :try_end_42} :catchall_47

    :cond_42
    :try_start_42
    monitor-exit v4
    :try_end_43
    .catchall {:try_start_42 .. :try_end_43} :catchall_4a

    .line 9252
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9230
    return-void

    .line 9242
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_47
    move-exception v1

    :try_start_48
    monitor-exit v4

    throw v1
    :try_end_4a
    .catchall {:try_start_48 .. :try_end_4a} :catchall_4a

    .line 9251
    :catchall_4a
    move-exception v1

    .line 9252
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9251
    throw v1
.end method

.method public clearWindowContentFrameStats(Landroid/os/IBinder;)Z
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v4, 0x0

    .line 10491
    const-string/jumbo v2, "android.permission.FRAME_STATS"

    .line 10492
    const-string/jumbo v3, "clearWindowContentFrameStats()"

    .line 10491
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_16

    .line 10493
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires FRAME_STATS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10495
    :cond_16
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 10496
    :try_start_19
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;
    :try_end_21
    .catchall {:try_start_19 .. :try_end_21} :catchall_33

    .line 10497
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_25

    monitor-exit v3

    .line 10498
    return v4

    .line 10500
    :cond_25
    :try_start_25
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v0, v2, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_29
    .catchall {:try_start_25 .. :try_end_29} :catchall_33

    .line 10501
    .local v0, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v0, :cond_2d

    monitor-exit v3

    .line 10502
    return v4

    .line 10504
    :cond_2d
    :try_start_2d
    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfaceController;->clearWindowContentFrameStats()Z
    :try_end_30
    .catchall {:try_start_2d .. :try_end_30} :catchall_33

    move-result v2

    monitor-exit v3

    return v2

    .line 10495
    .end local v0    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_33
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .registers 11
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 5680
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 5681
    :try_start_3
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 5682
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_a
    if-ge v0, v2, :cond_34

    .line 5683
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 5684
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 5685
    .local v3, "numWindows":I
    const/4 v5, 0x0

    .local v5, "winNdx":I
    :goto_1d
    if-ge v5, v3, :cond_31

    .line 5686
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 5687
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v7, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_27
    .catchall {:try_start_3 .. :try_end_27} :catchall_36

    if-eqz v7, :cond_2e

    .line 5689
    :try_start_29
    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v7, p1}, Landroid/view/IWindow;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_2e
    .catch Landroid/os/RemoteException; {:try_start_29 .. :try_end_2e} :catch_39
    .catchall {:try_start_29 .. :try_end_2e} :catchall_36

    .line 5685
    :cond_2e
    :goto_2e
    add-int/lit8 v5, v5, 0x1

    goto :goto_1d

    .line 5682
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_31
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_34
    monitor-exit v8

    .line 5679
    return-void

    .line 5680
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_36
    move-exception v7

    monitor-exit v8

    throw v7

    .line 5690
    .restart local v0    # "displayNdx":I
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    :catch_39
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_2e
.end method

.method public computeNewConfiguration()Landroid/content/res/Configuration;
    .registers 3

    .prologue
    .line 7532
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 7533
    :try_start_3
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_9

    move-result-object v1

    monitor-exit v0

    return-object v1

    .line 7532
    :catchall_9
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method computeScreenConfigurationLocked(Landroid/content/res/Configuration;)V
    .registers 26
    .param p1, "config"    # Landroid/content/res/Configuration;

    .prologue
    .line 7717
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->uiMode:I

    .line 7716
    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    move-result-object v4

    .line 7719
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v7, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 7720
    .local v7, "dw":I
    iget v8, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 7721
    .local v8, "dh":I
    if-gt v7, v8, :cond_12c

    const/4 v3, 0x1

    :goto_11
    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->orientation:I

    .line 7724
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    move-object/from16 v0, p1

    iget v9, v0, Landroid/content/res/Configuration;->uiMode:I

    invoke-interface {v3, v7, v8, v6, v9}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(IIII)I

    move-result v3

    int-to-float v3, v3

    .line 7725
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    .line 7724
    div-float/2addr v3, v6

    float-to-int v3, v3

    .line 7723
    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 7727
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    move-object/from16 v0, p1

    iget v9, v0, Landroid/content/res/Configuration;->uiMode:I

    invoke-interface {v3, v7, v8, v6, v9}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(IIII)I

    move-result v3

    int-to-float v3, v3

    .line 7728
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    iget v6, v6, Landroid/util/DisplayMetrics;->density:F

    .line 7727
    div-float/2addr v3, v6

    float-to-int v3, v3

    .line 7726
    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 7729
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v6, 0x1

    if-eq v3, v6, :cond_12f

    .line 7730
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v6, 0x3

    if-ne v3, v6, :cond_132

    const/4 v5, 0x1

    .line 7732
    .local v5, "rotated":Z
    :goto_5e
    move-object/from16 v0, p1

    iget v6, v0, Landroid/content/res/Configuration;->uiMode:I

    .line 7733
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    iget v9, v3, Landroid/util/DisplayMetrics;->density:F

    move-object/from16 v3, p0

    move-object/from16 v10, p1

    .line 7732
    invoke-direct/range {v3 .. v10}, Lcom/android/server/wm/WindowManagerService;->computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIIFLandroid/content/res/Configuration;)V

    .line 7735
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->screenLayout:I

    and-int/lit16 v6, v3, -0x301

    .line 7736
    iget v3, v4, Landroid/view/DisplayInfo;->flags:I

    and-int/lit8 v3, v3, 0x10

    if-eqz v3, :cond_135

    .line 7737
    const/16 v3, 0x200

    .line 7735
    :goto_7d
    or-int/2addr v3, v6

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->screenLayout:I

    .line 7740
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    int-to-float v3, v3

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    div-float/2addr v3, v6

    float-to-int v3, v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->compatScreenWidthDp:I

    .line 7741
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    int-to-float v3, v3

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    div-float/2addr v3, v6

    float-to-int v3, v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->compatScreenHeightDp:I

    .line 7742
    move-object/from16 v0, p1

    iget v11, v0, Landroid/content/res/Configuration;->uiMode:I

    .line 7743
    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    move-object/from16 v9, p0

    move v10, v5

    move v13, v7

    move v14, v8

    .line 7742
    invoke-direct/range {v9 .. v14}, Lcom/android/server/wm/WindowManagerService;->computeCompatSmallestWidth(ZILandroid/util/DisplayMetrics;II)I

    move-result v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->compatSmallestScreenWidthDp:I

    .line 7744
    iget v3, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->densityDpi:I

    .line 7748
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    .line 7749
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 7750
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    .line 7752
    const/16 v19, 0x0

    .line 7753
    .local v19, "keyboardPresence":I
    const/16 v21, 0x0

    .line 7754
    .local v21, "navigationPresence":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v3}, Lcom/android/server/input/InputManagerService;->getInputDevices()[Landroid/view/InputDevice;

    move-result-object v16

    .line 7755
    .local v16, "devices":[Landroid/view/InputDevice;
    move-object/from16 v0, v16

    array-length v0, v0

    move/from16 v20, v0

    .line 7756
    .local v20, "len":I
    const/16 v18, 0x0

    .local v18, "i":I
    :goto_dd
    move/from16 v0, v18

    move/from16 v1, v20

    if-ge v0, v1, :cond_159

    .line 7757
    aget-object v15, v16, v18

    .line 7758
    .local v15, "device":Landroid/view/InputDevice;
    invoke-virtual {v15}, Landroid/view/InputDevice;->isVirtual()Z

    move-result v3

    if-nez v3, :cond_129

    .line 7759
    invoke-virtual {v15}, Landroid/view/InputDevice;->getSources()I

    move-result v23

    .line 7760
    .local v23, "sources":I
    invoke-virtual {v15}, Landroid/view/InputDevice;->isExternal()Z

    move-result v3

    if-eqz v3, :cond_139

    .line 7761
    const/16 v22, 0x2

    .line 7764
    .local v22, "presenceFlag":I
    :goto_f7
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    if-eqz v3, :cond_13c

    .line 7765
    move/from16 v0, v23

    and-int/lit16 v3, v0, 0x1002

    .line 7766
    const/16 v6, 0x1002

    .line 7765
    if-ne v3, v6, :cond_10a

    .line 7767
    const/4 v3, 0x3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    .line 7773
    :cond_10a
    :goto_10a
    const v3, 0x10004

    and-int v3, v3, v23

    const v6, 0x10004

    if-ne v3, v6, :cond_142

    .line 7774
    const/4 v3, 0x3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    .line 7775
    or-int v21, v21, v22

    .line 7782
    :cond_11b
    :goto_11b
    invoke-virtual {v15}, Landroid/view/InputDevice;->getKeyboardType()I

    move-result v3

    const/4 v6, 0x2

    if-ne v3, v6, :cond_129

    .line 7783
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 7784
    or-int v19, v19, v22

    .line 7756
    .end local v22    # "presenceFlag":I
    .end local v23    # "sources":I
    :cond_129
    add-int/lit8 v18, v18, 0x1

    goto :goto_dd

    .line 7722
    .end local v5    # "rotated":Z
    .end local v15    # "device":Landroid/view/InputDevice;
    .end local v16    # "devices":[Landroid/view/InputDevice;
    .end local v18    # "i":I
    .end local v19    # "keyboardPresence":I
    .end local v20    # "len":I
    .end local v21    # "navigationPresence":I
    :cond_12c
    const/4 v3, 0x2

    goto/16 :goto_11

    .line 7729
    :cond_12f
    const/4 v5, 0x1

    .restart local v5    # "rotated":Z
    goto/16 :goto_5e

    .line 7730
    .end local v5    # "rotated":Z
    :cond_132
    const/4 v5, 0x0

    .restart local v5    # "rotated":Z
    goto/16 :goto_5e

    .line 7738
    :cond_135
    const/16 v3, 0x100

    goto/16 :goto_7d

    .line 7762
    .restart local v15    # "device":Landroid/view/InputDevice;
    .restart local v16    # "devices":[Landroid/view/InputDevice;
    .restart local v18    # "i":I
    .restart local v19    # "keyboardPresence":I
    .restart local v20    # "len":I
    .restart local v21    # "navigationPresence":I
    .restart local v23    # "sources":I
    :cond_139
    const/16 v22, 0x1

    .restart local v22    # "presenceFlag":I
    goto :goto_f7

    .line 7770
    :cond_13c
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    goto :goto_10a

    .line 7776
    :cond_142
    move/from16 v0, v23

    and-int/lit16 v3, v0, 0x201

    const/16 v6, 0x201

    if-ne v3, v6, :cond_11b

    .line 7777
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->navigation:I

    const/4 v6, 0x1

    if-ne v3, v6, :cond_11b

    .line 7778
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    .line 7779
    or-int v21, v21, v22

    goto :goto_11b

    .line 7789
    .end local v15    # "device":Landroid/view/InputDevice;
    .end local v22    # "presenceFlag":I
    .end local v23    # "sources":I
    :cond_159
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->navigation:I

    const/4 v6, 0x1

    if-ne v3, v6, :cond_16d

    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    if-eqz v3, :cond_16d

    .line 7790
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    .line 7791
    or-int/lit8 v21, v21, 0x1

    .line 7795
    :cond_16d
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->keyboard:I

    const/4 v6, 0x1

    if-eq v3, v6, :cond_1b3

    const/16 v17, 0x1

    .line 7796
    .local v17, "hardKeyboardAvailable":Z
    :goto_176
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    move/from16 v0, v17

    if-eq v0, v3, :cond_196

    .line 7797
    move/from16 v0, v17

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    .line 7798
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x16

    invoke-virtual {v3, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 7799
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x16

    invoke-virtual {v3, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 7803
    :cond_196
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->keyboardHidden:I

    .line 7804
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    .line 7805
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigationHidden:I

    .line 7806
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p1

    move/from16 v1, v19

    move/from16 v2, v21

    invoke-interface {v3, v0, v1, v2}, Landroid/view/WindowManagerPolicy;->adjustConfigurationLw(Landroid/content/res/Configuration;II)V

    .line 7715
    return-void

    .line 7795
    .end local v17    # "hardKeyboardAvailable":Z
    :cond_1b3
    const/16 v17, 0x0

    .restart local v17    # "hardKeyboardAvailable":Z
    goto :goto_176
.end method

.method public continueSurfaceLayout()V
    .registers 3

    .prologue
    .line 5471
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5472
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->continueLayout()V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 5470
    return-void

    .line 5471
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public createDisplayContentLocked(Landroid/view/Display;)V
    .registers 4
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 11123
    if-nez p1, :cond_b

    .line 11124
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "getDisplayContent: display must not be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11126
    :cond_b
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    .line 11122
    return-void
.end method

.method public createWallpaperInputConsumer(Landroid/view/InputChannel;)V
    .registers 5
    .param p1, "inputChannel"    # Landroid/view/InputChannel;

    .prologue
    .line 10447
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10448
    :try_start_3
    new-instance v0, Lcom/android/server/wm/InputConsumerImpl;

    const-string/jumbo v2, "wallpaper input"

    invoke-direct {v0, p0, v2, p1}, Lcom/android/server/wm/InputConsumerImpl;-><init>(Lcom/android/server/wm/WindowManagerService;Ljava/lang/String;Landroid/view/InputChannel;)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    .line 10449
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    iget-object v0, v0, Lcom/android/server/wm/InputConsumerImpl;->mWindowHandle:Lcom/android/server/input/InputWindowHandle;

    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/server/input/InputWindowHandle;->hasWallpaper:Z

    .line 10450
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_1a
    .catchall {:try_start_3 .. :try_end_1a} :catchall_1c

    monitor-exit v1

    .line 10446
    return-void

    .line 10447
    :catchall_1c
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method createWatermarkInTransaction()V
    .registers 14

    .prologue
    .line 10277
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    if-eqz v9, :cond_5

    .line 10278
    return-void

    .line 10281
    :cond_5
    new-instance v2, Ljava/io/File;

    const-string/jumbo v9, "/system/etc/setup.conf"

    invoke-direct {v2, v9}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 10282
    .local v2, "file":Ljava/io/File;
    const/4 v3, 0x0

    .line 10283
    .local v3, "in":Ljava/io/FileInputStream;
    const/4 v5, 0x0

    .line 10285
    .local v5, "ind":Ljava/io/DataInputStream;
    :try_start_f
    new-instance v4, Ljava/io/FileInputStream;

    invoke-direct {v4, v2}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_14
    .catch Ljava/io/FileNotFoundException; {:try_start_f .. :try_end_14} :catch_61
    .catch Ljava/io/IOException; {:try_start_f .. :try_end_14} :catch_50
    .catchall {:try_start_f .. :try_end_14} :catchall_72

    .line 10286
    .end local v3    # "in":Ljava/io/FileInputStream;
    .local v4, "in":Ljava/io/FileInputStream;
    :try_start_14
    new-instance v6, Ljava/io/DataInputStream;

    invoke-direct {v6, v4}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_19
    .catch Ljava/io/FileNotFoundException; {:try_start_14 .. :try_end_19} :catch_8a
    .catch Ljava/io/IOException; {:try_start_14 .. :try_end_19} :catch_91
    .catchall {:try_start_14 .. :try_end_19} :catchall_83

    .line 10287
    .local v6, "ind":Ljava/io/DataInputStream;
    :try_start_19
    invoke-virtual {v6}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    .end local v5    # "ind":Ljava/io/DataInputStream;
    move-result-object v7

    .line 10288
    .local v7, "line":Ljava/lang/String;
    if-eqz v7, :cond_3e

    .line 10289
    const-string/jumbo v9, "%"

    invoke-virtual {v7, v9}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v8

    .line 10290
    .local v8, "toks":[Ljava/lang/String;
    if-eqz v8, :cond_3e

    array-length v9, v8

    if-lez v9, :cond_3e

    .line 10291
    new-instance v9, Lcom/android/server/wm/Watermark;

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v10

    .line 10292
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    .line 10291
    invoke-direct {v9, v10, v11, v12, v8}, Lcom/android/server/wm/Watermark;-><init>(Landroid/view/Display;Landroid/util/DisplayMetrics;Landroid/view/SurfaceSession;[Ljava/lang/String;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;
    :try_end_3e
    .catch Ljava/io/FileNotFoundException; {:try_start_19 .. :try_end_3e} :catch_8d
    .catch Ljava/io/IOException; {:try_start_19 .. :try_end_3e} :catch_94
    .catchall {:try_start_19 .. :try_end_3e} :catchall_86

    .line 10298
    .end local v8    # "toks":[Ljava/lang/String;
    :cond_3e
    if-eqz v6, :cond_48

    .line 10300
    :try_start_40
    invoke-virtual {v6}, Ljava/io/DataInputStream;->close()V
    :try_end_43
    .catch Ljava/io/IOException; {:try_start_40 .. :try_end_43} :catch_46

    :cond_43
    :goto_43
    move-object v5, v6

    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    .line 10276
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    :cond_45
    :goto_45
    return-void

    .line 10301
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    .restart local v7    # "line":Ljava/lang/String;
    :catch_46
    move-exception v1

    .local v1, "e":Ljava/io/IOException;
    goto :goto_43

    .line 10303
    .end local v1    # "e":Ljava/io/IOException;
    :cond_48
    if-eqz v4, :cond_43

    .line 10305
    :try_start_4a
    invoke-virtual {v4}, Ljava/io/FileInputStream;->close()V
    :try_end_4d
    .catch Ljava/io/IOException; {:try_start_4a .. :try_end_4d} :catch_4e

    goto :goto_43

    .line 10306
    :catch_4e
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_43

    .line 10296
    .end local v1    # "e":Ljava/io/IOException;
    .end local v4    # "in":Ljava/io/FileInputStream;
    .end local v6    # "ind":Ljava/io/DataInputStream;
    .end local v7    # "line":Ljava/lang/String;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_50
    move-exception v1

    .line 10298
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v1    # "e":Ljava/io/IOException;
    :goto_51
    if-eqz v5, :cond_59

    .line 10300
    :try_start_53
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_56
    .catch Ljava/io/IOException; {:try_start_53 .. :try_end_56} :catch_57

    goto :goto_45

    .line 10301
    :catch_57
    move-exception v1

    goto :goto_45

    .line 10303
    :cond_59
    if-eqz v3, :cond_45

    .line 10305
    :try_start_5b
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_5e
    .catch Ljava/io/IOException; {:try_start_5b .. :try_end_5e} :catch_5f

    goto :goto_45

    .line 10306
    :catch_5f
    move-exception v1

    goto :goto_45

    .line 10295
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catch_61
    move-exception v0

    .line 10298
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .local v0, "e":Ljava/io/FileNotFoundException;
    :goto_62
    if-eqz v5, :cond_6a

    .line 10300
    :try_start_64
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_67
    .catch Ljava/io/IOException; {:try_start_64 .. :try_end_67} :catch_68

    goto :goto_45

    .line 10301
    :catch_68
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_45

    .line 10303
    .end local v1    # "e":Ljava/io/IOException;
    :cond_6a
    if-eqz v3, :cond_45

    .line 10305
    :try_start_6c
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_6f
    .catch Ljava/io/IOException; {:try_start_6c .. :try_end_6f} :catch_70

    goto :goto_45

    .line 10306
    :catch_70
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_45

    .line 10297
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_72
    move-exception v9

    .line 10298
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    :goto_73
    if-eqz v5, :cond_7b

    .line 10300
    :try_start_75
    invoke-virtual {v5}, Ljava/io/DataInputStream;->close()V
    :try_end_78
    .catch Ljava/io/IOException; {:try_start_75 .. :try_end_78} :catch_79

    .line 10297
    :cond_78
    :goto_78
    throw v9

    .line 10301
    :catch_79
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_78

    .line 10303
    .end local v1    # "e":Ljava/io/IOException;
    :cond_7b
    if-eqz v3, :cond_78

    .line 10305
    :try_start_7d
    invoke-virtual {v3}, Ljava/io/FileInputStream;->close()V
    :try_end_80
    .catch Ljava/io/IOException; {:try_start_7d .. :try_end_80} :catch_81

    goto :goto_78

    .line 10306
    :catch_81
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    goto :goto_78

    .line 10297
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v5    # "ind":Ljava/io/DataInputStream;
    :catchall_83
    move-exception v9

    move-object v3, v4

    .end local v4    # "in":Ljava/io/FileInputStream;
    .local v3, "in":Ljava/io/FileInputStream;
    goto :goto_73

    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catchall_86
    move-exception v9

    move-object v5, v6

    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_73

    .line 10295
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_8a
    move-exception v0

    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v3, v4

    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_62

    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_8d
    move-exception v0

    .restart local v0    # "e":Ljava/io/FileNotFoundException;
    move-object v5, v6

    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_62

    .line 10296
    .end local v0    # "e":Ljava/io/FileNotFoundException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    :catch_91
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    move-object v3, v4

    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_51

    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "in":Ljava/io/FileInputStream;
    .end local v5    # "ind":Ljava/io/DataInputStream;
    .restart local v4    # "in":Ljava/io/FileInputStream;
    .restart local v6    # "ind":Ljava/io/DataInputStream;
    :catch_94
    move-exception v1

    .restart local v1    # "e":Ljava/io/IOException;
    move-object v5, v6

    .end local v6    # "ind":Ljava/io/DataInputStream;
    .local v5, "ind":Ljava/io/DataInputStream;
    move-object v3, v4

    .end local v4    # "in":Ljava/io/FileInputStream;
    .restart local v3    # "in":Ljava/io/FileInputStream;
    goto :goto_51
.end method

.method public deferSurfaceLayout()V
    .registers 3

    .prologue
    .line 5462
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5463
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->deferLayout()V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 5461
    return-void

    .line 5462
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method destroyPreservedSurfaceLocked()V
    .registers 4

    .prologue
    .line 9000
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_8
    if-ltz v0, :cond_1a

    .line 9001
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 9002
    .local v1, "w":Lcom/android/server/wm/WindowState;
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->destroyPreservedSurfaceLocked()V

    .line 9000
    add-int/lit8 v0, v0, -0x1

    goto :goto_8

    .line 9004
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_1a
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDestroyPreservedSurface:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 8999
    return-void
.end method

.method public detachStack(I)V
    .registers 6
    .param p1, "stackId"    # I

    .prologue
    .line 5224
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 5225
    :try_start_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 5226
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_21

    .line 5227
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5228
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_21

    .line 5229
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->isAnimating()Z

    move-result v2

    if-eqz v2, :cond_1e

    .line 5230
    const/4 v2, 0x1

    iput-boolean v2, v1, Lcom/android/server/wm/TaskStack;->mDeferDetach:Z
    :try_end_1c
    .catchall {:try_start_3 .. :try_end_1c} :catchall_23

    monitor-exit v3

    .line 5231
    return-void

    .line 5233
    :cond_1e
    :try_start_1e
    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    :try_end_21
    .catchall {:try_start_1e .. :try_end_21} :catchall_23

    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_21
    monitor-exit v3

    .line 5223
    return-void

    .line 5224
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_23
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method detachStackLocked(Lcom/android/server/wm/DisplayContent;Lcom/android/server/wm/TaskStack;)V
    .registers 5
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "stack"    # Lcom/android/server/wm/TaskStack;

    .prologue
    .line 5215
    invoke-virtual {p1, p2}, Lcom/android/server/wm/DisplayContent;->detachStack(Lcom/android/server/wm/TaskStack;)V

    .line 5216
    invoke-virtual {p2}, Lcom/android/server/wm/TaskStack;->detachDisplay()V

    .line 5217
    iget v0, p2, Lcom/android/server/wm/TaskStack;->mStackId:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_15

    .line 5218
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    .line 5219
    const/4 v1, 0x0

    .line 5218
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    .line 5214
    :cond_15
    return-void
.end method

.method public detectSafeMode()Z
    .registers 13

    .prologue
    .line 8152
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 8153
    const-wide/16 v10, 0x3e8

    .line 8152
    invoke-virtual {v8, v10, v11}, Lcom/android/server/wm/InputMonitor;->waitForInputDevicesReady(J)Z

    move-result v8

    if-nez v8, :cond_13

    .line 8154
    const-string/jumbo v8, "WindowManager"

    const-string/jumbo v9, "Devices still not ready after waiting 1000 milliseconds before attempting to detect safe mode."

    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8160
    :cond_13
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v8

    const-string/jumbo v9, "safe_boot_disallowed"

    const/4 v10, 0x0

    .line 8159
    invoke-static {v8, v9, v10}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_25

    .line 8161
    const/4 v8, 0x0

    return v8

    .line 8164
    :cond_25
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v9, -0x1

    const/16 v10, -0x100

    .line 8165
    const/16 v11, 0x52

    .line 8164
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v4

    .line 8166
    .local v4, "menuState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v9, -0x1

    const/16 v10, -0x100

    const/16 v11, 0x2f

    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v5

    .line 8167
    .local v5, "sState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v9, -0x1

    const/16 v10, 0x201

    .line 8168
    const/16 v11, 0x17

    .line 8167
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v2

    .line 8169
    .local v2, "dpadState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v9, -0x1

    const v10, 0x10004

    .line 8170
    const/16 v11, 0x110

    .line 8169
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    move-result v6

    .line 8171
    .local v6, "trackballState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v9, -0x1

    const/16 v10, -0x100

    .line 8172
    const/16 v11, 0x19

    .line 8171
    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v7

    .line 8173
    .local v7, "volumeDownState":I
    if-gtz v4, :cond_61

    if-lez v5, :cond_e7

    :cond_61
    const/4 v8, 0x1

    :goto_62
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 8176
    :try_start_64
    const-string/jumbo v8, "persist.sys.safemode"

    const/4 v9, 0x0

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v8

    if-nez v8, :cond_78

    .line 8177
    const-string/jumbo v8, "ro.sys.safemode"

    const/4 v9, 0x0

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_8e

    .line 8178
    :cond_78
    const-string/jumbo v8, "persist.sys.audit_safemode"

    const/4 v9, 0x0

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    .line 8180
    .local v0, "auditSafeMode":I
    if-nez v0, :cond_f3

    .line 8181
    const/4 v8, 0x1

    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 8182
    const-string/jumbo v8, "persist.sys.safemode"

    const-string/jumbo v9, ""

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_8e
    .catch Ljava/lang/IllegalArgumentException; {:try_start_64 .. :try_end_8e} :catch_104

    .line 8198
    .end local v0    # "auditSafeMode":I
    :cond_8e
    :goto_8e
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    if-eqz v8, :cond_11a

    .line 8199
    const-string/jumbo v8, "WindowManager"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "SAFE MODE ENABLED (menu="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string/jumbo v10, " s="

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    .line 8200
    const-string/jumbo v10, " dpad="

    .line 8199
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    .line 8200
    const-string/jumbo v10, " trackball="

    .line 8199
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    .line 8200
    const-string/jumbo v10, ")"

    .line 8199
    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8201
    const-string/jumbo v8, "ro.sys.safemode"

    const-string/jumbo v9, "1"

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 8205
    :goto_dd
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    invoke-interface {v8, v9}, Landroid/view/WindowManagerPolicy;->setSafeMode(Z)V

    .line 8206
    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    return v8

    .line 8173
    :cond_e7
    if-gtz v2, :cond_61

    if-gtz v6, :cond_61

    .line 8174
    if-lez v7, :cond_f0

    const/4 v8, 0x1

    goto/16 :goto_62

    :cond_f0
    const/4 v8, 0x0

    goto/16 :goto_62

    .line 8185
    .restart local v0    # "auditSafeMode":I
    :cond_f3
    :try_start_f3
    const-string/jumbo v8, "ro.build.date.utc"

    const/4 v9, 0x0

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v1

    .line 8187
    .local v1, "buildDate":I
    if-lt v0, v1, :cond_106

    .line 8188
    const/4 v8, 0x1

    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 8189
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->showAuditSafeModeNotification()V

    goto :goto_8e

    .line 8196
    .end local v0    # "auditSafeMode":I
    .end local v1    # "buildDate":I
    :catch_104
    move-exception v3

    .local v3, "e":Ljava/lang/IllegalArgumentException;
    goto :goto_8e

    .line 8191
    .end local v3    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v0    # "auditSafeMode":I
    .restart local v1    # "buildDate":I
    :cond_106
    const-string/jumbo v8, "persist.sys.safemode"

    const-string/jumbo v9, ""

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 8192
    const-string/jumbo v8, "persist.sys.audit_safemode"

    const-string/jumbo v9, ""

    invoke-static {v8, v9}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_118
    .catch Ljava/lang/IllegalArgumentException; {:try_start_f3 .. :try_end_118} :catch_104

    goto/16 :goto_8e

    .line 8203
    .end local v0    # "auditSafeMode":I
    .end local v1    # "buildDate":I
    :cond_11a
    const-string/jumbo v8, "WindowManager"

    const-string/jumbo v9, "SAFE MODE not enabled"

    invoke-static {v8, v9}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_dd
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;

    .prologue
    .line 5543
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 5545
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5549
    :cond_14
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_2c

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->isKeyguardSecure()Z

    move-result v0

    if-eqz v0, :cond_2c

    .line 5550
    const-string/jumbo v0, "WindowManager"

    const-string/jumbo v1, "current mode is SecurityMode, ignore disableKeyguard"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5551
    return-void

    .line 5555
    :cond_2c
    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v0

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    if-eq v0, v1, :cond_42

    .line 5556
    const-string/jumbo v0, "WindowManager"

    const-string/jumbo v1, "non-current user, ignore disableKeyguard"

    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 5557
    return-void

    .line 5560
    :cond_42
    if-nez p1, :cond_4d

    .line 5561
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "token == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5564
    :cond_4d
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    .line 5565
    new-instance v2, Landroid/util/Pair;

    invoke-direct {v2, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    const/4 v3, 0x1

    .line 5564
    invoke-virtual {v1, v3, v2}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    .line 5542
    return-void
.end method

.method public dismissKeyguard()V
    .registers 3

    .prologue
    .line 5632
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 5634
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5636
    :cond_14
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5637
    :try_start_17
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->dismissKeyguardLw()V
    :try_end_1c
    .catchall {:try_start_17 .. :try_end_1c} :catchall_1e

    monitor-exit v1

    .line 5631
    return-void

    .line 5636
    :catchall_1e
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V
    .registers 4
    .param p1, "session"    # Lcom/android/server/wm/Session;

    .prologue
    .line 5783
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x22

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v0}, Landroid/os/Message;->sendToTarget()V

    .line 5782
    return-void
.end method

.method public displayReady()V
    .registers 8

    .prologue
    .line 8210
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplays:[Landroid/view/Display;

    const/4 v3, 0x0

    array-length v5, v4

    :goto_4
    if-ge v3, v5, :cond_12

    aget-object v0, v4, v3

    .line 8211
    .local v0, "display":Landroid/view/Display;
    invoke-virtual {v0}, Landroid/view/Display;->getDisplayId()I

    move-result v6

    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    .line 8210
    add-int/lit8 v3, v3, 0x1

    goto :goto_4

    .line 8214
    .end local v0    # "display":Landroid/view/Display;
    :cond_12
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 8215
    :try_start_15
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 8216
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->readForcedDisplayPropertiesLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 8217
    const/4 v3, 0x1

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z
    :try_end_1f
    .catchall {:try_start_15 .. :try_end_1f} :catchall_4a

    monitor-exit v4

    .line 8221
    :try_start_20
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    const/4 v4, 0x0

    invoke-interface {v3, v4}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_26
    .catch Landroid/os/RemoteException; {:try_start_20 .. :try_end_26} :catch_52

    .line 8225
    :goto_26
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 8226
    :try_start_29
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    .line 8227
    const-string/jumbo v5, "android.hardware.touchscreen"

    .line 8226
    invoke-virtual {v3, v5}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v3

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    .line 8228
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-direct {p0, v3}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_3f
    .catchall {:try_start_29 .. :try_end_3f} :catchall_4d

    monitor-exit v4

    .line 8232
    :try_start_40
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    const/4 v4, 0x0

    invoke-interface {v3, v4}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_46
    .catch Landroid/os/RemoteException; {:try_start_40 .. :try_end_46} :catch_50

    .line 8236
    :goto_46
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->updateCircularDisplayMaskIfNeeded()V

    .line 8209
    return-void

    .line 8214
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_4a
    move-exception v3

    monitor-exit v4

    throw v3

    .line 8225
    .restart local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_4d
    move-exception v3

    monitor-exit v4

    throw v3

    .line 8233
    :catch_50
    move-exception v2

    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_46

    .line 8222
    .end local v2    # "e":Landroid/os/RemoteException;
    :catch_52
    move-exception v2

    .restart local v2    # "e":Landroid/os/RemoteException;
    goto :goto_26
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .registers 12
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    const/4 v7, 0x0

    const/4 v0, 0x0

    .line 10941
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v3, "android.permission.DUMP"

    invoke-virtual {v1, v3}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_38

    .line 10943
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "Permission Denial: can\'t dump WindowManager from from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 10944
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    .line 10943
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 10945
    const-string/jumbo v1, ", uid="

    .line 10943
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    .line 10945
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 10943
    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10946
    return-void

    .line 10949
    :cond_38
    const/4 v5, 0x0

    .line 10951
    .local v5, "dumpAll":Z
    const/4 v4, 0x0

    .line 10952
    .local v4, "opti":I
    :goto_3a
    array-length v1, p3

    if-ge v4, v1, :cond_47

    .line 10953
    aget-object v6, p3, v4

    .line 10954
    .local v6, "opt":Ljava/lang/String;
    if-eqz v6, :cond_47

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v1

    if-gtz v1, :cond_68

    .line 10986
    .end local v6    # "opt":Ljava/lang/String;
    :cond_47
    array-length v1, p3

    if-ge v4, v1, :cond_226

    .line 10987
    aget-object v2, p3, v4

    .line 10988
    .local v2, "cmd":Ljava/lang/String;
    add-int/lit8 v4, v4, 0x1

    .line 10989
    const-string/jumbo v0, "lastanr"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_60

    const-string/jumbo v0, "l"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_116

    .line 10990
    :cond_60
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 10991
    :try_start_63
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V
    :try_end_66
    .catchall {:try_start_63 .. :try_end_66} :catchall_113

    monitor-exit v0

    .line 10993
    return-void

    .line 10954
    .end local v2    # "cmd":Ljava/lang/String;
    .restart local v6    # "opt":Ljava/lang/String;
    :cond_68
    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    move-result v1

    const/16 v3, 0x2d

    if-ne v1, v3, :cond_47

    .line 10957
    add-int/lit8 v4, v4, 0x1

    .line 10958
    const-string/jumbo v1, "-a"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7d

    .line 10959
    const/4 v5, 0x1

    goto :goto_3a

    .line 10960
    :cond_7d
    const-string/jumbo v1, "-h"

    invoke-virtual {v1, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_f3

    .line 10961
    const-string/jumbo v0, "Window manager dump options:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10962
    const-string/jumbo v0, "  [-a] [-h] [cmd] ..."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10963
    const-string/jumbo v0, "  cmd may be one of:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10964
    const-string/jumbo v0, "    l[astanr]: last ANR information"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10965
    const-string/jumbo v0, "    p[policy]: policy state"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10966
    const-string/jumbo v0, "    a[animator]: animator state"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10967
    const-string/jumbo v0, "    s[essions]: active sessions"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10968
    const-string/jumbo v0, "    surfaces: active surfaces (debugging enabled only)"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10969
    const-string/jumbo v0, "    d[isplays]: active display contents"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10970
    const-string/jumbo v0, "    t[okens]: token list"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10971
    const-string/jumbo v0, "    w[indows]: window list"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10972
    const-string/jumbo v0, "  cmd may also be a NAME to dump windows.  NAME may"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10973
    const-string/jumbo v0, "    be a partial substring in a window name, a"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10974
    const-string/jumbo v0, "    Window hex object identifier, or"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10975
    const-string/jumbo v0, "    \"all\" for all windows, or"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10976
    const-string/jumbo v0, "    \"visible\" for the visible windows."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10977
    const-string/jumbo v0, "    \"visible-apps\" for the visible app windows."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10978
    const-string/jumbo v0, "  -a: include all available server state."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10979
    return-void

    .line 10981
    :cond_f3
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Unknown argument: "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v3, "; use -h for help"

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3a

    .line 10990
    .end local v6    # "opt":Ljava/lang/String;
    .restart local v2    # "cmd":Ljava/lang/String;
    :catchall_113
    move-exception v1

    monitor-exit v0

    throw v1

    .line 10994
    :cond_116
    const-string/jumbo v0, "policy"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_128

    const-string/jumbo v0, "p"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_134

    .line 10995
    :cond_128
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 10996
    const/4 v1, 0x1

    :try_start_12c
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_12f
    .catchall {:try_start_12c .. :try_end_12f} :catchall_131

    monitor-exit v0

    .line 10998
    return-void

    .line 10995
    :catchall_131
    move-exception v1

    monitor-exit v0

    throw v1

    .line 10999
    :cond_134
    const-string/jumbo v0, "animator"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_146

    const-string/jumbo v0, "a"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_152

    .line 11000
    :cond_146
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11001
    const/4 v1, 0x1

    :try_start_14a
    invoke-virtual {p0, p2, p3, v1}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    :try_end_14d
    .catchall {:try_start_14a .. :try_end_14d} :catchall_14f

    monitor-exit v0

    .line 11003
    return-void

    .line 11000
    :catchall_14f
    move-exception v1

    monitor-exit v0

    throw v1

    .line 11004
    :cond_152
    const-string/jumbo v0, "sessions"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_164

    const-string/jumbo v0, "s"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_170

    .line 11005
    :cond_164
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11006
    const/4 v1, 0x1

    :try_start_168
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_16b
    .catchall {:try_start_168 .. :try_end_16b} :catchall_16d

    monitor-exit v0

    .line 11008
    return-void

    .line 11005
    :catchall_16d
    move-exception v1

    monitor-exit v0

    throw v1

    .line 11009
    :cond_170
    const-string/jumbo v0, "surfaces"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_185

    .line 11010
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11011
    const/4 v1, 0x0

    :try_start_17d
    invoke-static {p2, v1}, Lcom/android/server/wm/WindowSurfaceController$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V
    :try_end_180
    .catchall {:try_start_17d .. :try_end_180} :catchall_182

    monitor-exit v0

    .line 11013
    return-void

    .line 11010
    :catchall_182
    move-exception v1

    monitor-exit v0

    throw v1

    .line 11014
    :cond_185
    const-string/jumbo v0, "displays"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_197

    const-string/jumbo v0, "d"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a3

    .line 11015
    :cond_197
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11016
    const/4 v1, 0x1

    :try_start_19b
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    :try_end_19e
    .catchall {:try_start_19b .. :try_end_19e} :catchall_1a0

    monitor-exit v0

    .line 11018
    return-void

    .line 11015
    :catchall_1a0
    move-exception v1

    monitor-exit v0

    throw v1

    .line 11019
    :cond_1a3
    const-string/jumbo v0, "tokens"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1b5

    const-string/jumbo v0, "t"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1c1

    .line 11020
    :cond_1b5
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11021
    const/4 v1, 0x1

    :try_start_1b9
    invoke-virtual {p0, p2, v1}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    :try_end_1bc
    .catchall {:try_start_1b9 .. :try_end_1bc} :catchall_1be

    monitor-exit v0

    .line 11023
    return-void

    .line 11020
    :catchall_1be
    move-exception v1

    monitor-exit v0

    throw v1

    .line 11024
    :cond_1c1
    const-string/jumbo v0, "windows"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1d3

    const-string/jumbo v0, "w"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1e0

    .line 11025
    :cond_1d3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11026
    const/4 v1, 0x1

    const/4 v3, 0x0

    :try_start_1d8
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_1db
    .catchall {:try_start_1d8 .. :try_end_1db} :catchall_1dd

    monitor-exit v0

    .line 11028
    return-void

    .line 11025
    :catchall_1dd
    move-exception v1

    monitor-exit v0

    throw v1

    .line 11029
    :cond_1e0
    const-string/jumbo v0, "all"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1f2

    const-string/jumbo v0, "a"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1ff

    .line 11030
    :cond_1f2
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11031
    const/4 v1, 0x1

    const/4 v3, 0x0

    :try_start_1f7
    invoke-virtual {p0, p2, v1, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_1fa
    .catchall {:try_start_1f7 .. :try_end_1fa} :catchall_1fc

    monitor-exit v0

    .line 11033
    return-void

    .line 11030
    :catchall_1fc
    move-exception v1

    monitor-exit v0

    throw v1

    :cond_1ff
    move-object v0, p0

    move-object v1, p2

    move-object v3, p3

    .line 11036
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v0

    if-nez v0, :cond_225

    .line 11037
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v1, "Bad window command, or no windows match: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11038
    const-string/jumbo v0, "Use -h for help."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11040
    :cond_225
    return-void

    .line 11044
    .end local v2    # "cmd":Ljava/lang/String;
    :cond_226
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 11045
    :try_start_229
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11046
    if-eqz v5, :cond_234

    .line 11047
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11049
    :cond_234
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 11050
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11051
    if-eqz v5, :cond_242

    .line 11052
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11054
    :cond_242
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 11055
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11056
    if-eqz v5, :cond_250

    .line 11057
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11059
    :cond_250
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 11060
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11061
    if-eqz v5, :cond_25e

    .line 11062
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11064
    :cond_25e
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 11065
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11066
    if-eqz v5, :cond_26c

    .line 11067
    const-string/jumbo v3, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11069
    :cond_26c
    if-eqz v5, :cond_271

    .line 11070
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    .line 11069
    :cond_271
    invoke-static {p2, v0}, Lcom/android/server/wm/WindowSurfaceController$SurfaceTrace;->dumpAllSurfaces(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 11072
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11073
    if-eqz v5, :cond_27f

    .line 11074
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11076
    :cond_27f
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 11077
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11078
    if-eqz v5, :cond_28d

    .line 11079
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11081
    :cond_28d
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 11082
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 11083
    if-eqz v5, :cond_29b

    .line 11084
    const-string/jumbo v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 11086
    :cond_29b
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v5, v0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_29f
    .catchall {:try_start_229 .. :try_end_29f} :catchall_2a1

    monitor-exit v1

    .line 10940
    return-void

    .line 11044
    :catchall_2a1
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .prologue
    .line 10572
    const-string/jumbo v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10573
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const-string/jumbo v1, "    "

    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10571
    return-void
.end method

.method dumpAppTokensLocked()V
    .registers 14

    .prologue
    .line 4969
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 4970
    .local v0, "numStacks":I
    const/4 v4, 0x0

    .local v4, "stackNdx":I
    :goto_7
    if-ge v4, v0, :cond_a8

    .line 4971
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v10, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/TaskStack;

    .line 4972
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    const-string/jumbo v10, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "  Stack #"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string/jumbo v12, " tasks from bottom to top:"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4973
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v7

    .line 4974
    .local v7, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 4975
    .local v1, "numTasks":I
    const/4 v6, 0x0

    .local v6, "taskNdx":I
    :goto_3d
    if-ge v6, v1, :cond_a4

    .line 4976
    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/Task;

    .line 4977
    .local v5, "task":Lcom/android/server/wm/Task;
    const-string/jumbo v10, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "    Task #"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, v5, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string/jumbo v12, " activities from bottom to top:"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4978
    iget-object v9, v5, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 4979
    .local v9, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v9}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v2

    .line 4980
    .local v2, "numTokens":I
    const/4 v8, 0x0

    .local v8, "tokenNdx":I
    :goto_6f
    if-ge v8, v2, :cond_a1

    .line 4981
    const-string/jumbo v11, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "      activity #"

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string/jumbo v12, ": "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v9, v8}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/AppWindowToken;

    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v12, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v11, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4980
    add-int/lit8 v8, v8, 0x1

    goto :goto_6f

    .line 4975
    :cond_a1
    add-int/lit8 v6, v6, 0x1

    goto :goto_3d

    .line 4970
    .end local v2    # "numTokens":I
    .end local v5    # "task":Lcom/android/server/wm/Task;
    .end local v8    # "tokenNdx":I
    .end local v9    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_a4
    add-int/lit8 v4, v4, 0x1

    goto/16 :goto_7

    .line 4968
    .end local v1    # "numTasks":I
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v6    # "taskNdx":I
    .end local v7    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_a8
    return-void
.end method

.method dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    .registers 7
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    .line 10629
    const-string/jumbo v3, "WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10630
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v3, :cond_24

    .line 10631
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 10632
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_11
    if-ge v1, v2, :cond_2a

    .line 10633
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 10634
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v3, "  "

    invoke-virtual {v0, v3, p1}, Lcom/android/server/wm/DisplayContent;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 10632
    add-int/lit8 v1, v1, 0x1

    goto :goto_11

    .line 10637
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :cond_24
    const-string/jumbo v3, "  NO DISPLAY"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10628
    :cond_2a
    return-void
.end method

.method dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .registers 3
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .prologue
    .line 10896
    const-string/jumbo v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10897
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    if-nez v0, :cond_11

    .line 10898
    const-string/jumbo v0, "  <no ANR has occurred since boot>"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10895
    :goto_10
    return-void

    .line 10900
    :cond_11
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_10
.end method

.method dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .prologue
    .line 10567
    const-string/jumbo v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10568
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const-string/jumbo v1, "    "

    invoke-interface {v0, v1, p1, p2}, Landroid/view/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 10566
    return-void
.end method

.method dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    .line 10620
    const-string/jumbo v2, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10621
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_7
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    if-ge v0, v2, :cond_2e

    .line 10622
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Session;

    .line 10623
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string/jumbo v2, "  Session "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const/16 v2, 0x3a

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    .line 10624
    const-string/jumbo v2, "    "

    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10621
    add-int/lit8 v0, v0, 0x1

    goto :goto_7

    .line 10619
    .end local v1    # "s":Lcom/android/server/wm/Session;
    :cond_2e
    return-void
.end method

.method dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .registers 9
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    const/16 v5, 0x3a

    .line 10577
    const-string/jumbo v3, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10578
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_45

    .line 10579
    const-string/jumbo v3, "  All tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10580
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 10581
    .local v1, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    :goto_20
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_45

    .line 10582
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 10583
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10584
    if-eqz p2, :cond_41

    .line 10585
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(C)V

    .line 10586
    const-string/jumbo v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_20

    .line 10588
    :cond_41
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_20

    .line 10592
    .end local v1    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_45
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    const-string/jumbo v4, "  "

    invoke-virtual {v3, p1, v4, p2}, Lcom/android/server/wm/WallpaperController;->dumpTokens(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10593
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_93

    .line 10594
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10595
    const-string/jumbo v3, "  Finishing start of application tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10596
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_66
    if-ltz v0, :cond_93

    .line 10597
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 10598
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string/jumbo v3, "  Finished Starting #"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 10599
    const/16 v3, 0x20

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10600
    if-eqz p2, :cond_8f

    .line 10601
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(C)V

    .line 10602
    const-string/jumbo v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10596
    :goto_8c
    add-int/lit8 v0, v0, -0x1

    goto :goto_66

    .line 10604
    :cond_8f
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_8c

    .line 10608
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_93
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_a4

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_a4

    .line 10576
    :cond_a3
    :goto_a3
    return-void

    .line 10609
    :cond_a4
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10610
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-lez v3, :cond_ba

    .line 10611
    const-string/jumbo v3, "  mOpeningApps="

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10613
    :cond_ba
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-lez v3, :cond_a3

    .line 10614
    const-string/jumbo v3, "  mClosingApps="

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_a3
.end method

.method dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .registers 19
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .prologue
    .line 10836
    new-instance v10, Lcom/android/server/wm/WindowList;

    invoke-direct {v10}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 10837
    .local v10, "windows":Lcom/android/server/wm/WindowList;
    const-string/jumbo v11, "apps"

    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-nez v11, :cond_20

    const-string/jumbo v11, "visible"

    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-nez v11, :cond_20

    const-string/jumbo v11, "visible-apps"

    invoke-virtual {v11, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_7f

    .line 10838
    :cond_20
    const-string/jumbo v11, "apps"

    invoke-virtual {p2, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v1

    .line 10839
    .local v1, "appsOnly":Z
    const-string/jumbo v11, "visible"

    invoke-virtual {p2, v11}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v6

    .line 10840
    .local v6, "visibleOnly":Z
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v12

    .line 10841
    if-eqz v1, :cond_37

    .line 10842
    const/4 v11, 0x1

    :try_start_34
    invoke-virtual {p0, p1, v11}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 10845
    :cond_37
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    move-result v4

    .line 10846
    .local v4, "numDisplays":I
    const/4 v2, 0x0

    .local v2, "displayNdx":I
    :goto_3e
    if-ge v2, v4, :cond_73

    .line 10848
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v11, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v9

    .line 10849
    .local v9, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    add-int/lit8 v8, v11, -0x1

    .local v8, "winNdx":I
    :goto_52
    if-ltz v8, :cond_70

    .line 10850
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 10851
    .local v7, "w":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_64

    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v11}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    move-result v11

    if-eqz v11, :cond_6d

    .line 10852
    :cond_64
    if-eqz v1, :cond_6a

    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v11, :cond_6d

    .line 10853
    :cond_6a
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_6d
    .catchall {:try_start_34 .. :try_end_6d} :catchall_7c

    .line 10849
    :cond_6d
    add-int/lit8 v8, v8, -0x1

    goto :goto_52

    .line 10846
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    :cond_70
    add-int/lit8 v2, v2, 0x1

    goto :goto_3e

    .end local v1    # "appsOnly":Z
    .end local v6    # "visibleOnly":Z
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    .end local p2    # "name":Ljava/lang/String;
    :cond_73
    monitor-exit v12

    .line 10885
    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    if-gtz v11, :cond_d7

    .line 10886
    const/4 v11, 0x0

    return v11

    .line 10840
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .restart local v1    # "appsOnly":Z
    .restart local v6    # "visibleOnly":Z
    .restart local p2    # "name":Ljava/lang/String;
    :catchall_7c
    move-exception v11

    monitor-exit v12

    throw v11

    .line 10859
    .end local v1    # "appsOnly":Z
    .end local v6    # "visibleOnly":Z
    :cond_7f
    const/4 v5, 0x0

    .line 10862
    .local v5, "objectId":I
    const/16 v11, 0x10

    :try_start_82
    invoke-static {p2, v11}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I
    :try_end_85
    .catch Ljava/lang/RuntimeException; {:try_start_82 .. :try_end_85} :catch_c5

    move-result v5

    .line 10863
    const/4 p2, 0x0

    .line 10866
    .end local p2    # "name":Ljava/lang/String;
    :goto_87
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v12

    .line 10867
    :try_start_8a
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v11}, Landroid/util/SparseArray;->size()I

    move-result v4

    .line 10868
    .restart local v4    # "numDisplays":I
    const/4 v2, 0x0

    .restart local v2    # "displayNdx":I
    :goto_91
    if-ge v2, v4, :cond_73

    .line 10870
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v11, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v9

    .line 10871
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v11

    add-int/lit8 v8, v11, -0x1

    .restart local v8    # "winNdx":I
    :goto_a5
    if-ltz v8, :cond_d4

    .line 10872
    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 10873
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p2, :cond_c7

    .line 10874
    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v11}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v11

    invoke-interface {v11}, Ljava/lang/CharSequence;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v11, p2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v11

    if-eqz v11, :cond_c2

    .line 10875
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 10871
    :cond_c2
    :goto_c2
    add-int/lit8 v8, v8, -0x1

    goto :goto_a5

    .line 10864
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    .restart local p2    # "name":Ljava/lang/String;
    :catch_c5
    move-exception v3

    .local v3, "e":Ljava/lang/RuntimeException;
    goto :goto_87

    .line 10877
    .end local v3    # "e":Ljava/lang/RuntimeException;
    .end local p2    # "name":Ljava/lang/String;
    .restart local v2    # "displayNdx":I
    .restart local v4    # "numDisplays":I
    .restart local v7    # "w":Lcom/android/server/wm/WindowState;
    .restart local v8    # "winNdx":I
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_c7
    invoke-static {v7}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v11

    if-ne v11, v5, :cond_c2

    .line 10878
    invoke-virtual {v10, v7}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z
    :try_end_d0
    .catchall {:try_start_8a .. :try_end_d0} :catchall_d1

    goto :goto_c2

    .line 10866
    .end local v2    # "displayNdx":I
    .end local v4    # "numDisplays":I
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :catchall_d1
    move-exception v11

    monitor-exit v12

    throw v11

    .line 10868
    .restart local v2    # "displayNdx":I
    .restart local v4    # "numDisplays":I
    .restart local v8    # "winNdx":I
    .restart local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_d4
    add-int/lit8 v2, v2, 0x1

    goto :goto_91

    .line 10889
    .end local v5    # "objectId":I
    .end local v8    # "winNdx":I
    .end local v9    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_d7
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v11

    .line 10890
    :try_start_da
    move/from16 v0, p5

    invoke-virtual {p0, p1, v0, v10}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    :try_end_df
    .catchall {:try_start_da .. :try_end_df} :catchall_e2

    monitor-exit v11

    .line 10892
    const/4 v11, 0x1

    return v11

    .line 10889
    :catchall_e2
    move-exception v12

    monitor-exit v11

    throw v12
.end method

.method dumpWindowsLocked()V
    .registers 9

    .prologue
    .line 4988
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 4989
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v2, :cond_6a

    .line 4990
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 4991
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string/jumbo v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, " Display #"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4992
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 4993
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v3, v5, -0x1

    .local v3, "winNdx":I
    :goto_39
    if-ltz v3, :cond_67

    .line 4994
    const-string/jumbo v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "  #"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 4993
    add-int/lit8 v3, v3, -0x1

    goto :goto_39

    .line 4989
    :cond_67
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 4987
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_6a
    return-void
.end method

.method dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 5
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 10643
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string/jumbo v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10644
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 10642
    return-void
.end method

.method dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 14
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 10649
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 10650
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v3, :cond_55

    .line 10651
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 10652
    .local v7, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    add-int/lit8 v6, v8, -0x1

    .local v6, "winNdx":I
    :goto_1b
    if-ltz v6, :cond_52

    .line 10653
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 10654
    .local v4, "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_2b

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_4d

    .line 10655
    :cond_2b
    const-string/jumbo v8, "  Window #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 10656
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const-string/jumbo v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10657
    const-string/jumbo v9, "    "

    if-nez p2, :cond_49

    if-eqz p3, :cond_50

    :cond_49
    const/4 v8, 0x1

    :goto_4a
    invoke-virtual {v4, p1, v9, v8}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10652
    :cond_4d
    add-int/lit8 v6, v6, -0x1

    goto :goto_1b

    .line 10657
    :cond_50
    const/4 v8, 0x0

    goto :goto_4a

    .line 10650
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_52
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 10661
    .end local v6    # "winNdx":I
    .end local v7    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_55
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_95

    .line 10662
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10663
    const-string/jumbo v8, "  Input method dialogs:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10664
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .local v2, "i":I
    :goto_6e
    if-ltz v2, :cond_95

    .line 10665
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 10666
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_80

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_92

    .line 10667
    :cond_80
    const-string/jumbo v8, "  IM Dialog #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string/jumbo v8, ": "

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10664
    :cond_92
    add-int/lit8 v2, v2, -0x1

    goto :goto_6e

    .line 10671
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_95
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_e7

    .line 10672
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10673
    const-string/jumbo v8, "  Remove pending for:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10674
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_ae
    if-ltz v2, :cond_e7

    .line 10675
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 10676
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_c0

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_e0

    .line 10677
    :cond_c0
    const-string/jumbo v8, "  Remove #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 10678
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10679
    if-eqz p2, :cond_e3

    .line 10680
    const-string/jumbo v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10681
    const-string/jumbo v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10674
    :cond_e0
    :goto_e0
    add-int/lit8 v2, v2, -0x1

    goto :goto_ae

    .line 10683
    :cond_e3
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_e0

    .line 10688
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_e7
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    if-eqz v8, :cond_135

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_135

    .line 10689
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10690
    const-string/jumbo v8, "  Windows force removing:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10691
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_104
    if-ltz v2, :cond_135

    .line 10692
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 10693
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Removing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 10694
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10695
    if-eqz p2, :cond_131

    .line 10696
    const-string/jumbo v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10697
    const-string/jumbo v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10691
    :goto_12e
    add-int/lit8 v2, v2, -0x1

    goto :goto_104

    .line 10699
    :cond_131
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_12e

    .line 10703
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_135
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_187

    .line 10704
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10705
    const-string/jumbo v8, "  Windows waiting to destroy their surface:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10706
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_14e
    if-ltz v2, :cond_187

    .line 10707
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 10708
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_160

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_180

    .line 10709
    :cond_160
    const-string/jumbo v8, "  Destroy #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 10710
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10711
    if-eqz p2, :cond_183

    .line 10712
    const-string/jumbo v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10713
    const-string/jumbo v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10706
    :cond_180
    :goto_180
    add-int/lit8 v2, v2, -0x1

    goto :goto_14e

    .line 10715
    :cond_183
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_180

    .line 10720
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_187
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_1d9

    .line 10721
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10722
    const-string/jumbo v8, "  Windows losing focus:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10723
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_1a0
    if-ltz v2, :cond_1d9

    .line 10724
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 10725
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_1b2

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1d2

    .line 10726
    :cond_1b2
    const-string/jumbo v8, "  Losing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 10727
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10728
    if-eqz p2, :cond_1d5

    .line 10729
    const-string/jumbo v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10730
    const-string/jumbo v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10723
    :cond_1d2
    :goto_1d2
    add-int/lit8 v2, v2, -0x1

    goto :goto_1a0

    .line 10732
    :cond_1d5
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_1d2

    .line 10737
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_1d9
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_22b

    .line 10738
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10739
    const-string/jumbo v8, "  Windows waiting to resize:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10740
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_1f2
    if-ltz v2, :cond_22b

    .line 10741
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 10742
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_204

    invoke-virtual {p3, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_224

    .line 10743
    :cond_204
    const-string/jumbo v8, "  Resizing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    .line 10744
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10745
    if-eqz p2, :cond_227

    .line 10746
    const-string/jumbo v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10747
    const-string/jumbo v8, "    "

    const/4 v9, 0x1

    invoke-virtual {v4, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 10740
    :cond_224
    :goto_224
    add-int/lit8 v2, v2, -0x1

    goto :goto_1f2

    .line 10749
    :cond_227
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_224

    .line 10754
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    :cond_22b
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_262

    .line 10755
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10756
    const-string/jumbo v8, "  Clients waiting for these windows to be drawn:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10757
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_244
    if-ltz v2, :cond_262

    .line 10758
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 10759
    .local v5, "win":Lcom/android/server/wm/WindowState;
    const-string/jumbo v8, "  Waiting #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const/16 v8, 0x20

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10757
    add-int/lit8 v2, v2, -0x1

    goto :goto_244

    .line 10762
    .end local v2    # "i":I
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_262
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10763
    const-string/jumbo v8, "  mCurConfiguration="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10764
    const-string/jumbo v8, "  mHasPermanentDpad="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mHasPermanentDpad:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 10765
    const-string/jumbo v8, "  mCurrentFocus="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10766
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eq v8, v9, :cond_297

    .line 10767
    const-string/jumbo v8, "  mLastFocus="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10769
    :cond_297
    const-string/jumbo v8, "  mFocusedApp="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10770
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_2b1

    .line 10771
    const-string/jumbo v8, "  mInputMethodTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10773
    :cond_2b1
    const-string/jumbo v8, "  mInTouchMode="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 10774
    const-string/jumbo v8, " mLayoutSeq="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 10775
    const-string/jumbo v8, "  mLastDisplayFreezeDuration="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10776
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v8, v8

    invoke-static {v8, v9, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 10777
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v8, :cond_2e2

    .line 10778
    const-string/jumbo v8, " due to "

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10779
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10781
    :cond_2e2
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10782
    const-string/jumbo v8, "  mLastWakeLockHoldingWindow="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10783
    const-string/jumbo v8, " mLastWakeLockObscuringWindow="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 10784
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10786
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const-string/jumbo v9, "  "

    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/InputMonitor;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10788
    if-eqz p2, :cond_458

    .line 10789
    const-string/jumbo v8, "  mSystemDecorLayer="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 10790
    const-string/jumbo v8, " mScreenRect="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    invoke-virtual {v8}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10791
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    if-eqz v8, :cond_335

    .line 10792
    const-string/jumbo v8, "  mLastStatusBarVisibility=0x"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10793
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    invoke-static {v8}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10795
    :cond_335
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_344

    .line 10796
    const-string/jumbo v8, "  mInputMethodWindow="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 10798
    :cond_344
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    const-string/jumbo v9, "  "

    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WindowSurfacePlacer;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10799
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    const-string/jumbo v9, "  "

    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WallpaperController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10800
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    const-string/jumbo v9, "  "

    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/WindowLayersController;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10801
    const-string/jumbo v8, "  mSystemBooted="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 10802
    const-string/jumbo v8, " mDisplayEnabled="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 10803
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    move-result v8

    if-eqz v8, :cond_39a

    .line 10804
    const-string/jumbo v8, "  layoutNeeded on displays="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 10805
    const/4 v1, 0x0

    :goto_37f
    if-ge v1, v3, :cond_397

    .line 10806
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 10807
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v8, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-eqz v8, :cond_394

    .line 10808
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 10805
    :cond_394
    add-int/lit8 v1, v1, 0x1

    goto :goto_37f

    .line 10811
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_397
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 10813
    :cond_39a
    const-string/jumbo v8, "  mTransactionSequence="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 10814
    const-string/jumbo v8, "  mDisplayFrozen="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 10815
    const-string/jumbo v8, " windows="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 10816
    const-string/jumbo v8, " client="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 10817
    const-string/jumbo v8, " apps="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 10818
    const-string/jumbo v8, " waitingForConfig="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 10819
    const-string/jumbo v8, "  mRotation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 10820
    const-string/jumbo v8, " mAltOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 10821
    const-string/jumbo v8, "  mLastWindowForcedOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 10822
    const-string/jumbo v8, " mLastOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 10823
    const-string/jumbo v8, "  mDeferredRotationPauseCount="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 10824
    const-string/jumbo v8, "  Animation settings: disabled="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 10825
    const-string/jumbo v8, " window="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 10826
    const-string/jumbo v8, " transition="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 10827
    const-string/jumbo v8, " animator="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    .line 10828
    const-string/jumbo v8, " mSkipAppTransitionAnimation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 10829
    const-string/jumbo v8, "  mLayoutToAnim:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10830
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    const-string/jumbo v9, "    "

    invoke-virtual {v8, p1, v9}, Lcom/android/server/wm/AppTransition;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 10648
    :cond_458
    return-void
.end method

.method public enableScreenAfterBoot()V
    .registers 6

    .prologue
    .line 5940
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5949
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_5
    .catchall {:try_start_3 .. :try_end_5} :catchall_22

    if-eqz v0, :cond_9

    monitor-exit v1

    .line 5950
    return-void

    .line 5952
    :cond_9
    const/4 v0, 0x1

    :try_start_a
    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 5953
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hideBootMessagesLocked()V

    .line 5956
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v2, 0x7530

    const/16 v4, 0x17

    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_18
    .catchall {:try_start_a .. :try_end_18} :catchall_22

    monitor-exit v1

    .line 5959
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemBooted()V

    .line 5961
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 5939
    return-void

    .line 5940
    :catchall_22
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public enableScreenIfNeeded()V
    .registers 3

    .prologue
    .line 5966
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 5967
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_8

    monitor-exit v0

    .line 5965
    return-void

    .line 5966
    :catchall_8
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method enableScreenIfNeededLocked()V
    .registers 3

    .prologue
    .line 5980
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_5

    .line 5981
    return-void

    .line 5983
    :cond_5
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v0, :cond_d

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-eqz v0, :cond_15

    .line 5986
    :cond_d
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x10

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 5971
    return-void

    .line 5984
    :cond_15
    return-void
.end method

.method public endProlongedAnimations()V
    .registers 6

    .prologue
    .line 4177
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 4178
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "win$iterator":Ljava/util/Iterator;
    :cond_d
    :goto_d
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_2a

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 4179
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v0, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 4180
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_d

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    if-eqz v3, :cond_d

    .line 4181
    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowAnimator;->endProlongedAnimation()V
    :try_end_26
    .catchall {:try_start_3 .. :try_end_26} :catchall_27

    goto :goto_d

    .line 4177
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "win$iterator":Ljava/util/Iterator;
    :catchall_27
    move-exception v3

    monitor-exit v4

    throw v3

    .line 4184
    .restart local v2    # "win$iterator":Ljava/util/Iterator;
    :cond_2a
    :try_start_2a
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->notifyProlongedAnimationsEnded()V
    :try_end_2f
    .catchall {:try_start_2a .. :try_end_2f} :catchall_27

    monitor-exit v4

    .line 4176
    return-void
.end method

.method public executeAppTransition()V
    .registers 5

    .prologue
    .line 4190
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    .line 4191
    const-string/jumbo v3, "executeAppTransition()"

    .line 4190
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 4192
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 4195
    :cond_15
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 4198
    :try_start_18
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v2

    if-eqz v2, :cond_31

    .line 4199
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->setReady()V

    .line 4200
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_28
    .catchall {:try_start_18 .. :try_end_28} :catchall_38

    move-result-wide v0

    .line 4202
    .local v0, "origId":J
    :try_start_29
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_2e
    .catchall {:try_start_29 .. :try_end_2e} :catchall_33

    .line 4204
    :try_start_2e
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_31
    .catchall {:try_start_2e .. :try_end_31} :catchall_38

    .end local v0    # "origId":J
    :cond_31
    monitor-exit v3

    .line 4189
    return-void

    .line 4203
    .restart local v0    # "origId":J
    :catchall_33
    move-exception v2

    .line 4204
    :try_start_34
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4203
    throw v2
    :try_end_38
    .catchall {:try_start_34 .. :try_end_38} :catchall_38

    .line 4195
    .end local v0    # "origId":J
    :catchall_38
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .registers 4
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    .prologue
    .line 5588
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 5590
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5593
    :cond_14
    if-nez p1, :cond_1f

    .line 5594
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "callback == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5597
    :cond_1f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$7;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->exitKeyguardSecurely(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    .line 5587
    return-void
.end method

.method findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v2, 0x0

    .line 3428
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 3429
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-nez v0, :cond_c

    .line 3430
    return-object v2

    .line 3432
    :cond_c
    iget-object v1, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    return-object v1
.end method

.method findDesiredInputMethodWindowIndexLocked(Z)I
    .registers 17
    .param p1, "willMove"    # Z

    .prologue
    .line 1501
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v12

    .line 1502
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    const/4 v9, 0x0

    .line 1504
    .local v9, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    move-result v13

    add-int/lit8 v6, v13, -0x1

    .local v6, "i":I
    :goto_b
    if-ltz v6, :cond_3c

    .line 1505
    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/WindowState;

    .line 1509
    .local v11, "win":Lcom/android/server/wm/WindowState;
    invoke-static {v11}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v13

    if-eqz v13, :cond_5f

    .line 1510
    move-object v9, v11

    .line 1518
    .local v9, "w":Lcom/android/server/wm/WindowState;
    if-nez p1, :cond_3c

    .line 1519
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v13, v13, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v14, 0x3

    if-ne v13, v14, :cond_3c

    .line 1520
    if-lez v6, :cond_3c

    .line 1521
    add-int/lit8 v13, v6, -0x1

    invoke-virtual {v12, v13}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/WindowState;

    .line 1522
    .local v10, "wb":Lcom/android/server/wm/WindowState;
    iget-object v13, v10, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v14, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v13, v14, :cond_3c

    invoke-static {v10}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v13

    if-eqz v13, :cond_3c

    .line 1523
    add-int/lit8 v6, v6, -0x1

    .line 1524
    move-object v9, v10

    .line 1541
    .end local v9    # "w":Lcom/android/server/wm/WindowState;
    .end local v10    # "wb":Lcom/android/server/wm/WindowState;
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_3c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1542
    .local v0, "curTarget":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_62

    .line 1543
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v13

    .line 1542
    if-eqz v13, :cond_62

    .line 1544
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isClosing()Z

    move-result v13

    .line 1542
    if-eqz v13, :cond_62

    .line 1545
    if-eqz v9, :cond_58

    iget-object v13, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-le v13, v14, :cond_62

    .line 1547
    :cond_58
    invoke-virtual {v12, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v13

    add-int/lit8 v13, v13, 0x1

    return v13

    .line 1504
    .end local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    .local v9, "w":Lcom/android/server/wm/WindowState;
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_5f
    add-int/lit8 v6, v6, -0x1

    goto :goto_b

    .line 1553
    .end local v9    # "w":Lcom/android/server/wm/WindowState;
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    .restart local v0    # "curTarget":Lcom/android/server/wm/WindowState;
    :cond_62
    if-eqz p1, :cond_d1

    if-eqz v9, :cond_d1

    .line 1554
    if-nez v0, :cond_9f

    const/4 v8, 0x0

    .line 1555
    .local v8, "token":Lcom/android/server/wm/AppWindowToken;
    :goto_69
    if-eqz v8, :cond_d1

    .line 1561
    const/4 v5, 0x0

    .line 1562
    .local v5, "highestTarget":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    .line 1563
    .local v4, "highestPos":I
    iget-object v13, v8, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v13, v13, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    if-nez v13, :cond_79

    iget-object v13, v8, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v13, v13, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v13, :cond_8d

    .line 1564
    :cond_79
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 1565
    .local v1, "curWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v7

    .line 1566
    .end local v5    # "highestTarget":Lcom/android/server/wm/WindowState;
    .local v7, "pos":I
    :goto_81
    if-ltz v7, :cond_8d

    .line 1567
    invoke-virtual {v1, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/WindowState;

    .line 1568
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eq v13, v8, :cond_a2

    .line 1582
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v7    # "pos":I
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_8d
    if-eqz v5, :cond_d1

    .line 1588
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v13}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v13

    if-eqz v13, :cond_b7

    .line 1591
    const/4 v13, 0x1

    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    .line 1592
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1593
    add-int/lit8 v13, v4, 0x1

    return v13

    .line 1554
    .end local v4    # "highestPos":I
    .end local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_9f
    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    goto :goto_69

    .line 1571
    .restart local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .restart local v4    # "highestPos":I
    .restart local v7    # "pos":I
    .restart local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_a2
    iget-boolean v13, v11, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-nez v13, :cond_b4

    .line 1572
    if-eqz v5, :cond_b2

    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 1573
    iget-object v14, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 1572
    if-le v13, v14, :cond_b4

    .line 1574
    :cond_b2
    move-object v5, v11

    .line 1575
    .local v5, "highestTarget":Lcom/android/server/wm/WindowState;
    move v4, v7

    .line 1578
    .end local v5    # "highestTarget":Lcom/android/server/wm/WindowState;
    :cond_b4
    add-int/lit8 v7, v7, -0x1

    goto :goto_81

    .line 1594
    .end local v1    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v7    # "pos":I
    .end local v11    # "win":Lcom/android/server/wm/WindowState;
    :cond_b7
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v13}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    move-result v13

    if-eqz v13, :cond_d1

    .line 1595
    iget-object v13, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v13, v13, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v14, v14, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-le v13, v14, :cond_d1

    .line 1600
    const/4 v13, 0x1

    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    .line 1601
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1602
    add-int/lit8 v13, v4, 0x1

    return v13

    .line 1609
    .end local v4    # "highestPos":I
    .end local v8    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_d1
    if-eqz v9, :cond_10e

    .line 1610
    if-eqz p1, :cond_e9

    .line 1613
    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1614
    const/4 v13, 0x0

    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    .line 1615
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v13, :cond_104

    .line 1616
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    .line 1617
    iget-object v14, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v14, v14, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget v14, v14, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    .line 1616
    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    .line 1627
    :cond_e9
    :goto_e9
    iget-object v13, v9, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    iget-object v13, v13, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    invoke-virtual {v13}, Lcom/android/server/wm/DockedStackDividerController;->getWindow()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 1628
    .local v3, "dockedDivider":Lcom/android/server/wm/WindowState;
    if-eqz v3, :cond_10b

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v13

    if-eqz v13, :cond_10b

    .line 1629
    invoke-virtual {v12, v3}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v2

    .line 1630
    .local v2, "dividerIndex":I
    if-lez v2, :cond_10b

    if-le v2, v6, :cond_10b

    .line 1631
    add-int/lit8 v13, v2, 0x1

    return v13

    .line 1619
    .end local v2    # "dividerIndex":I
    .end local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_104
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    const/4 v14, 0x0

    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    goto :goto_e9

    .line 1634
    .restart local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_10b
    add-int/lit8 v13, v6, 0x1

    return v13

    .line 1636
    .end local v3    # "dockedDivider":Lcom/android/server/wm/WindowState;
    :cond_10e
    if-eqz p1, :cond_119

    .line 1639
    const/4 v13, 0x0

    iput-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1640
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    const/4 v14, 0x0

    invoke-virtual {v13, v14}, Lcom/android/server/wm/WindowLayersController;->setInputMethodAnimLayerAdjustment(I)V

    .line 1642
    :cond_119
    const/4 v13, -0x1

    return v13
.end method

.method findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;
    .registers 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v11, 0x0

    .line 10030
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 10031
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    add-int/lit8 v0, v9, -0x1

    .local v0, "i":I
    :goto_b
    if-ltz v0, :cond_6d

    .line 10032
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 10040
    .local v6, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v9

    if-nez v9, :cond_1c

    .line 10031
    :cond_19
    add-int/lit8 v0, v0, -0x1

    goto :goto_b

    .line 10044
    :cond_1c
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 10047
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_28

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-nez v9, :cond_19

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    if-nez v9, :cond_19

    .line 10055
    :cond_28
    if-eqz v8, :cond_5b

    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v10, 0x3

    if-eq v9, v10, :cond_5b

    .line 10056
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_5b

    .line 10057
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v2

    .line 10058
    .local v2, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v1, v9, -0x1

    .local v1, "taskNdx":I
    :goto_3f
    if-ltz v1, :cond_5b

    .line 10059
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v5, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 10060
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v9

    add-int/lit8 v4, v9, -0x1

    .line 10061
    .local v4, "tokenNdx":I
    :goto_4f
    if-ltz v4, :cond_59

    .line 10062
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 10063
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    if-ne v8, v3, :cond_5c

    .line 10074
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_59
    if-ltz v4, :cond_6a

    .line 10083
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5b
    return-object v6

    .line 10066
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5c
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-ne v9, v3, :cond_67

    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->windowsAreFocusable()Z

    move-result v9

    if-eqz v9, :cond_67

    .line 10071
    return-object v11

    .line 10061
    :cond_67
    add-int/lit8 v4, v4, -0x1

    goto :goto_4f

    .line 10058
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_6a
    add-int/lit8 v1, v1, -0x1

    goto :goto_3f

    .line 10087
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_6d
    return-object v11
.end method

.method public finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 3254
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3256
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_39

    .line 3257
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 3260
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_31

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->finishDrawingLocked()Z

    move-result v3

    if-eqz v3, :cond_31

    .line 3261
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v5, 0x100000

    and-int/2addr v3, v5

    if-eqz v3, :cond_29

    .line 3262
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 3265
    :cond_29
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 3266
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_31
    .catchall {:try_start_8 .. :try_end_31} :catchall_36

    :cond_31
    :try_start_31
    monitor-exit v4
    :try_end_32
    .catchall {:try_start_31 .. :try_end_32} :catchall_39

    .line 3270
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3253
    return-void

    .line 3256
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_36
    move-exception v3

    :try_start_37
    monitor-exit v4

    throw v3
    :try_end_39
    .catchall {:try_start_37 .. :try_end_39} :catchall_39

    .line 3269
    :catchall_39
    move-exception v3

    .line 3270
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3269
    throw v3
.end method

.method public freezeOrThawRotation(I)V
    .registers 6
    .param p1, "rotation"    # I

    .prologue
    const/4 v3, 0x0

    .line 11848
    const-string/jumbo v0, "android.permission.SET_ORIENTATION"

    .line 11849
    const-string/jumbo v1, "freezeRotation()"

    .line 11848
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_16

    .line 11850
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires SET_ORIENTATION permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11852
    :cond_16
    const/4 v0, -0x1

    if-lt p1, v0, :cond_1c

    const/4 v0, 0x3

    if-le p1, v0, :cond_25

    .line 11853
    :cond_1c
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "Rotation argument must be -1 or a valid rotation constant."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11857
    :cond_25
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "freezeRotationTemporarily: mRotation="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11859
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->freezeOrThawRotation(I)V

    .line 11860
    invoke-virtual {p0, v3, v3}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 11847
    return-void
.end method

.method public freezeRotation(I)V
    .registers 8
    .param p1, "rotation"    # I

    .prologue
    const/4 v5, 0x0

    const/4 v4, -0x1

    .line 6726
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    .line 6727
    const-string/jumbo v3, "freezeRotation()"

    .line 6726
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_17

    .line 6728
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6730
    :cond_17
    if-lt p1, v4, :cond_1c

    const/4 v2, 0x3

    if-le p1, v2, :cond_25

    .line 6731
    :cond_1c
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v3, "Rotation argument must be -1 or a valid rotation constant."

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6737
    :cond_25
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6739
    .local v0, "origId":J
    :try_start_29
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    .line 6740
    if-ne p1, v4, :cond_2f

    iget p1, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    .line 6739
    .end local p1    # "rotation":I
    :cond_2f
    const/4 v3, 0x1

    invoke-interface {v2, v3, p1}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_33
    .catchall {:try_start_29 .. :try_end_33} :catchall_3a

    .line 6742
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6745
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 6725
    return-void

    .line 6741
    :catchall_3a
    move-exception v2

    .line 6742
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6741
    throw v2
.end method

.method public getAnimationScale(I)F
    .registers 3
    .param p1, "which"    # I

    .prologue
    .line 5761
    packed-switch p1, :pswitch_data_e

    .line 5766
    const/4 v0, 0x0

    return v0

    .line 5762
    :pswitch_5
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    return v0

    .line 5763
    :pswitch_8
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    return v0

    .line 5764
    :pswitch_b
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    return v0

    .line 5761
    :pswitch_data_e
    .packed-switch 0x0
        :pswitch_5
        :pswitch_8
        :pswitch_b
    .end packed-switch
.end method

.method public getAnimationScales()[F
    .registers 4

    .prologue
    .line 5771
    const/4 v0, 0x3

    new-array v0, v0, [F

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    const/4 v2, 0x0

    aput v1, v0, v2

    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    const/4 v2, 0x1

    aput v1, v0, v2

    .line 5772
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    const/4 v2, 0x2

    aput v1, v0, v2

    .line 5771
    return-object v0
.end method

.method public getAppOrientation(Landroid/view/IApplicationToken;)I
    .registers 5
    .param p1, "token"    # Landroid/view/IApplicationToken;

    .prologue
    .line 3987
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3988
    :try_start_3
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_14

    move-result-object v0

    .line 3989
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_10

    .line 3990
    const/4 v1, -0x1

    monitor-exit v2

    return v1

    .line 3993
    :cond_10
    :try_start_10
    iget v1, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_12
    .catchall {:try_start_10 .. :try_end_12} :catchall_14

    monitor-exit v2

    return v1

    .line 3987
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_14
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getBaseDisplayDensity(I)I
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 9269
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9270
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9271
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_17

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_17

    .line 9272
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_1a

    monitor-exit v2

    return v1

    :cond_17
    monitor-exit v2

    .line 9275
    const/4 v1, -0x1

    return v1

    .line 9269
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1a
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .registers 6
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .prologue
    .line 9102
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9103
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9104
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1b

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_1b

    .line 9105
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iput v1, p2, Landroid/graphics/Point;->x:I

    .line 9106
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_1b
    .catchall {:try_start_3 .. :try_end_1b} :catchall_1d

    :cond_1b
    monitor-exit v2

    .line 9101
    return-void

    .line 9102
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1d
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getBoundsForNewConfiguration(I)Landroid/graphics/Rect;
    .registers 6
    .param p1, "stackId"    # I

    .prologue
    .line 3917
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 3918
    :try_start_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 3919
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    .line 3920
    .local v0, "outBounds":Landroid/graphics/Rect;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/TaskStack;->getBoundsForNewConfiguration(Landroid/graphics/Rect;)V
    :try_end_13
    .catchall {:try_start_3 .. :try_end_13} :catchall_15

    monitor-exit v3

    .line 3921
    return-object v0

    .line 3917
    .end local v0    # "outBounds":Landroid/graphics/Rect;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_15
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public getCameraLensCoverState()I
    .registers 7

    .prologue
    const/4 v5, -0x1

    const/4 v4, 0x0

    .line 5827
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v2, -0x100

    .line 5828
    const/16 v3, 0x9

    .line 5827
    invoke-virtual {v1, v5, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 5829
    .local v0, "sw":I
    if-lez v0, :cond_10

    .line 5831
    const/4 v1, 0x1

    return v1

    .line 5832
    :cond_10
    if-nez v0, :cond_13

    .line 5834
    return v4

    .line 5837
    :cond_13
    return v5
.end method

.method public getCurrentAnimatorScale()F
    .registers 3

    .prologue
    .line 5777
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5778
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z
    :try_end_5
    .catchall {:try_start_3 .. :try_end_5} :catchall_d

    if-eqz v0, :cond_a

    const/4 v0, 0x0

    :goto_8
    monitor-exit v1

    return v0

    :cond_a
    :try_start_a
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F
    :try_end_c
    .catchall {:try_start_a .. :try_end_c} :catchall_d

    goto :goto_8

    .line 5777
    :catchall_d
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .registers 2

    .prologue
    .line 11148
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;
    .registers 2

    .prologue
    .line 11156
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;
    .registers 2

    .prologue
    .line 11152
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    return-object v0
.end method

.method public getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 11136
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/DisplayContent;

    .line 11137
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_16

    .line 11138
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v2, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 11139
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_16

    .line 11140
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 11143
    .end local v0    # "display":Landroid/view/Display;
    :cond_16
    return-object v1
.end method

.method public getDockedDividerInsetsLw()I
    .registers 2

    .prologue
    .line 10563
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DockedStackDividerController;->getContentInsets()I

    move-result v0

    return v0
.end method

.method public getDockedStackSide()I
    .registers 4

    .prologue
    .line 11318
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11319
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDockedStackVisibleForUserLocked()Lcom/android/server/wm/TaskStack;
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_15

    move-result-object v0

    .line 11321
    .local v0, "dockedStack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_10

    const/4 v1, -0x1

    :goto_e
    monitor-exit v2

    return v1

    :cond_10
    :try_start_10
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDockSide()I
    :try_end_13
    .catchall {:try_start_10 .. :try_end_13} :catchall_15

    move-result v1

    goto :goto_e

    .line 11318
    .end local v0    # "dockedStack":Lcom/android/server/wm/TaskStack;
    :catchall_15
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method getDragLayerLocked()I
    .registers 3

    .prologue
    .line 572
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const/16 v1, 0x7e0

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v0

    mul-int/lit16 v0, v0, 0x2710

    add-int/lit16 v0, v0, 0x3e8

    return v0
.end method

.method getImeFocusStackLocked()Lcom/android/server/wm/TaskStack;
    .registers 3

    .prologue
    const/4 v0, 0x0

    .line 8118
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v1, :cond_11

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v1, v1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    if-eqz v1, :cond_11

    .line 8119
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 8118
    :cond_11
    return-object v0
.end method

.method public getInitialDisplayDensity(I)I
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 9258
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9259
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9260
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_17

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_17

    .line 9261
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_1a

    monitor-exit v2

    return v1

    :cond_17
    monitor-exit v2

    .line 9264
    const/4 v1, -0x1

    return v1

    .line 9258
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1a
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .registers 6
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .prologue
    .line 9091
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9092
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9093
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1b

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_1b

    .line 9094
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iput v1, p2, Landroid/graphics/Point;->x:I

    .line 9095
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    iput v1, p2, Landroid/graphics/Point;->y:I
    :try_end_1b
    .catchall {:try_start_3 .. :try_end_1b} :catchall_1d

    :cond_1b
    monitor-exit v2

    .line 9090
    return-void

    .line 9091
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1d
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getInputMonitor()Lcom/android/server/wm/InputMonitor;
    .registers 2

    .prologue
    .line 1080
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    return-object v0
.end method

.method public getLidState()I
    .registers 6

    .prologue
    const/4 v4, -0x1

    const/4 v3, 0x0

    .line 5804
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v2, -0x100

    invoke-virtual {v1, v4, v2, v3}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 5806
    .local v0, "sw":I
    if-lez v0, :cond_d

    .line 5808
    return v3

    .line 5809
    :cond_d
    if-nez v0, :cond_11

    .line 5811
    const/4 v1, 0x1

    return v1

    .line 5814
    :cond_11
    return v4
.end method

.method public getOrientationLocked()I
    .registers 10

    .prologue
    const/4 v8, 0x3

    const/4 v7, -0x1

    const/4 v0, 0x0

    .line 3622
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v6, :cond_19

    .line 3623
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    if-eq v6, v7, :cond_e

    .line 3631
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    return v6

    .line 3632
    :cond_e
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v6

    if-eqz v6, :cond_76

    .line 3641
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    return v6

    .line 3645
    :cond_19
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 3646
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v6

    add-int/lit8 v1, v6, -0x1

    .local v1, "pos":I
    :goto_23
    if-ltz v1, :cond_2f

    .line 3647
    invoke-virtual {v5, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 3648
    .local v3, "win":Lcom/android/server/wm/WindowState;
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v6, :cond_4c

    .line 3667
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_2f
    iput v7, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    .line 3669
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v6

    if-eqz v6, :cond_76

    .line 3673
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v6}, Landroid/view/WindowManagerPolicy;->getWinShowWhenLockedLw()Landroid/view/WindowManagerPolicy$WindowState;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 3674
    .local v4, "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_70

    .line 3676
    .local v0, "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :goto_43
    if-eqz v0, :cond_73

    .line 3677
    iget v2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 3678
    .local v2, "req":I
    if-ne v2, v8, :cond_4b

    .line 3679
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    .line 3683
    :cond_4b
    return v2

    .line 3653
    .end local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "req":I
    .end local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .restart local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_4c
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v6

    if-eqz v6, :cond_5e

    iget-boolean v6, v3, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    if-eqz v6, :cond_5e

    .line 3656
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v6, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    .line 3657
    .restart local v2    # "req":I
    if-eq v2, v7, :cond_5e

    if-ne v2, v8, :cond_61

    .line 3646
    .end local v2    # "req":I
    :cond_5e
    add-int/lit8 v1, v1, -0x1

    goto :goto_23

    .line 3662
    .restart local v2    # "req":I
    :cond_61
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-interface {v6, v7}, Landroid/view/WindowManagerPolicy;->isKeyguardHostWindow(Landroid/view/WindowManager$LayoutParams;)Z

    move-result v6

    if-eqz v6, :cond_6d

    .line 3663
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    .line 3665
    :cond_6d
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    return v2

    .line 3675
    .end local v2    # "req":I
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    .restart local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    :cond_70
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    goto :goto_43

    .line 3687
    .restart local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    :cond_73
    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLastKeyguardForcedOrientation:I

    return v6

    .line 3692
    .end local v0    # "appShowWhenLocked":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "pos":I
    .end local v4    # "winShowWhenLocked":Lcom/android/server/wm/WindowState;
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_76
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getAppSpecifiedOrientation()I

    move-result v6

    return v6
.end method

.method public getPendingAppTransition()I
    .registers 2

    .prologue
    .line 4076
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v0

    return v0
.end method

.method public getPreferredOptionsPanelGravity()I
    .registers 9

    .prologue
    const v7, 0x800053

    const/16 v6, 0x55

    const/16 v5, 0x51

    .line 7126
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 7127
    :try_start_a
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getRotation()I

    move-result v1

    .line 7130
    .local v1, "rotation":I
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 7131
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v2, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v4, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I
    :try_end_16
    .catchall {:try_start_a .. :try_end_16} :catchall_2e

    if-ge v2, v4, :cond_23

    .line 7133
    packed-switch v1, :pswitch_data_32

    :pswitch_1b
    monitor-exit v3

    .line 7136
    return v5

    :pswitch_1d
    monitor-exit v3

    .line 7138
    return v6

    :pswitch_1f
    monitor-exit v3

    .line 7140
    return v5

    :pswitch_21
    monitor-exit v3

    .line 7142
    return v7

    .line 7147
    :cond_23
    packed-switch v1, :pswitch_data_3e

    :pswitch_26
    monitor-exit v3

    .line 7150
    return v6

    :pswitch_28
    monitor-exit v3

    .line 7152
    return v5

    :pswitch_2a
    monitor-exit v3

    .line 7154
    return v7

    :pswitch_2c
    monitor-exit v3

    .line 7156
    return v5

    .line 7126
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "rotation":I
    :catchall_2e
    move-exception v2

    monitor-exit v3

    throw v2

    .line 7133
    nop

    :pswitch_data_32
    .packed-switch 0x0
        :pswitch_1b
        :pswitch_1d
        :pswitch_1f
        :pswitch_21
    .end packed-switch

    .line 7147
    :pswitch_data_3e
    .packed-switch 0x0
        :pswitch_26
        :pswitch_28
        :pswitch_2a
        :pswitch_2c
    .end packed-switch
.end method

.method public getRotation()I
    .registers 2

    .prologue
    .line 7048
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    return v0
.end method

.method public getSingleHandMode()I
    .registers 2

    .prologue
    .line 11833
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSingleHandMode:I

    return v0
.end method

.method public getSmallestWidthForTaskBounds(Landroid/graphics/Rect;)I
    .registers 4
    .param p1, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 11472
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 11473
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->getSmallestWidthDpForBounds(Landroid/graphics/Rect;)I
    :try_end_e
    .catchall {:try_start_3 .. :try_end_e} :catchall_11

    move-result v0

    monitor-exit v1

    return v0

    .line 11472
    :catchall_11
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public getStableInsets(Landroid/graphics/Rect;)V
    .registers 4
    .param p1, "outInsets"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 11412
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11413
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(Landroid/graphics/Rect;)V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_8

    monitor-exit v0

    .line 11411
    return-void

    .line 11412
    :catchall_8
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method getStableInsetsLocked(Landroid/graphics/Rect;)V
    .registers 7
    .param p1, "outInsets"    # Landroid/graphics/Rect;

    .prologue
    .line 11418
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v0

    .line 11419
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget v2, v0, Landroid/view/DisplayInfo;->rotation:I

    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    invoke-interface {v1, v2, v3, v4, p1}, Landroid/view/WindowManagerPolicy;->getStableInsetsLw(IIILandroid/graphics/Rect;)V

    .line 11417
    return-void
.end method

.method public getStackBounds(ILandroid/graphics/Rect;)V
    .registers 6
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 5327
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5328
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 5329
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_12

    .line 5330
    invoke-virtual {v0, p2}, Lcom/android/server/wm/TaskStack;->getBounds(Landroid/graphics/Rect;)V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_17

    monitor-exit v2

    .line 5331
    return-void

    .line 5333
    :cond_12
    :try_start_12
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_17

    monitor-exit v2

    .line 5326
    return-void

    .line 5327
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_17
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getStackDockedModeBounds(ILandroid/graphics/Rect;Z)V
    .registers 7
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "ignoreVisibility"    # Z

    .prologue
    .line 5315
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5316
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 5317
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_12

    .line 5318
    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/TaskStack;->getStackDockedModeBoundsLocked(Landroid/graphics/Rect;Z)V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_17

    monitor-exit v2

    .line 5319
    return-void

    .line 5321
    :cond_12
    :try_start_12
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_17

    monitor-exit v2

    .line 5314
    return-void

    .line 5315
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_17
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getTaskBounds(ILandroid/graphics/Rect;)V
    .registers 6
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 5477
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5478
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 5479
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_12

    .line 5480
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->getBounds(Landroid/graphics/Rect;)V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_17

    monitor-exit v2

    .line 5481
    return-void

    .line 5483
    :cond_12
    :try_start_12
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_17

    monitor-exit v2

    .line 5476
    return-void

    .line 5477
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_17
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getTransitionAnimationScaleLocked()F
    .registers 2

    .prologue
    .line 5756
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v0, :cond_6

    const/4 v0, 0x0

    :goto_5
    return v0

    :cond_6
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    goto :goto_5
.end method

.method public getWindowAnimationScaleLocked()F
    .registers 2

    .prologue
    .line 5752
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationsDisabled:Z

    if-eqz v0, :cond_6

    const/4 v0, 0x0

    :goto_5
    return v0

    :cond_6
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    goto :goto_5
.end method

.method public getWindowContentFrameStats(Landroid/os/IBinder;)Landroid/view/WindowContentFrameStats;
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v5, 0x0

    .line 10510
    const-string/jumbo v3, "android.permission.FRAME_STATS"

    .line 10511
    const-string/jumbo v4, "getWindowContentFrameStats()"

    .line 10510
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_16

    .line 10512
    new-instance v3, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Requires FRAME_STATS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 10514
    :cond_16
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 10515
    :try_start_19
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;
    :try_end_21
    .catchall {:try_start_19 .. :try_end_21} :catchall_44

    .line 10516
    .local v2, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_25

    monitor-exit v4

    .line 10517
    return-object v5

    .line 10519
    :cond_25
    :try_start_25
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v1, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;
    :try_end_29
    .catchall {:try_start_25 .. :try_end_29} :catchall_44

    .line 10520
    .local v1, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    if-nez v1, :cond_2d

    monitor-exit v4

    .line 10521
    return-object v5

    .line 10523
    :cond_2d
    :try_start_2d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    if-nez v3, :cond_38

    .line 10524
    new-instance v3, Landroid/view/WindowContentFrameStats;

    invoke-direct {v3}, Landroid/view/WindowContentFrameStats;-><init>()V

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 10526
    :cond_38
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTempWindowRenderStats:Landroid/view/WindowContentFrameStats;

    .line 10527
    .local v0, "stats":Landroid/view/WindowContentFrameStats;
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowSurfaceController;->getWindowContentFrameStats(Landroid/view/WindowContentFrameStats;)Z
    :try_end_3d
    .catchall {:try_start_2d .. :try_end_3d} :catchall_44

    move-result v3

    if-nez v3, :cond_42

    monitor-exit v4

    .line 10528
    return-object v5

    :cond_42
    monitor-exit v4

    .line 10530
    return-object v0

    .line 10514
    .end local v0    # "stats":Landroid/view/WindowContentFrameStats;
    .end local v1    # "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    .end local v2    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_44
    move-exception v3

    monitor-exit v4

    throw v3
.end method

.method public getWindowDisplayFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .registers 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outDisplayFrame"    # Landroid/graphics/Rect;

    .prologue
    .line 2749
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 2750
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 2751
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_f

    .line 2752
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_d
    .catchall {:try_start_4 .. :try_end_d} :catchall_16

    monitor-exit v2

    .line 2753
    return-void

    .line 2755
    :cond_f
    :try_start_f
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V
    :try_end_14
    .catchall {:try_start_f .. :try_end_14} :catchall_16

    monitor-exit v2

    .line 2748
    return-void

    .line 2749
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_16
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 2772
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 2773
    :try_start_4
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 2774
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_10

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mWindowId:Landroid/view/IWindowId;
    :try_end_10
    .catchall {:try_start_4 .. :try_end_10} :catchall_12

    :cond_10
    monitor-exit v2

    return-object v1

    .line 2772
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_12
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getWindowListLocked(I)Lcom/android/server/wm/WindowList;
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    const/4 v1, 0x0

    .line 11174
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 11175
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_b

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    :cond_b
    return-object v1
.end method

.method public getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;
    .registers 3
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 11165
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getWindowListLocked(I)Lcom/android/server/wm/WindowList;

    move-result-object v0

    return-object v0
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .registers 2

    .prologue
    .line 11230
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    return-object v0
.end method

.method handleAnimatingStoppedAndTransitionLocked()I
    .registers 13

    .prologue
    const/4 v11, 0x1

    const/4 v10, 0x0

    .line 9608
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v9}, Lcom/android/server/wm/AppTransition;->setIdle()V

    .line 9610
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    invoke-interface {v9}, Ljava/util/List;->size()I

    move-result v9

    add-int/lit8 v1, v9, -0x1

    .local v1, "i":I
    :goto_f
    if-ltz v1, :cond_21

    .line 9611
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    invoke-interface {v9, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/os/IBinder;

    .line 9612
    .local v6, "token":Landroid/os/IBinder;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v9, v6}, Lcom/android/server/wm/AppTransition;->notifyAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    .line 9610
    add-int/lit8 v1, v1, -0x1

    goto :goto_f

    .line 9614
    .end local v6    # "token":Landroid/os/IBinder;
    :cond_21
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mNoAnimationNotifyOnTransitionFinished:Ljava/util/List;

    invoke-interface {v9}, Ljava/util/List;->clear()V

    .line 9616
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v9}, Lcom/android/server/wm/WallpaperController;->hideDeferredWallpapersIfNeeded()V

    .line 9619
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v9

    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getStacks()Ljava/util/ArrayList;

    move-result-object v3

    .line 9620
    .local v3, "stacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v2, v9, -0x1

    .local v2, "stackNdx":I
    :goto_39
    if-ltz v2, :cond_6e

    .line 9621
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/TaskStack;

    invoke-virtual {v9}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v5

    .line 9622
    .local v5, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v4, v9, -0x1

    .local v4, "taskNdx":I
    :goto_4b
    if-ltz v4, :cond_6b

    .line 9623
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v8, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 9624
    .local v8, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v8}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v9

    add-int/lit8 v7, v9, -0x1

    .local v7, "tokenNdx":I
    :goto_5b
    if-ltz v7, :cond_68

    .line 9625
    invoke-virtual {v8, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/AppWindowToken;

    iput-boolean v10, v9, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    .line 9624
    add-int/lit8 v7, v7, -0x1

    goto :goto_5b

    .line 9622
    :cond_68
    add-int/lit8 v4, v4, -0x1

    goto :goto_4b

    .line 9620
    .end local v7    # "tokenNdx":I
    .end local v8    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_6b
    add-int/lit8 v2, v2, -0x1

    goto :goto_39

    .line 9629
    .end local v4    # "taskNdx":I
    .end local v5    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_6e
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked()V

    .line 9631
    const/4 v0, 0x1

    .line 9634
    .local v0, "changes":I
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 9635
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    iput-boolean v11, v9, Lcom/android/server/wm/WindowSurfacePlacer;->mWallpaperMayChange:Z

    .line 9639
    iput-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    .line 9641
    return v0
.end method

.method public handleDisplayAdded(I)V
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 11183
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11184
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v1, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 11185
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_11

    .line 11186
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    .line 11187
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    .line 11189
    :cond_11
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_18

    monitor-exit v2

    .line 11182
    return-void

    .line 11183
    .end local v0    # "display":Landroid/view/Display;
    :catchall_18
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method hasDockedTasksForUser(I)Z
    .registers 10
    .param p1, "userId"    # I

    .prologue
    const/4 v7, 0x0

    .line 5916
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    const/4 v6, 0x3

    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/TaskStack;

    .line 5917
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v2, :cond_d

    .line 5918
    return v7

    .line 5921
    :cond_d
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v4

    .line 5922
    .local v4, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v0, 0x0

    .line 5923
    .local v0, "hasUserTask":Z
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_18
    if-ltz v1, :cond_1c

    if-eqz v0, :cond_1d

    .line 5927
    :cond_1c
    return v0

    .line 5924
    :cond_1d
    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/Task;

    .line 5925
    .local v3, "task":Lcom/android/server/wm/Task;
    iget v5, v3, Lcom/android/server/wm/Task;->mUserId:I

    if-ne v5, p1, :cond_2b

    const/4 v0, 0x1

    .line 5923
    :goto_28
    add-int/lit8 v1, v1, -0x1

    goto :goto_18

    .line 5925
    :cond_2b
    const/4 v0, 0x0

    goto :goto_28
.end method

.method public hasNavigationBar()Z
    .registers 2

    .prologue
    .line 10467
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hasNavigationBar()Z

    move-result v0

    return v0
.end method

.method public hideBootMessagesLocked()V
    .registers 2

    .prologue
    .line 6184
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-eqz v0, :cond_c

    .line 6185
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 6186
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hideBootMessages()V

    .line 6175
    :cond_c
    return-void
.end method

.method public inKeyguardRestrictedInputMode()Z
    .registers 2

    .prologue
    .line 5611
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->inKeyguardRestrictedKeyInputMode()Z

    move-result v0

    return v0
.end method

.method public inputMethodClientHasFocus(Lcom/android/internal/view/IInputMethodClient;)Z
    .registers 12
    .param p1, "client"    # Lcom/android/internal/view/IInputMethodClient;

    .prologue
    const/4 v9, 0x1

    const/4 v8, 0x0

    .line 9030
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 9033
    const/4 v4, 0x0

    :try_start_6
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v1

    .line 9034
    .local v1, "idx":I
    if-lez v1, :cond_70

    .line 9036
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v4

    add-int/lit8 v6, v1, -0x1

    invoke-virtual {v4, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 9042
    .local v2, "imFocus":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_70

    .line 9045
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v6, 0x3

    if-ne v4, v6, :cond_57

    .line 9046
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_57

    .line 9049
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_26
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    if-ge v0, v4, :cond_57

    .line 9050
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, v4, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 9051
    .local v3, "w":Lcom/android/server/wm/WindowState;
    if-eq v3, v2, :cond_6d

    .line 9052
    const-string/jumbo v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "Switching to real app window: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9053
    move-object v2, v3

    .line 9066
    .end local v0    # "i":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_57
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    if-eqz v4, :cond_70

    .line 9067
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_68
    .catchall {:try_start_6 .. :try_end_68} :catchall_90

    move-result-object v6

    if-ne v4, v6, :cond_70

    monitor-exit v5

    .line 9068
    return v9

    .line 9049
    .restart local v0    # "i":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_6d
    add-int/lit8 v0, v0, 0x1

    goto :goto_26

    .line 9081
    .end local v0    # "i":I
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_70
    :try_start_70
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v4, :cond_8e

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    if-eqz v4, :cond_8e

    .line 9082
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v4, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v4, v4, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    invoke-interface {v4}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;
    :try_end_89
    .catchall {:try_start_70 .. :try_end_89} :catchall_90

    move-result-object v6

    if-ne v4, v6, :cond_8e

    monitor-exit v5

    .line 9083
    return v9

    :cond_8e
    monitor-exit v5

    .line 9086
    return v8

    .line 9030
    .end local v1    # "idx":I
    :catchall_90
    move-exception v4

    monitor-exit v5

    throw v4
.end method

.method isCurrentProfileLocked(I)Z
    .registers 5
    .param p1, "userId"    # I

    .prologue
    const/4 v2, 0x1

    .line 5932
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    if-ne p1, v1, :cond_6

    return v2

    .line 5933
    :cond_6
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_7
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    array-length v1, v1

    if-ge v0, v1, :cond_16

    .line 5934
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    aget v1, v1, v0

    if-ne v1, p1, :cond_13

    return v2

    .line 5933
    :cond_13
    add-int/lit8 v0, v0, 0x1

    goto :goto_7

    .line 5936
    :cond_16
    const/4 v1, 0x0

    return v1
.end method

.method public isKeyguardLocked()Z
    .registers 2

    .prologue
    .line 5616
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v0

    return v0
.end method

.method public isKeyguardSecure()Z
    .registers 5

    .prologue
    .line 5621
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    .line 5622
    .local v2, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5624
    .local v0, "origId":J
    :try_start_8
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3, v2}, Landroid/view/WindowManagerPolicy;->isKeyguardSecure(I)Z
    :try_end_d
    .catchall {:try_start_8 .. :try_end_d} :catchall_12

    move-result v3

    .line 5626
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5624
    return v3

    .line 5625
    :catchall_12
    move-exception v3

    .line 5626
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5625
    throw v3
.end method

.method public isRotationFrozen()Z
    .registers 3

    .prologue
    const/4 v0, 0x1

    .line 7053
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getUserRotationMode()I

    move-result v1

    if-ne v1, v0, :cond_a

    :goto_9
    return v0

    :cond_a
    const/4 v0, 0x0

    goto :goto_9
.end method

.method public isSafeModeEnabled()Z
    .registers 2

    .prologue
    .line 10486
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    return v0
.end method

.method isScreenCaptureDisabledLocked(I)Z
    .registers 4
    .param p1, "userId"    # I

    .prologue
    .line 2338
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/Boolean;

    .line 2339
    .local v0, "disabled":Ljava/lang/Boolean;
    if-nez v0, :cond_c

    .line 2340
    const/4 v1, 0x0

    return v1

    .line 2342
    :cond_c
    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v1

    return v1
.end method

.method isSecureLocked(Lcom/android/server/wm/WindowState;)Z
    .registers 5
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v2, 0x1

    const/4 v1, 0x0

    .line 2346
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit16 v0, v0, 0x2000

    if-eqz v0, :cond_b

    .line 2347
    return v2

    .line 2349
    :cond_b
    iget v0, p1, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->isScreenCaptureDisabledLocked(I)Z

    move-result v0

    if-eqz v0, :cond_18

    .line 2350
    return v2

    .line 2352
    :cond_18
    return v1
.end method

.method isStackVisibleLocked(I)Z
    .registers 4
    .param p1, "stackId"    # I

    .prologue
    .line 5145
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 5146
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_f

    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    move-result v1

    :goto_e
    return v1

    :cond_f
    const/4 v1, 0x0

    goto :goto_e
.end method

.method public isValidTaskId(I)Z
    .registers 4
    .param p1, "taskId"    # I

    .prologue
    .line 5489
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5490
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_10

    move-result-object v0

    if-eqz v0, :cond_e

    const/4 v0, 0x1

    :goto_c
    monitor-exit v1

    return v0

    :cond_e
    const/4 v0, 0x0

    goto :goto_c

    .line 5489
    :catchall_10
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public isViewServerRunning()Z
    .registers 4

    .prologue
    const/4 v0, 0x0

    .line 7243
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7244
    return v0

    .line 7247
    :cond_8
    const-string/jumbo v1, "android.permission.DUMP"

    const-string/jumbo v2, "isViewServerRunning"

    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 7248
    return v0

    .line 7251
    :cond_15
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v1, :cond_1f

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v0

    :cond_1f
    return v0
.end method

.method public keyguardGoingAway(I)V
    .registers 5
    .param p1, "flags"    # I

    .prologue
    .line 5643
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 5645
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5649
    :cond_14
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5650
    :try_start_17
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAway:Z

    .line 5651
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iput p1, v0, Lcom/android/server/wm/WindowAnimator;->mKeyguardGoingAwayFlags:I

    .line 5652
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_25
    .catchall {:try_start_17 .. :try_end_25} :catchall_27

    monitor-exit v1

    .line 5642
    return-void

    .line 5649
    :catchall_27
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public keyguardWaitingForActivityDrawn()V
    .registers 3

    .prologue
    .line 5658
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 5659
    const/4 v1, 0x1

    :try_start_4
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_6
    .catchall {:try_start_4 .. :try_end_6} :catchall_8

    monitor-exit v0

    .line 5656
    return-void

    .line 5658
    :catchall_8
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method public lockDeviceNow()V
    .registers 2

    .prologue
    .line 5821
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    .line 5820
    return-void
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .registers 3
    .param p1, "options"    # Landroid/os/Bundle;

    .prologue
    .line 10477
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    .line 10476
    return-void
.end method

.method logWindowList(Lcom/android/server/wm/WindowList;Ljava/lang/String;)V
    .registers 7
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    .line 1702
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1703
    .local v0, "N":I
    :goto_4
    if-lez v0, :cond_36

    .line 1704
    add-int/lit8 v0, v0, -0x1

    .line 1705
    const-string/jumbo v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "#"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p1, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 1701
    :cond_36
    return-void
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .registers 7
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/16 v4, 0xb

    const/4 v3, 0x1

    const/4 v2, 0x0

    .line 9586
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v0

    if-nez v0, :cond_29

    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    const/4 v1, 0x2

    if-eq v0, v1, :cond_29

    .line 9588
    iput-boolean v3, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 9589
    iput v2, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 9590
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    iput-boolean v2, v0, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    .line 9591
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    if-nez v0, :cond_29

    .line 9592
    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    .line 9595
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 9596
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 9597
    const-wide/16 v2, 0x7d0

    .line 9596
    invoke-virtual {v0, v4, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 9582
    :cond_29
    return-void
.end method

.method markForSeamlessRotation(Lcom/android/server/wm/WindowState;Z)V
    .registers 5
    .param p1, "w"    # Lcom/android/server/wm/WindowState;
    .param p2, "seamlesslyRotated"    # Z

    .prologue
    const/4 v1, 0x0

    .line 11576
    iget-boolean v0, p1, Lcom/android/server/wm/WindowState;->mSeamlesslyRotated:Z

    if-ne p2, v0, :cond_6

    .line 11577
    return-void

    .line 11579
    :cond_6
    iput-boolean p2, p1, Lcom/android/server/wm/WindowState;->mSeamlesslyRotated:Z

    .line 11580
    if-eqz p2, :cond_22

    .line 11581
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    .line 11585
    :goto_10
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    if-nez v0, :cond_21

    .line 11589
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v0

    if-eqz v0, :cond_21

    .line 11590
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x12

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 11575
    :cond_21
    return-void

    .line 11583
    :cond_22
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    add-int/lit8 v0, v0, -0x1

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    goto :goto_10
.end method

.method public monitor()V
    .registers 2

    .prologue
    .line 11093
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    monitor-exit v0

    .line 11092
    return-void
.end method

.method moveInputMethodDialogsLocked(I)V
    .registers 11
    .param p1, "pos"    # I

    .prologue
    const/4 v8, 0x0

    .line 1710
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    .line 1713
    .local v1, "dialogs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 1714
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 1716
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_c
    if-ge v2, v0, :cond_1b

    .line 1717
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    invoke-direct {p0, p1, v7}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result p1

    .line 1716
    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    .line 1724
    :cond_1b
    if-ltz p1, :cond_51

    .line 1725
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1727
    .local v3, "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_3e

    .line 1728
    :goto_25
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-ge p1, v7, :cond_3e

    .line 1729
    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 1730
    .local v6, "wp":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eq v6, v7, :cond_3b

    iget-object v7, v6, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v7, v8, :cond_3e

    .line 1731
    :cond_3b
    add-int/lit8 p1, p1, 0x1

    .line 1732
    goto :goto_25

    .line 1738
    .end local v6    # "wp":Lcom/android/server/wm/WindowState;
    :cond_3e
    const/4 v2, 0x0

    :goto_3f
    if-ge v2, v0, :cond_50

    .line 1739
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 1740
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iput-object v3, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1741
    invoke-direct {p0, p1, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result p1

    .line 1738
    add-int/lit8 v2, v2, 0x1

    goto :goto_3f

    .line 1747
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_50
    return-void

    .line 1749
    .end local v3    # "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_51
    const/4 v2, 0x0

    :goto_52
    if-ge v2, v0, :cond_62

    .line 1750
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 1751
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    iput-object v8, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1752
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    .line 1749
    add-int/lit8 v2, v2, 0x1

    goto :goto_52

    .line 1709
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_62
    return-void
.end method

.method moveInputMethodWindowsIfNeededLocked(Z)Z
    .registers 16
    .param p1, "needAssignLayers"    # Z

    .prologue
    const/4 v13, 0x1

    const/4 v12, -0x1

    const/4 v11, 0x0

    const/4 v10, 0x0

    .line 1761
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 1762
    .local v6, "imWin":Lcom/android/server/wm/WindowState;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 1763
    .local v0, "DN":I
    if-nez v6, :cond_11

    if-nez v0, :cond_11

    .line 1764
    return v10

    .line 1768
    :cond_11
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v8

    .line 1770
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {p0, v13}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v5

    .line 1771
    .local v5, "imPos":I
    if-ltz v5, :cond_9c

    .line 1777
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 1778
    .local v1, "N":I
    if-ge v5, v1, :cond_68

    .line 1779
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 1783
    :goto_27
    if-eqz v6, :cond_6a

    move-object v2, v6

    .line 1785
    .local v2, "baseImWin":Lcom/android/server/wm/WindowState;
    :goto_2a
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    if-lez v9, :cond_3f

    .line 1786
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 1787
    .local v3, "cw":Lcom/android/server/wm/WindowState;
    iget v9, v3, Lcom/android/server/wm/WindowState;->mSubLayer:I

    if-gez v9, :cond_3f

    move-object v2, v3

    .line 1790
    .end local v3    # "cw":Lcom/android/server/wm/WindowState;
    :cond_3f
    if-ne v4, v2, :cond_7a

    .line 1793
    add-int/lit8 v7, v5, 0x1

    .line 1794
    .local v7, "pos":I
    :goto_43
    if-ge v7, v1, :cond_4f

    .line 1795
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-nez v9, :cond_74

    .line 1800
    :cond_4f
    add-int/lit8 v7, v7, 0x1

    .line 1802
    :goto_51
    if-ge v7, v1, :cond_5d

    .line 1803
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-eqz v9, :cond_77

    .line 1808
    :cond_5d
    if-lt v7, v1, :cond_7a

    .line 1811
    if-eqz v6, :cond_67

    .line 1812
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1814
    :cond_67
    return v10

    .line 1779
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v7    # "pos":I
    :cond_68
    const/4 v4, 0x0

    .local v4, "firstImWin":Lcom/android/server/wm/WindowState;
    goto :goto_27

    .line 1784
    .end local v4    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_6a
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    move-object v2, v9

    goto :goto_2a

    .line 1798
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v7    # "pos":I
    :cond_74
    add-int/lit8 v7, v7, 0x1

    goto :goto_43

    .line 1806
    :cond_77
    add-int/lit8 v7, v7, 0x1

    goto :goto_51

    .line 1818
    .end local v7    # "pos":I
    :cond_7a
    if-eqz v6, :cond_98

    .line 1823
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result v5

    .line 1828
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1829
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 1834
    if-lez v0, :cond_90

    add-int/lit8 v9, v5, 0x1

    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    .line 1859
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_90
    :goto_90
    if-eqz p1, :cond_97

    .line 1860
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    invoke-virtual {v9, v8}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 1863
    :cond_97
    return v13

    .line 1836
    .restart local v1    # "N":I
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_98
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    goto :goto_90

    .line 1843
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    :cond_9c
    if-eqz v6, :cond_ac

    .line 1845
    invoke-direct {p0, v10, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 1846
    iput-object v11, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1847
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    .line 1852
    if-lez v0, :cond_90

    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    goto :goto_90

    .line 1854
    :cond_ac
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    goto :goto_90
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v10, 0x1

    const/4 v11, 0x0

    .line 5047
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v8

    .line 5048
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 5050
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 5053
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 5054
    .local v3, "tmpSize":I
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    .line 5055
    .local v7, "winSize":I
    const/4 v1, 0x0

    .local v1, "tmpNdx":I
    const/4 v5, 0x0

    .line 5056
    .local v5, "winNdx":I
    :goto_1a
    if-ge v1, v3, :cond_52

    if-ge v5, v7, :cond_52

    .line 5060
    :goto_1e
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    add-int/lit8 v2, v1, 0x1

    .end local v1    # "tmpNdx":I
    .local v2, "tmpNdx":I
    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 5061
    .local v0, "tmp":Lcom/android/server/wm/WindowState;
    if-ge v2, v3, :cond_36

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_36

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    if-eqz v9, :cond_36

    move v1, v2

    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_1e

    .line 5065
    .end local v1    # "tmpNdx":I
    .restart local v2    # "tmpNdx":I
    :cond_36
    :goto_36
    add-int/lit8 v6, v5, 0x1

    .end local v5    # "winNdx":I
    .local v6, "winNdx":I
    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 5066
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-ge v6, v7, :cond_4c

    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_4c

    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v9, v9, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    if-eqz v9, :cond_4c

    move v5, v6

    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    goto :goto_36

    .line 5068
    .end local v5    # "winNdx":I
    .restart local v6    # "winNdx":I
    :cond_4c
    if-eq v0, v4, :cond_7b

    .line 5070
    iput-boolean v10, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    move v5, v6

    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    .line 5074
    .end local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .end local v2    # "tmpNdx":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v1    # "tmpNdx":I
    :cond_52
    if-eq v1, v5, :cond_56

    .line 5076
    iput-boolean v10, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5078
    :cond_56
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpWindows:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->clear()V

    .line 5080
    const/4 v9, 0x3

    invoke-virtual {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v9

    if-nez v9, :cond_6b

    .line 5082
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v10

    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 5085
    :cond_6b
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v9}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 5086
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 5087
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 5046
    return-void

    .end local v1    # "tmpNdx":I
    .end local v5    # "winNdx":I
    .restart local v0    # "tmp":Lcom/android/server/wm/WindowState;
    .restart local v2    # "tmpNdx":I
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "winNdx":I
    :cond_7b
    move v5, v6

    .end local v6    # "winNdx":I
    .restart local v5    # "winNdx":I
    move v1, v2

    .end local v2    # "tmpNdx":I
    .restart local v1    # "tmpNdx":I
    goto :goto_1a
.end method

.method public moveTaskToBottom(I)V
    .registers 10
    .param p1, "taskId"    # I

    .prologue
    .line 5123
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5125
    .local v0, "origId":J
    :try_start_4
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_57

    .line 5126
    :try_start_7
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/Task;

    .line 5127
    .local v3, "task":Lcom/android/server/wm/Task;
    if-nez v3, :cond_37

    .line 5128
    const-string/jumbo v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "moveTaskToBottom: taskId="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 5129
    const-string/jumbo v7, " not found in mTaskIdToTask"

    .line 5128
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_32
    .catchall {:try_start_7 .. :try_end_32} :catchall_54

    :try_start_32
    monitor-exit v5
    :try_end_33
    .catchall {:try_start_32 .. :try_end_33} :catchall_57

    .line 5140
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5130
    return-void

    .line 5132
    :cond_37
    :try_start_37
    iget-object v2, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 5133
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->moveTaskToBottom(Lcom/android/server/wm/Task;)V

    .line 5134
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v4

    if-eqz v4, :cond_48

    .line 5135
    const/4 v4, 0x1

    invoke-virtual {v3, v4}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    .line 5137
    :cond_48
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_4f
    .catchall {:try_start_37 .. :try_end_4f} :catchall_54

    :try_start_4f
    monitor-exit v5
    :try_end_50
    .catchall {:try_start_4f .. :try_end_50} :catchall_57

    .line 5140
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5122
    return-void

    .line 5125
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "task":Lcom/android/server/wm/Task;
    :catchall_54
    move-exception v4

    :try_start_55
    monitor-exit v5

    throw v4
    :try_end_57
    .catchall {:try_start_55 .. :try_end_57} :catchall_57

    .line 5139
    :catchall_57
    move-exception v4

    .line 5140
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5139
    throw v4
.end method

.method public moveTaskToStack(IIZ)V
    .registers 9
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    .prologue
    .line 5294
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 5297
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_2c

    .line 5298
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_f

    monitor-exit v4

    .line 5300
    return-void

    .line 5302
    :cond_f
    :try_start_f
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;
    :try_end_17
    .catchall {:try_start_f .. :try_end_17} :catchall_2c

    .line 5303
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1b

    monitor-exit v4

    .line 5305
    return-void

    .line 5307
    :cond_1b
    :try_start_1b
    invoke-virtual {v2, v1, p3}, Lcom/android/server/wm/Task;->moveTaskToStack(Lcom/android/server/wm/TaskStack;Z)V

    .line 5308
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5309
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5310
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_2a
    .catchall {:try_start_1b .. :try_end_2a} :catchall_2c

    monitor-exit v4

    .line 5293
    return-void

    .line 5294
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_2c
    move-exception v3

    monitor-exit v4

    throw v3
.end method

.method public moveTaskToTop(I)V
    .registers 10
    .param p1, "taskId"    # I

    .prologue
    .line 5092
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 5094
    .local v2, "origId":J
    :try_start_4
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_48

    .line 5095
    :try_start_7
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/Task;
    :try_end_f
    .catchall {:try_start_7 .. :try_end_f} :catchall_45

    .line 5096
    .local v5, "task":Lcom/android/server/wm/Task;
    if-nez v5, :cond_16

    :try_start_11
    monitor-exit v7
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_48

    .line 5118
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5098
    return-void

    .line 5100
    :cond_16
    :try_start_16
    iget-object v4, v5, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 5101
    .local v4, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v5}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5102
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v6, 0x1

    invoke-virtual {v0, v4, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    .line 5103
    iget-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    if-eqz v6, :cond_2e

    .line 5104
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    move-result-object v1

    .line 5105
    .local v1, "homeStack":Lcom/android/server/wm/TaskStack;
    if-eq v1, v4, :cond_2e

    .line 5108
    const/4 v6, 0x0

    invoke-virtual {v0, v1, v6}, Lcom/android/server/wm/DisplayContent;->moveStack(Lcom/android/server/wm/TaskStack;Z)V

    .line 5111
    .end local v1    # "homeStack":Lcom/android/server/wm/TaskStack;
    :cond_2e
    invoke-virtual {v4, v5}, Lcom/android/server/wm/TaskStack;->moveTaskToTop(Lcom/android/server/wm/Task;)V

    .line 5112
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v6}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v6

    if-eqz v6, :cond_3d

    .line 5113
    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/wm/Task;->setSendingToBottom(Z)V

    .line 5115
    :cond_3d
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    :try_end_40
    .catchall {:try_start_16 .. :try_end_40} :catchall_45

    :try_start_40
    monitor-exit v7
    :try_end_41
    .catchall {:try_start_40 .. :try_end_41} :catchall_48

    .line 5118
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5091
    return-void

    .line 5094
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v5    # "task":Lcom/android/server/wm/Task;
    :catchall_45
    move-exception v6

    :try_start_46
    monitor-exit v7

    throw v6
    :try_end_48
    .catchall {:try_start_46 .. :try_end_48} :catchall_48

    .line 5117
    :catchall_48
    move-exception v6

    .line 5118
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5117
    throw v6
.end method

.method needsLayout()Z
    .registers 5

    .prologue
    .line 9825
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 9826
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v2, :cond_1a

    .line 9827
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 9828
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-eqz v3, :cond_17

    .line 9829
    const/4 v3, 0x1

    return v3

    .line 9826
    :cond_17
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 9832
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1a
    const/4 v3, 0x0

    return v3
.end method

.method public needsNavigationBar()Z
    .registers 2

    .prologue
    .line 10472
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->needsNavigationBar()Z

    move-result v0

    return v0
.end method

.method public notifyActivityDrawnForKeyguard()V
    .registers 3

    .prologue
    .line 5666
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5667
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z

    if-eqz v0, :cond_f

    .line 5668
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->notifyActivityDrawnForKeyguardLw()V

    .line 5669
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardWaitingForActivityDrawn:Z
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_11

    :cond_f
    monitor-exit v1

    .line 5663
    return-void

    .line 5666
    :catchall_11
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public notifyAppRelaunchesCleared(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10553
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 10554
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 10555
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_c

    .line 10556
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->clearRelaunching()V
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_e

    :cond_c
    monitor-exit v2

    .line 10552
    return-void

    .line 10553
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_e
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public notifyAppRelaunching(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10535
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 10536
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 10537
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_c

    .line 10538
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->startRelaunching()V
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_e

    :cond_c
    monitor-exit v2

    .line 10534
    return-void

    .line 10535
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_e
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public notifyAppRelaunchingFinished(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10544
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 10545
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 10546
    .local v0, "appWindow":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_c

    .line 10547
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->finishRelaunching()V
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_e

    :cond_c
    monitor-exit v2

    .line 10543
    return-void

    .line 10544
    .end local v0    # "appWindow":Lcom/android/server/wm/AppWindowToken;
    :catchall_e
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public notifyAppResumed(Landroid/os/IBinder;ZZ)V
    .registers 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "wasStopped"    # Z
    .param p3, "allowSavedSurface"    # Z

    .prologue
    .line 4606
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 4607
    const-string/jumbo v2, "notifyAppResumed()"

    .line 4606
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 4608
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4611
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4613
    :try_start_18
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 4614
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_3a

    .line 4615
    const-string/jumbo v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to notify resumed of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_38
    .catchall {:try_start_18 .. :try_end_38} :catchall_3f

    monitor-exit v2

    .line 4616
    return-void

    .line 4618
    :cond_3a
    :try_start_3a
    invoke-virtual {v0, p2, p3}, Lcom/android/server/wm/AppWindowToken;->notifyAppResumed(ZZ)V
    :try_end_3d
    .catchall {:try_start_3a .. :try_end_3d} :catchall_3f

    monitor-exit v2

    .line 4605
    return-void

    .line 4611
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3f
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public notifyAppStopped(Landroid/os/IBinder;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4624
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 4625
    const-string/jumbo v2, "notifyAppStopped()"

    .line 4624
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 4626
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4629
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4631
    :try_start_18
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 4632
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_3a

    .line 4633
    const-string/jumbo v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to notify stopped of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_38
    .catchall {:try_start_18 .. :try_end_38} :catchall_3f

    monitor-exit v2

    .line 4634
    return-void

    .line 4636
    :cond_3a
    :try_start_3a
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->notifyAppStopped()V
    :try_end_3d
    .catchall {:try_start_3a .. :try_end_3d} :catchall_3f

    monitor-exit v2

    .line 4623
    return-void

    .line 4629
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3f
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method notifyHardKeyboardStatusChange()V
    .registers 5

    .prologue
    .line 7812
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 7813
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;

    .line 7814
    .local v1, "listener":Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z
    :try_end_7
    .catchall {:try_start_3 .. :try_end_7} :catchall_e

    .local v0, "available":Z
    monitor-exit v3

    .line 7816
    if-eqz v1, :cond_d

    .line 7817
    invoke-interface {v1, v0}, Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(Z)V

    .line 7809
    :cond_d
    return-void

    .line 7812
    .end local v0    # "available":Z
    .end local v1    # "listener":Landroid/view/WindowManagerInternal$OnHardKeyboardStatusChangeListener;
    :catchall_e
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method okToDisplay()Z
    .registers 2

    .prologue
    .line 3424
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v0, :cond_f

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_f

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isScreenOn()Z

    move-result v0

    :goto_e
    return v0

    :cond_f
    const/4 v0, 0x0

    goto :goto_e
.end method

.method public onDisplayAdded(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 11179
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1b

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 11178
    return-void
.end method

.method public onDisplayChanged(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 11217
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1d

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 11216
    return-void
.end method

.method public onDisplayRemoved(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 11194
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1c

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 11193
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;

    .prologue
    .line 2760
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 2761
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v1, :cond_1c

    .line 2762
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 2764
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_1c

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v1

    if-nez v1, :cond_1c

    .line 2765
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/AccessibilityController;->onRectangleOnScreenRequestedLocked(Landroid/graphics/Rect;)V
    :try_end_1c
    .catchall {:try_start_3 .. :try_end_1c} :catchall_1e

    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :cond_1c
    monitor-exit v2

    .line 2759
    return-void

    .line 2760
    :catchall_1e
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .registers 8
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 1087
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_3} :catch_5

    move-result v1

    return v1

    .line 1088
    :catch_5
    move-exception v0

    .line 1091
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    if-nez v1, :cond_13

    .line 1092
    const-string/jumbo v1, "WindowManager"

    const-string/jumbo v2, "Window Manager Crash"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 1094
    :cond_13
    throw v0
.end method

.method public openSession(Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)Landroid/view/IWindowSession;
    .registers 7
    .param p1, "callback"    # Landroid/view/IWindowSessionCallback;
    .param p2, "client"    # Lcom/android/internal/view/IInputMethodClient;
    .param p3, "inputContext"    # Lcom/android/internal/view/IInputContext;

    .prologue
    .line 9022
    if-nez p2, :cond_b

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "null client"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9023
    :cond_b
    if-nez p3, :cond_16

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v2, "null inputContext"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9024
    :cond_16
    new-instance v0, Lcom/android/server/wm/Session;

    invoke-direct {v0, p0, p1, p2, p3}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindowSessionCallback;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)V

    .line 9025
    .local v0, "session":Lcom/android/server/wm/Session;
    return-object v0
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .registers 10
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    const/4 v5, 0x0

    .line 3238
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3241
    .local v0, "origId":J
    :try_start_5
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_8
    .catchall {:try_start_5 .. :try_end_8} :catchall_26

    .line 3242
    const/4 v3, 0x0

    :try_start_9
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_c
    .catchall {:try_start_9 .. :try_end_c} :catchall_23

    move-result-object v2

    .line 3243
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_14

    :try_start_f
    monitor-exit v4
    :try_end_10
    .catchall {:try_start_f .. :try_end_10} :catchall_26

    .line 3249
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3244
    return v5

    .line 3246
    :cond_14
    :try_start_14
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const-string/jumbo v5, "from-client"

    const/4 v6, 0x0

    invoke-virtual {p0, v3, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    :try_end_1d
    .catchall {:try_start_14 .. :try_end_1d} :catchall_23

    move-result v3

    :try_start_1e
    monitor-exit v4
    :try_end_1f
    .catchall {:try_start_1e .. :try_end_1f} :catchall_26

    .line 3249
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3246
    return v3

    .line 3241
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_23
    move-exception v3

    :try_start_24
    monitor-exit v4

    throw v3
    :try_end_26
    .catchall {:try_start_24 .. :try_end_26} :catchall_26

    .line 3248
    :catchall_26
    move-exception v3

    .line 3249
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3248
    throw v3
.end method

.method public overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    .registers 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enterAnim"    # I
    .param p3, "exitAnim"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;

    .prologue
    .line 4082
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4083
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 4081
    return-void

    .line 4082
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    .registers 17
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "targetWidth"    # I
    .param p5, "targetHeight"    # I
    .param p6, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p7, "scaleUp"    # Z

    .prologue
    .line 4119
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 4120
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move-object v6, p6

    move/from16 v7, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionAspectScaledThumb(Landroid/graphics/Bitmap;IIIILandroid/os/IRemoteCallback;Z)V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_12

    monitor-exit v8

    .line 4118
    return-void

    .line 4119
    :catchall_12
    move-exception v0

    monitor-exit v8

    throw v0
.end method

.method public overridePendingAppTransitionClipReveal(IIII)V
    .registers 7
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    .prologue
    .line 4100
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4101
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionClipReveal(IIII)V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 4099
    return-void

    .line 4100
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public overridePendingAppTransitionInPlace(Ljava/lang/String;I)V
    .registers 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "anim"    # I

    .prologue
    .line 4160
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4161
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/AppTransition;->overrideInPlaceAppTransition(Ljava/lang/String;I)V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 4159
    return-void

    .line 4160
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public overridePendingAppTransitionMultiThumb([Landroid/view/AppTransitionAnimationSpec;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V
    .registers 7
    .param p1, "specs"    # [Landroid/view/AppTransitionAnimationSpec;
    .param p2, "onAnimationStartedCallback"    # Landroid/os/IRemoteCallback;
    .param p3, "onAnimationFinishedCallback"    # Landroid/os/IRemoteCallback;
    .param p4, "scaleUp"    # Z

    .prologue
    .line 4129
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4130
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumb([Landroid/view/AppTransitionAnimationSpec;Landroid/os/IRemoteCallback;Landroid/os/IRemoteCallback;Z)V

    .line 4132
    invoke-virtual {p0, p1, p4}, Lcom/android/server/wm/WindowManagerService;->prolongAnimationsFromSpecs([Landroid/view/AppTransitionAnimationSpec;Z)V
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_d

    monitor-exit v1

    .line 4128
    return-void

    .line 4129
    :catchall_d
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V
    .registers 6
    .param p1, "specsFuture"    # Landroid/view/IAppTransitionAnimationSpecsFuture;
    .param p2, "callback"    # Landroid/os/IRemoteCallback;
    .param p3, "scaleUp"    # Z

    .prologue
    .line 4169
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4170
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionMultiThumbFuture(Landroid/view/IAppTransitionAnimationSpecsFuture;Landroid/os/IRemoteCallback;Z)V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 4168
    return-void

    .line 4169
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public overridePendingAppTransitionScaleUp(IIII)V
    .registers 7
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    .prologue
    .line 4091
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4092
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionScaleUp(IIII)V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 4090
    return-void

    .line 4091
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    .registers 13
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "scaleUp"    # Z

    .prologue
    .line 4109
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 4110
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_f

    monitor-exit v6

    .line 4108
    return-void

    .line 4109
    :catchall_f
    move-exception v0

    monitor-exit v6

    throw v0
.end method

.method public overridePlayingAppAnimationsLw(Landroid/view/animation/Animation;)V
    .registers 3
    .param p1, "a"    # Landroid/view/animation/Animation;

    .prologue
    .line 5339
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayContent;->overridePlayingAppAnimationsLw(Landroid/view/animation/Animation;)V

    .line 5338
    return-void
.end method

.method public pauseKeyDispatching(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "_token"    # Landroid/os/IBinder;

    .prologue
    .line 8060
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 8061
    const-string/jumbo v2, "pauseKeyDispatching()"

    .line 8060
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 8062
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8065
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8066
    :try_start_18
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 8067
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_27

    .line 8068
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->pauseDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_27
    .catchall {:try_start_18 .. :try_end_27} :catchall_29

    :cond_27
    monitor-exit v2

    .line 8059
    return-void

    .line 8065
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_29
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method pauseRotationLocked()V
    .registers 2

    .prologue
    .line 6794
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    .line 6793
    return-void
.end method

.method public performBootTimeout()V
    .registers 4

    .prologue
    .line 5990
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5991
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_5
    .catchall {:try_start_3 .. :try_end_5} :catchall_1a

    if-eqz v0, :cond_9

    monitor-exit v1

    .line 5992
    return-void

    .line 5994
    :cond_9
    :try_start_9
    const-string/jumbo v0, "WindowManager"

    const-string/jumbo v2, "***** BOOT TIMEOUT: forcing display enabled"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5995
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z
    :try_end_15
    .catchall {:try_start_9 .. :try_end_15} :catchall_1a

    monitor-exit v1

    .line 5997
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 5989
    return-void

    .line 5990
    :catchall_1a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public performDeferredDestroyWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 8
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 3221
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3224
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_24

    .line 3225
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 3226
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_12

    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z
    :try_end_10
    .catchall {:try_start_8 .. :try_end_10} :catchall_21

    if-eqz v3, :cond_17

    :cond_12
    :try_start_12
    monitor-exit v4
    :try_end_13
    .catchall {:try_start_12 .. :try_end_13} :catchall_24

    .line 3233
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3227
    return-void

    .line 3230
    :cond_17
    :try_start_17
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->destroyDeferredSurfaceLocked()V
    :try_end_1c
    .catchall {:try_start_17 .. :try_end_1c} :catchall_21

    :try_start_1c
    monitor-exit v4
    :try_end_1d
    .catchall {:try_start_1c .. :try_end_1d} :catchall_24

    .line 3233
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3220
    return-void

    .line 3224
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_21
    move-exception v3

    :try_start_22
    monitor-exit v4

    throw v3
    :try_end_24
    .catchall {:try_start_22 .. :try_end_24} :catchall_24

    .line 3232
    :catchall_24
    move-exception v3

    .line 3233
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3232
    throw v3
.end method

.method public performEnableScreen()V
    .registers 14

    .prologue
    const/4 v12, 0x0

    .line 6058
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 6065
    :try_start_4
    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z
    :try_end_6
    .catchall {:try_start_4 .. :try_end_6} :catchall_a8

    if-eqz v7, :cond_a

    monitor-exit v8

    .line 6066
    return-void

    .line 6068
    :cond_a
    :try_start_a
    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v7, :cond_12

    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-eqz v7, :cond_1e

    .line 6073
    :cond_12
    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    if-nez v7, :cond_20

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkWaitingForWindowsLocked()Z
    :try_end_19
    .catchall {:try_start_a .. :try_end_19} :catchall_a8

    move-result v7

    if-eqz v7, :cond_20

    monitor-exit v8

    .line 6074
    return-void

    :cond_1e
    monitor-exit v8

    .line 6069
    return-void

    .line 6077
    :cond_20
    :try_start_20
    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    if-nez v7, :cond_4c

    .line 6079
    const-string/jumbo v7, "Stop bootanim"

    const-wide/16 v10, 0x20

    const/4 v9, 0x0

    invoke-static {v10, v11, v7, v9}, Landroid/os/Trace;->asyncTraceBegin(JLjava/lang/String;I)V
    :try_end_2d
    .catchall {:try_start_20 .. :try_end_2d} :catchall_a8

    .line 6081
    :try_start_2d
    const-string/jumbo v7, "SurfaceFlinger"

    invoke-static {v7}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v6

    .line 6082
    .local v6, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v6, :cond_49

    .line 6084
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v1

    .line 6085
    .local v1, "data":Landroid/os/Parcel;
    const-string/jumbo v7, "android.ui.ISurfaceComposer"

    invoke-virtual {v1, v7}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 6086
    const/4 v7, 0x1

    .line 6087
    const/4 v9, 0x0

    const/4 v10, 0x0

    .line 6086
    invoke-interface {v6, v7, v1, v9, v10}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 6088
    invoke-virtual {v1}, Landroid/os/Parcel;->recycle()V
    :try_end_49
    .catch Landroid/os/RemoteException; {:try_start_2d .. :try_end_49} :catch_9d
    .catchall {:try_start_2d .. :try_end_49} :catchall_a8

    .line 6093
    .end local v1    # "data":Landroid/os/Parcel;
    .end local v6    # "surfaceFlinger":Landroid/os/IBinder;
    :cond_49
    :goto_49
    const/4 v7, 0x1

    :try_start_4a
    iput-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mBootAnimationStopped:Z

    .line 6096
    :cond_4c
    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    if-nez v7, :cond_56

    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->checkBootAnimationCompleteLocked()Z

    move-result v7

    if-eqz v7, :cond_ab

    .line 6101
    :cond_56
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v10

    const/16 v7, 0x791f

    invoke-static {v7, v10, v11}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 6102
    const-string/jumbo v7, "Stop bootanim"

    const-wide/16 v10, 0x20

    const/4 v9, 0x0

    invoke-static {v10, v11, v7, v9}, Landroid/os/Trace;->asyncTraceEnd(JLjava/lang/String;I)V

    .line 6103
    const/4 v7, 0x1

    iput-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 6107
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    iget-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    invoke-virtual {v7, v9}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_72
    .catchall {:try_start_4a .. :try_end_72} :catchall_a8

    monitor-exit v8

    .line 6111
    :try_start_73
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v7}, Landroid/app/IActivityManager;->bootAnimationComplete()V
    :try_end_78
    .catch Landroid/os/RemoteException; {:try_start_73 .. :try_end_78} :catch_ad

    .line 6115
    :goto_78
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v7}, Landroid/view/WindowManagerPolicy;->enableScreenAfterBoot()V

    .line 6119
    const-class v7, Lcom/android/server/lights/LightsManager;

    invoke-static {v7}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/lights/LightsManager;

    .line 6120
    .local v4, "lm":Lcom/android/server/lights/LightsManager;
    const/4 v7, 0x3

    invoke-virtual {v4, v7}, Lcom/android/server/lights/LightsManager;->getLight(I)Lcom/android/server/lights/Light;

    move-result-object v0

    .line 6121
    .local v0, "batteryLight":Lcom/android/server/lights/Light;
    const/4 v7, 0x4

    invoke-virtual {v4, v7}, Lcom/android/server/lights/LightsManager;->getLight(I)Lcom/android/server/lights/Light;

    move-result-object v5

    .line 6122
    .local v5, "notifLight":Lcom/android/server/lights/Light;
    if-eqz v0, :cond_94

    .line 6123
    invoke-virtual {v0}, Lcom/android/server/lights/Light;->turnOff()V

    .line 6125
    :cond_94
    if-eqz v5, :cond_99

    .line 6126
    invoke-virtual {v5}, Lcom/android/server/lights/Light;->turnOff()V

    .line 6129
    :cond_99
    invoke-virtual {p0, v12, v12}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 6057
    return-void

    .line 6090
    .end local v0    # "batteryLight":Lcom/android/server/lights/Light;
    .end local v4    # "lm":Lcom/android/server/lights/LightsManager;
    .end local v5    # "notifLight":Lcom/android/server/lights/Light;
    :catch_9d
    move-exception v3

    .line 6091
    .local v3, "ex":Landroid/os/RemoteException;
    :try_start_9e
    const-string/jumbo v7, "WindowManager"

    const-string/jumbo v9, "Boot completed: SurfaceFlinger is dead!"

    invoke-static {v7, v9}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_a7
    .catchall {:try_start_9e .. :try_end_a7} :catchall_a8

    goto :goto_49

    .line 6058
    .end local v3    # "ex":Landroid/os/RemoteException;
    :catchall_a8
    move-exception v7

    monitor-exit v8

    throw v7

    :cond_ab
    monitor-exit v8

    .line 6098
    return-void

    .line 6112
    :catch_ad
    move-exception v2

    .local v2, "e":Landroid/os/RemoteException;
    goto :goto_78
.end method

.method public pokeDrawLock(Lcom/android/server/wm/Session;Landroid/os/IBinder;)V
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "token"    # Landroid/os/IBinder;

    .prologue
    .line 2779
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 2780
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 2781
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_f

    .line 2782
    iget-wide v4, p0, Lcom/android/server/wm/WindowManagerService;->mDrawLockTimeoutMillis:J

    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowState;->pokeDrawLockLw(J)V
    :try_end_f
    .catchall {:try_start_4 .. :try_end_f} :catchall_11

    :cond_f
    monitor-exit v2

    .line 2778
    return-void

    .line 2779
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_11
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public positionTaskInStack(IIILandroid/graphics/Rect;Landroid/content/res/Configuration;)V
    .registers 11
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "position"    # I
    .param p4, "bounds"    # Landroid/graphics/Rect;
    .param p5, "config"    # Landroid/content/res/Configuration;

    .prologue
    .line 5381
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 5384
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/Task;
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_2c

    .line 5385
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_f

    monitor-exit v4

    .line 5388
    return-void

    .line 5390
    :cond_f
    :try_start_f
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;
    :try_end_17
    .catchall {:try_start_f .. :try_end_17} :catchall_2c

    .line 5391
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1b

    monitor-exit v4

    .line 5394
    return-void

    .line 5396
    :cond_1b
    :try_start_1b
    invoke-virtual {v2, v1, p3, p4, p5}, Lcom/android/server/wm/Task;->positionTaskInStack(Lcom/android/server/wm/TaskStack;ILandroid/graphics/Rect;Landroid/content/res/Configuration;)V

    .line 5397
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5398
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5399
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_2a
    .catchall {:try_start_1b .. :try_end_2a} :catchall_2c

    monitor-exit v4

    .line 5380
    return-void

    .line 5381
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_2c
    move-exception v3

    monitor-exit v4

    throw v3
.end method

.method public prepareAppTransition(IZ)V
    .registers 6
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z

    .prologue
    .line 4061
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 4062
    const-string/jumbo v2, "prepareAppTransition()"

    .line 4061
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 4063
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4065
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4066
    :try_start_18
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1, p1, p2}, Lcom/android/server/wm/AppTransition;->prepareAppTransitionLocked(IZ)Z

    move-result v0

    .line 4068
    .local v0, "prepared":Z
    if-eqz v0, :cond_29

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v1

    if-eqz v1, :cond_29

    .line 4069
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z
    :try_end_29
    .catchall {:try_start_18 .. :try_end_29} :catchall_2b

    :cond_29
    monitor-exit v2

    .line 4060
    return-void

    .line 4065
    .end local v0    # "prepared":Z
    :catchall_2b
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method prepareDragSurface(Landroid/view/IWindow;Landroid/view/SurfaceSession;IIILandroid/view/Surface;)Landroid/os/IBinder;
    .registers 27
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "session"    # Landroid/view/SurfaceSession;
    .param p3, "flags"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "outSurface"    # Landroid/view/Surface;

    .prologue
    .line 7996
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v10

    .line 7997
    .local v10, "callerPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    .line 7998
    .local v11, "callerUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 7999
    .local v16, "origId":J
    const/16 v18, 0x0

    .line 8002
    .local v18, "token":Landroid/os/IBinder;
    :try_start_e
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v19, v0

    monitor-enter v19
    :try_end_15
    .catchall {:try_start_e .. :try_end_15} :catchall_f9

    .line 8004
    :try_start_15
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    if-nez v3, :cond_a6

    .line 8006
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v13

    .line 8007
    .local v13, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v13}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v12

    .line 8009
    .local v12, "display":Landroid/view/Display;
    new-instance v2, Landroid/view/SurfaceControl;

    const-string/jumbo v4, "drag surface"

    .line 8010
    const/4 v7, -0x3

    const/4 v8, 0x4

    move-object/from16 v3, p2

    move/from16 v5, p4

    move/from16 v6, p5

    .line 8009
    invoke-direct/range {v2 .. v8}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    .line 8011
    .local v2, "surface":Landroid/view/SurfaceControl;
    invoke-virtual {v12}, Landroid/view/Display;->getLayerStack()I

    move-result v3

    invoke-virtual {v2, v3}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    .line 8012
    const/high16 v9, 0x3f800000    # 1.0f

    .line 8013
    .local v9, "alpha":F
    move/from16 v0, p3

    and-int/lit16 v3, v0, 0x200

    if-nez v3, :cond_45

    .line 8014
    const v9, 0x3f350481    # 0.7071f

    .line 8016
    :cond_45
    invoke-virtual {v2, v9}, Landroid/view/SurfaceControl;->setAlpha(F)V

    .line 8020
    move-object/from16 v0, p6

    invoke-virtual {v0, v2}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    .line 8021
    invoke-interface/range {p1 .. p1}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    .line 8022
    .local v8, "winBinder":Landroid/os/IBinder;
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V
    :try_end_56
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_15 .. :try_end_56} :catch_b2
    .catchall {:try_start_15 .. :try_end_56} :catchall_fd

    .line 8023
    .local v5, "token":Landroid/os/IBinder;
    :try_start_56
    new-instance v3, Lcom/android/server/wm/DragState;

    .end local v18    # "token":Landroid/os/IBinder;
    move-object/from16 v4, p0

    move-object v6, v2

    move/from16 v7, p3

    invoke-direct/range {v3 .. v8}, Lcom/android/server/wm/DragState;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;Landroid/view/SurfaceControl;ILandroid/os/IBinder;)V

    move-object/from16 v0, p0

    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    .line 8024
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    iput v10, v3, Lcom/android/server/wm/DragState;->mPid:I

    .line 8025
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    iput v11, v3, Lcom/android/server/wm/DragState;->mUid:I

    .line 8026
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    iput v9, v3, Lcom/android/server/wm/DragState;->mOriginalAlpha:F

    .line 8027
    new-instance v18, Landroid/os/Binder;

    invoke-direct/range {v18 .. v18}, Landroid/os/Binder;-><init>()V

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    move-object/from16 v0, v18

    iput-object v0, v3, Lcom/android/server/wm/DragState;->mToken:Landroid/os/IBinder;
    :try_end_83
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_56 .. :try_end_83} :catch_101
    .catchall {:try_start_56 .. :try_end_83} :catchall_f1

    .line 8030
    .end local v5    # "token":Landroid/os/IBinder;
    .local v18, "token":Landroid/os/IBinder;
    :try_start_83
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x14

    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 8031
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x14

    invoke-virtual {v3, v4, v8}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v15

    .line 8032
    .local v15, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v6, 0x1388

    invoke-virtual {v3, v15, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_9f
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_83 .. :try_end_9f} :catch_b2
    .catchall {:try_start_83 .. :try_end_9f} :catchall_fd

    move-object/from16 v5, v18

    .end local v2    # "surface":Landroid/view/SurfaceControl;
    .end local v8    # "winBinder":Landroid/os/IBinder;
    .end local v9    # "alpha":F
    .end local v12    # "display":Landroid/view/Display;
    .end local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v15    # "msg":Landroid/os/Message;
    .end local v18    # "token":Landroid/os/IBinder;
    .restart local v5    # "token":Landroid/os/IBinder;
    :cond_a1
    :goto_a1
    :try_start_a1
    monitor-exit v19
    :try_end_a2
    .catchall {:try_start_a1 .. :try_end_a2} :catchall_f4

    .line 8045
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8048
    return-object v5

    .line 8034
    .end local v5    # "token":Landroid/os/IBinder;
    .local v18, "token":Landroid/os/IBinder;
    :cond_a6
    :try_start_a6
    const-string/jumbo v3, "WindowManager"

    const-string/jumbo v4, "Drag already in progress"

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_af
    .catch Landroid/view/Surface$OutOfResourcesException; {:try_start_a6 .. :try_end_af} :catch_b2
    .catchall {:try_start_a6 .. :try_end_af} :catchall_fd

    move-object/from16 v5, v18

    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_a1

    .line 8036
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v18    # "token":Landroid/os/IBinder;
    :catch_b2
    move-exception v14

    .local v14, "e":Landroid/view/Surface$OutOfResourcesException;
    move-object/from16 v5, v18

    .line 8037
    .restart local v5    # "token":Landroid/os/IBinder;
    :goto_b5
    :try_start_b5
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Can\'t allocate drag surface w="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string/jumbo v6, " h="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p5

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, v14}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8038
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    if-eqz v3, :cond_a1

    .line 8039
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    invoke-virtual {v3}, Lcom/android/server/wm/DragState;->reset()V

    .line 8040
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;
    :try_end_f0
    .catchall {:try_start_b5 .. :try_end_f0} :catchall_f1

    goto :goto_a1

    .line 8002
    .end local v14    # "e":Landroid/view/Surface$OutOfResourcesException;
    :catchall_f1
    move-exception v3

    :goto_f2
    :try_start_f2
    monitor-exit v19

    throw v3
    :try_end_f4
    .catchall {:try_start_f2 .. :try_end_f4} :catchall_f4

    .line 8044
    :catchall_f4
    move-exception v3

    .line 8045
    :goto_f5
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8044
    throw v3

    .end local v5    # "token":Landroid/os/IBinder;
    .restart local v18    # "token":Landroid/os/IBinder;
    :catchall_f9
    move-exception v3

    move-object/from16 v5, v18

    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_f5

    .line 8002
    .end local v5    # "token":Landroid/os/IBinder;
    .end local v18    # "token":Landroid/os/IBinder;
    :catchall_fd
    move-exception v3

    move-object/from16 v5, v18

    .restart local v5    # "token":Landroid/os/IBinder;
    goto :goto_f2

    .line 8036
    .restart local v2    # "surface":Landroid/view/SurfaceControl;
    .restart local v8    # "winBinder":Landroid/os/IBinder;
    .restart local v9    # "alpha":F
    .restart local v12    # "display":Landroid/view/Display;
    .restart local v13    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_101
    move-exception v14

    .restart local v14    # "e":Landroid/view/Surface$OutOfResourcesException;
    goto :goto_b5
.end method

.method public prepareFreezingTaskBounds(I)V
    .registers 7
    .param p1, "stackId"    # I

    .prologue
    .line 5369
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5370
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 5371
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_31

    .line 5372
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "prepareFreezingTaskBounds: stackId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 5373
    const-string/jumbo v4, " not found."

    .line 5372
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_2e
    .catchall {:try_start_3 .. :try_end_2e} :catchall_2e

    .line 5369
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_2e
    move-exception v1

    monitor-exit v2

    throw v1

    .line 5375
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_31
    :try_start_31
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->prepareFreezingTaskBounds()V
    :try_end_34
    .catchall {:try_start_31 .. :try_end_34} :catchall_2e

    monitor-exit v2

    .line 5368
    return-void
.end method

.method prolongAnimationsFromSpecs([Landroid/view/AppTransitionAnimationSpec;Z)V
    .registers 12
    .param p1, "specs"    # [Landroid/view/AppTransitionAnimationSpec;
    .param p2, "scaleUp"    # Z

    .prologue
    const/4 v8, 0x0

    const/4 v7, -0x1

    .line 4141
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    invoke-virtual {v5}, Landroid/util/SparseIntArray;->clear()V

    .line 4142
    array-length v5, p1

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_a
    if-ltz v1, :cond_18

    .line 4143
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    aget-object v6, p1, v1

    iget v6, v6, Landroid/view/AppTransitionAnimationSpec;->taskId:I

    invoke-virtual {v5, v6, v8}, Landroid/util/SparseIntArray;->put(II)V

    .line 4142
    add-int/lit8 v1, v1, -0x1

    goto :goto_a

    .line 4145
    :cond_18
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v5

    invoke-interface {v5}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v4

    .local v4, "win$iterator":Ljava/util/Iterator;
    :cond_22
    :goto_22
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_57

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 4146
    .local v3, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v2

    .line 4147
    .local v2, "task":Lcom/android/server/wm/Task;
    if-eqz v2, :cond_22

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mTmpTaskIds:Landroid/util/SparseIntArray;

    iget v6, v2, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-virtual {v5, v6, v7}, Landroid/util/SparseIntArray;->get(II)I

    move-result v5

    if-eq v5, v7, :cond_22

    .line 4148
    invoke-virtual {v2}, Lcom/android/server/wm/Task;->inFreeformWorkspace()Z

    move-result v5

    .line 4147
    if-eqz v5, :cond_22

    .line 4149
    iget-object v0, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 4150
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_22

    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    if-eqz v5, :cond_22

    .line 4151
    iget-object v6, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    if-eqz p2, :cond_55

    .line 4152
    const/4 v5, 0x2

    .line 4151
    :goto_51
    invoke-virtual {v6, v5}, Lcom/android/server/wm/AppWindowAnimator;->startProlongAnimation(I)V

    goto :goto_22

    .line 4152
    :cond_55
    const/4 v5, 0x1

    goto :goto_51

    .line 4137
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_57
    return-void
.end method

.method public reboot(Z)V
    .registers 4
    .param p1, "confirm"    # Z

    .prologue
    .line 5860
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "userrequested"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->reboot(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 5859
    return-void
.end method

.method public rebootSafeMode(Z)V
    .registers 3
    .param p1, "confirm"    # Z

    .prologue
    .line 5866
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Z)V

    .line 5865
    return-void
.end method

.method final rebuildAppWindowListLocked()V
    .registers 2

    .prologue
    .line 9485
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9484
    return-void
.end method

.method reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    .registers 27
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p2, "operation"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    .prologue
    .line 9851
    move-object/from16 v0, p1

    iget-object v15, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    .line 9852
    .local v15, "surfaceController":Lcom/android/server/wm/WindowSurfaceController;
    const/4 v10, 0x0

    .line 9853
    .local v10, "leakedSurface":Z
    const/4 v9, 0x0

    .line 9855
    .local v9, "killedApps":Z
    const/16 v20, 0x3

    move/from16 v0, v20

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v20, v0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->toString()Ljava/lang/String;

    move-result-object v21

    const/16 v22, 0x0

    aput-object v21, v20, v22

    .line 9856
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v21, v0

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v21

    const/16 v22, 0x1

    aput-object v21, v20, v22

    const/16 v21, 0x2

    aput-object p2, v20, v21

    .line 9855
    const/16 v21, 0x7918

    move/from16 v0, v21

    move-object/from16 v1, v20

    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 9858
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 9863
    .local v4, "callingIdentity":J
    :try_start_41
    const-string/jumbo v20, "WindowManager"

    const-string/jumbo v21, "Out of memory for surface!  Looking for leaks..."

    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9864
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v20, v0

    invoke-virtual/range {v20 .. v20}, Landroid/util/SparseArray;->size()I

    move-result v11

    .line 9865
    .local v11, "numDisplays":I
    const/4 v6, 0x0

    .local v6, "displayNdx":I
    :goto_55
    if-ge v6, v11, :cond_190

    .line 9866
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/wm/DisplayContent;

    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v17

    .line 9867
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    move-result v12

    .line 9868
    .local v12, "numWindows":I
    const/16 v16, 0x0

    .local v16, "winNdx":I
    :goto_6f
    move/from16 v0, v16

    if-ge v0, v12, :cond_18c

    .line 9869
    move-object/from16 v0, v17

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 9870
    .local v18, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v19, v0

    .line 9871
    .local v19, "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move-object/from16 v20, v0

    if-nez v20, :cond_8e

    .line 9868
    :cond_8b
    :goto_8b
    add-int/lit8 v16, v16, 0x1

    goto :goto_6f

    .line 9874
    :cond_8e
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mSessions:Landroid/util/ArraySet;

    move-object/from16 v20, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v21, v0

    invoke-virtual/range {v20 .. v21}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v20

    if-nez v20, :cond_121

    .line 9875
    const-string/jumbo v20, "WindowManager"

    new-instance v21, Ljava/lang/StringBuilder;

    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v22, "LEAKED SURFACE (session doesn\'t exist): "

    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    move-object/from16 v0, v21

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9876
    const-string/jumbo v22, " surface="

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9876
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move-object/from16 v22, v0

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9877
    const-string/jumbo v22, " token="

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9877
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v22, v0

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9878
    const-string/jumbo v22, " pid="

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9878
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v22, v0

    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v22, v0

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9879
    const-string/jumbo v22, " uid="

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9879
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v22, v0

    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/Session;->mUid:I

    move/from16 v22, v0

    .line 9875
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9880
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    .line 9881
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9882
    const/4 v10, 0x1

    goto/16 :goto_8b

    .line 9883
    :cond_121
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    if-eqz v20, :cond_8b

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move/from16 v20, v0

    if-eqz v20, :cond_8b

    .line 9884
    const-string/jumbo v20, "WindowManager"

    new-instance v21, Ljava/lang/StringBuilder;

    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v22, "LEAKED SURFACE (app token hidden): "

    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    move-object/from16 v0, v21

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9885
    const-string/jumbo v22, " surface="

    .line 9884
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9885
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move-object/from16 v22, v0

    .line 9884
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9886
    const-string/jumbo v22, " token="

    .line 9884
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9886
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v22, v0

    .line 9884
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9887
    const-string/jumbo v22, " saved="

    .line 9884
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v21

    .line 9887
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->hasSavedSurface()Z

    move-result v22

    .line 9884
    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v21

    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v21

    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9889
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    .line 9890
    const/4 v10, 0x1

    goto/16 :goto_8b

    .line 9865
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :cond_18c
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_55

    .line 9895
    .end local v12    # "numWindows":I
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_190
    if-nez v10, :cond_248

    .line 9896
    const-string/jumbo v20, "WindowManager"

    const-string/jumbo v21, "No leaked surfaces; killing applicatons!"

    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9897
    new-instance v13, Landroid/util/SparseIntArray;

    invoke-direct {v13}, Landroid/util/SparseIntArray;-><init>()V

    .line 9898
    .local v13, "pidCandidates":Landroid/util/SparseIntArray;
    const/4 v6, 0x0

    :goto_1a1
    if-ge v6, v11, :cond_248

    .line 9899
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/wm/DisplayContent;

    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v17

    .line 9900
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    move-result v12

    .line 9901
    .restart local v12    # "numWindows":I
    const/16 v16, 0x0

    .restart local v16    # "winNdx":I
    :goto_1bb
    move/from16 v0, v16

    if-ge v0, v12, :cond_20f

    .line 9902
    move-object/from16 v0, v17

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 9903
    .restart local v18    # "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v20

    if-eqz v20, :cond_1dc

    .line 9901
    :cond_1d9
    :goto_1d9
    add-int/lit8 v16, v16, 0x1

    goto :goto_1bb

    .line 9906
    :cond_1dc
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v19, v0

    .line 9907
    .restart local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move-object/from16 v20, v0

    if-eqz v20, :cond_1d9

    .line 9908
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v20, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    invoke-virtual {v13, v0, v1}, Landroid/util/SparseIntArray;->append(II)V
    :try_end_209
    .catchall {:try_start_41 .. :try_end_209} :catchall_20a

    goto :goto_1d9

    .line 9942
    .end local v6    # "displayNdx":I
    .end local v11    # "numDisplays":I
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    .end local v18    # "ws":Lcom/android/server/wm/WindowState;
    .end local v19    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_20a
    move-exception v20

    .line 9943
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9942
    throw v20

    .line 9911
    .restart local v6    # "displayNdx":I
    .restart local v11    # "numDisplays":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_20f
    :try_start_20f
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    move-result v20

    if-lez v20, :cond_244

    .line 9912
    invoke-virtual {v13}, Landroid/util/SparseIntArray;->size()I

    move-result v20

    move/from16 v0, v20

    new-array v14, v0, [I

    .line 9913
    .local v14, "pids":[I
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_21e
    array-length v0, v14

    move/from16 v20, v0

    move/from16 v0, v20

    if-ge v8, v0, :cond_22e

    .line 9914
    invoke-virtual {v13, v8}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v20

    aput v20, v14, v8
    :try_end_22b
    .catchall {:try_start_20f .. :try_end_22b} :catchall_20a

    .line 9913
    add-int/lit8 v8, v8, 0x1

    goto :goto_21e

    .line 9917
    :cond_22e
    :try_start_22e
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    move-object/from16 v20, v0

    const-string/jumbo v21, "Free memory"

    move-object/from16 v0, v20

    move-object/from16 v1, v21

    move/from16 v2, p3

    invoke-interface {v0, v14, v1, v2}, Landroid/app/IActivityManager;->killPids([ILjava/lang/String;Z)Z
    :try_end_240
    .catch Landroid/os/RemoteException; {:try_start_22e .. :try_end_240} :catch_286
    .catchall {:try_start_22e .. :try_end_240} :catchall_20a

    move-result v20

    if-eqz v20, :cond_244

    .line 9918
    const/4 v9, 0x1

    .line 9898
    .end local v8    # "i":I
    .end local v14    # "pids":[I
    :cond_244
    :goto_244
    add-int/lit8 v6, v6, 0x1

    goto/16 :goto_1a1

    .line 9926
    .end local v12    # "numWindows":I
    .end local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v16    # "winNdx":I
    .end local v17    # "windows":Lcom/android/server/wm/WindowList;
    :cond_248
    if-nez v10, :cond_24c

    if-eqz v9, :cond_27c

    .line 9929
    :cond_24c
    :try_start_24c
    const-string/jumbo v20, "WindowManager"

    const-string/jumbo v21, "Looks like we have reclaimed some memory, clearing surface for retry."

    invoke-static/range {v20 .. v21}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9930
    if-eqz v15, :cond_26d

    .line 9933
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowStateAnimator;->destroySurface()V

    .line 9934
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_26d
    .catchall {:try_start_24c .. :try_end_26d} :catchall_20a

    .line 9938
    :cond_26d
    :try_start_26d
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v20, v0

    invoke-interface/range {v20 .. v20}, Landroid/view/IWindow;->dispatchGetNewSurface()V
    :try_end_27c
    .catch Landroid/os/RemoteException; {:try_start_26d .. :try_end_27c} :catch_284
    .catchall {:try_start_26d .. :try_end_27c} :catchall_20a

    .line 9943
    :cond_27c
    :goto_27c
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9946
    if-nez v10, :cond_282

    .end local v9    # "killedApps":Z
    :goto_281
    return v9

    .restart local v9    # "killedApps":Z
    :cond_282
    const/4 v9, 0x1

    goto :goto_281

    .line 9939
    :catch_284
    move-exception v7

    .local v7, "e":Landroid/os/RemoteException;
    goto :goto_27c

    .line 9920
    .end local v7    # "e":Landroid/os/RemoteException;
    .restart local v8    # "i":I
    .restart local v12    # "numWindows":I
    .restart local v13    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v14    # "pids":[I
    .restart local v16    # "winNdx":I
    .restart local v17    # "windows":Lcom/android/server/wm/WindowList;
    :catch_286
    move-exception v7

    .restart local v7    # "e":Landroid/os/RemoteException;
    goto :goto_244
.end method

.method public reenableKeyguard(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 5570
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 5572
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5575
    :cond_14
    if-nez p1, :cond_1f

    .line 5576
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "token == null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5579
    :cond_1f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    .line 5580
    const/4 v2, 0x2

    .line 5579
    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    .line 5569
    return-void
.end method

.method public reevaluateStatusBarVisibility()V
    .registers 5

    .prologue
    .line 10392
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 10393
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    invoke-interface {v1, v3}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    move-result v0

    .line 10394
    .local v0, "visibility":I
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)Z

    move-result v1

    if-eqz v1, :cond_16

    .line 10395
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_18

    :cond_16
    monitor-exit v2

    .line 10391
    return-void

    .line 10392
    .end local v0    # "visibility":I
    :catchall_18
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public registerDockedStackListener(Landroid/view/IDockedStackListener;)V
    .registers 4
    .param p1, "listener"    # Landroid/view/IDockedStackListener;

    .prologue
    .line 11390
    const-string/jumbo v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    .line 11391
    const-string/jumbo v1, "registerDockedStackListener()"

    .line 11390
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 11392
    return-void

    .line 11395
    :cond_d
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->registerDockedStackListener(Landroid/view/IDockedStackListener;)V

    .line 11389
    return-void
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    .prologue
    .line 5788
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->registerInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 5787
    return-void
.end method

.method public registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V
    .registers 7
    .param p1, "shortcutCode"    # J
    .param p3, "shortcutKeyReceiver"    # Lcom/android/internal/policy/IShortcutService;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 11567
    const-string/jumbo v0, "android.permission.REGISTER_WINDOW_MANAGER_LISTENERS"

    .line 11568
    const-string/jumbo v1, "registerShortcutKey"

    .line 11567
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 11569
    new-instance v0, Ljava/lang/SecurityException;

    .line 11570
    const-string/jumbo v1, "Requires REGISTER_WINDOW_MANAGER_LISTENERS permission"

    .line 11569
    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11572
    :cond_15
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->registerShortcutKey(JLcom/android/internal/policy/IShortcutService;)V

    .line 11566
    return-void
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/content/res/Configuration;Landroid/view/Surface;)I
    .registers 46
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "requestedWidth"    # I
    .param p6, "requestedHeight"    # I
    .param p7, "viewVisibility"    # I
    .param p8, "flags"    # I
    .param p9, "outFrame"    # Landroid/graphics/Rect;
    .param p10, "outOverscanInsets"    # Landroid/graphics/Rect;
    .param p11, "outContentInsets"    # Landroid/graphics/Rect;
    .param p12, "outVisibleInsets"    # Landroid/graphics/Rect;
    .param p13, "outStableInsets"    # Landroid/graphics/Rect;
    .param p14, "outOutsets"    # Landroid/graphics/Rect;
    .param p15, "outBackdropFrame"    # Landroid/graphics/Rect;
    .param p16, "outConfig"    # Landroid/content/res/Configuration;
    .param p17, "outSurface"    # Landroid/view/Surface;

    .prologue
    .line 2851
    const/4 v6, 0x0

    .line 2854
    .local v6, "result":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v5, "android.permission.STATUS_BAR"

    invoke-virtual {v4, v5}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v4

    if-nez v4, :cond_2b

    const/16 v16, 0x1

    .line 2857
    .local v16, "hasStatusBarPermission":Z
    :goto_10
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .line 2858
    .local v20, "origId":J
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v25, v0

    monitor-enter v25

    .line 2859
    const/4 v4, 0x0

    :try_start_1c
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    invoke-virtual {v0, v1, v2, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_25
    .catchall {:try_start_1c .. :try_end_25} :catchall_7e

    move-result-object v7

    .line 2860
    .local v7, "win":Lcom/android/server/wm/WindowState;
    if-nez v7, :cond_2e

    .line 2861
    const/4 v4, 0x0

    monitor-exit v25

    return v4

    .line 2854
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v16    # "hasStatusBarPermission":Z
    .end local v20    # "origId":J
    :cond_2b
    const/16 v16, 0x0

    .restart local v16    # "hasStatusBarPermission":Z
    goto :goto_10

    .line 2864
    .restart local v7    # "win":Lcom/android/server/wm/WindowState;
    .restart local v20    # "origId":J
    :cond_2e
    :try_start_2e
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 2865
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v4, 0x8

    move/from16 v0, p7

    if-eq v0, v4, :cond_3d

    .line 2866
    move/from16 v0, p5

    move/from16 v1, p6

    invoke-virtual {v7, v0, v1}, Lcom/android/server/wm/WindowState;->setRequestedSize(II)V

    .line 2869
    :cond_3d
    const/4 v9, 0x0

    .line 2870
    .local v9, "attrChanges":I
    const/4 v14, 0x0

    .line 2871
    .local v14, "flagChanges":I
    if-eqz p4, :cond_c6

    .line 2872
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    .line 2874
    iget v4, v7, Lcom/android/server/wm/WindowState;->mSeq:I

    move/from16 v0, p3

    if-ne v0, v4, :cond_6b

    .line 2875
    move-object/from16 v0, p4

    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I

    .line 2876
    move-object/from16 v0, p4

    iget v5, v0, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    .line 2875
    or-int v19, v4, v5

    .line 2877
    .local v19, "systemUiVisibility":I
    const/high16 v4, 0x3ff0000

    and-int v4, v4, v19

    if-eqz v4, :cond_67

    .line 2878
    if-nez v16, :cond_67

    .line 2879
    const v4, -0x3ff0001

    and-int v19, v19, v4

    .line 2882
    :cond_67
    move/from16 v0, v19

    iput v0, v7, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 2884
    .end local v19    # "systemUiVisibility":I
    :cond_6b
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    move-object/from16 v0, p4

    iget v5, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    if-eq v4, v5, :cond_81

    .line 2885
    new-instance v4, Ljava/lang/IllegalArgumentException;

    .line 2886
    const-string/jumbo v5, "Window type can not be changed after the window is added."

    .line 2885
    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_7e
    .catchall {:try_start_2e .. :try_end_7e} :catchall_7e

    .line 2858
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v9    # "attrChanges":I
    .end local v14    # "flagChanges":I
    :catchall_7e
    move-exception v4

    monitor-exit v25

    throw v4

    .line 2890
    .restart local v7    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v9    # "attrChanges":I
    .restart local v14    # "flagChanges":I
    :cond_81
    :try_start_81
    move-object/from16 v0, p4

    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v4, v4, 0x2000

    if-eqz v4, :cond_a9

    .line 2892
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->x:I

    move-object/from16 v0, p4

    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->x:I

    .line 2893
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->y:I

    move-object/from16 v0, p4

    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->y:I

    .line 2894
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->width:I

    move-object/from16 v0, p4

    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 2895
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->height:I

    move-object/from16 v0, p4

    iput v4, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    .line 2898
    :cond_a9
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v26, v0

    xor-int v14, v5, v26

    iput v14, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 2899
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v0, p4

    invoke-virtual {v4, v0}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    move-result v9

    .line 2900
    and-int/lit16 v4, v9, 0x4001

    if-eqz v4, :cond_c6

    .line 2902
    const/4 v4, 0x1

    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 2908
    :cond_c6
    and-int/lit8 v4, p8, 0x2

    if-eqz v4, :cond_265

    const/4 v4, 0x1

    :goto_cb
    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z

    .line 2910
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit16 v4, v4, 0x80

    if-eqz v4, :cond_268

    const/4 v4, 0x1

    .line 2909
    :goto_d6
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mEnforceSizeCompat:Z

    .line 2911
    and-int/lit16 v4, v9, 0x80

    if-eqz v4, :cond_e2

    .line 2912
    move-object/from16 v0, p4

    iget v4, v0, Landroid/view/WindowManager$LayoutParams;->alpha:F

    iput v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F

    .line 2914
    :cond_e2
    iget v4, v7, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    iget v5, v7, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    invoke-virtual {v7, v4, v5}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    .line 2916
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->left:I

    if-nez v4, :cond_f9

    .line 2917
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->top:I

    if-eqz v4, :cond_26b

    .line 2920
    :cond_f9
    :goto_f9
    const/4 v4, 0x0

    invoke-virtual {v8, v4}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    .line 2923
    :cond_fd
    const v4, 0x20008

    and-int/2addr v4, v14

    if-eqz v4, :cond_27d

    const/16 v17, 0x1

    .line 2924
    .local v17, "imMayMove":Z
    :goto_105
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v18

    .line 2925
    .local v18, "isDefaultDisplay":Z
    if-eqz v18, :cond_28b

    iget v4, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v0, p7

    if-ne v4, v0, :cond_115

    .line 2926
    and-int/lit8 v4, v14, 0x8

    if-eqz v4, :cond_281

    .line 2925
    :cond_115
    const/4 v15, 0x1

    .line 2929
    .local v15, "focusMayChange":Z
    :goto_116
    iget v4, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v0, p7

    if-eq v4, v0, :cond_292

    .line 2930
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v5, 0x100000

    and-int/2addr v4, v5

    if-eqz v4, :cond_28e

    const/16 v24, 0x1

    .line 2931
    .local v24, "wallpaperMayMove":Z
    :goto_127
    const/high16 v4, 0x100000

    and-int/2addr v4, v14

    if-eqz v4, :cond_296

    const/4 v4, 0x1

    :goto_12d
    or-int v24, v24, v4

    .line 2932
    .local v24, "wallpaperMayMove":Z
    and-int/lit16 v4, v14, 0x2000

    if-eqz v4, :cond_142

    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    if-eqz v4, :cond_142

    .line 2933
    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move-object/from16 v0, p0

    invoke-virtual {v0, v7}, Lcom/android/server/wm/WindowManagerService;->isSecureLocked(Lcom/android/server/wm/WindowState;)Z

    move-result v5

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowSurfaceController;->setSecure(Z)V

    .line 2936
    :cond_142
    const/4 v4, 0x1

    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    .line 2937
    const/4 v4, 0x1

    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mInRelayout:Z

    .line 2939
    iget v10, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    .line 2940
    .local v10, "oldVisibility":I
    move/from16 v0, p7

    iput v0, v7, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    .line 2947
    if-nez p7, :cond_15a

    .line 2948
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_299

    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eqz v4, :cond_299

    .line 2971
    :cond_15a
    const/4 v4, 0x0

    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 2972
    const/4 v4, 0x0

    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mEnteringAnimation:Z

    .line 2974
    if-eqz v10, :cond_315

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    move-result v23

    .line 2982
    :goto_166
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    move-result v4

    if-eqz v4, :cond_170

    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    if-eqz v4, :cond_319

    .line 3001
    .end local v15    # "focusMayChange":Z
    :cond_170
    :goto_170
    if-nez p7, :cond_32a

    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->hasSurface()Z

    move-result v4

    if-eqz v4, :cond_32a

    .line 3005
    iget-object v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    move-object/from16 v0, p17

    invoke-virtual {v4, v0}, Lcom/android/server/wm/WindowSurfaceController;->getSurface(Landroid/view/Surface;)V

    .line 3019
    :goto_17f
    if-eqz v15, :cond_18d

    .line 3021
    const/4 v4, 0x3

    .line 3022
    const/4 v5, 0x0

    .line 3021
    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v4

    if-eqz v4, :cond_18d

    .line 3023
    const/16 v17, 0x0

    .line 3030
    :cond_18d
    and-int/lit8 v4, v6, 0x2

    if-eqz v4, :cond_35c

    const/16 v22, 0x1

    .line 3031
    .local v22, "toBeDisplayed":Z
    :goto_193
    if-eqz v17, :cond_1ab

    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v4

    if-nez v4, :cond_1a0

    if-eqz v22, :cond_1ab

    .line 3037
    :cond_1a0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 3040
    :cond_1ab
    if-eqz v24, :cond_1b7

    .line 3041
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    iget v5, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v4, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 3045
    :cond_1b7
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 3046
    and-int/lit8 v4, p8, 0x1

    if-eqz v4, :cond_360

    const/4 v4, 0x1

    :goto_1bf
    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 3047
    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v11

    .line 3048
    .local v11, "configChanged":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 3049
    if-eqz v22, :cond_1ec

    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v4, :cond_1ec

    .line 3050
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v12

    .line 3051
    .local v12, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    .line 3052
    iget v5, v12, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v0, v12, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v26, v0

    const/16 v27, 0x0

    .line 3051
    move/from16 v0, v26

    move/from16 v1, v27

    invoke-virtual {v4, v7, v5, v0, v1}, Lcom/android/server/wm/WallpaperController;->updateWallpaperOffset(Lcom/android/server/wm/WindowState;IIZ)Z

    .line 3054
    .end local v12    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_1ec
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_1f5

    .line 3055
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 3057
    :cond_1f5
    iget-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z

    if-eqz v4, :cond_1fe

    .line 3058
    const/4 v4, 0x0

    iput-boolean v4, v8, Lcom/android/server/wm/WindowStateAnimator;->mReportSurfaceResized:Z

    .line 3059
    or-int/lit8 v6, v6, 0x20

    .line 3061
    :cond_1fe
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4, v7}, Landroid/view/WindowManagerPolicy;->isNavBarForcedShownLw(Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v4

    if-eqz v4, :cond_20a

    .line 3062
    or-int/lit8 v6, v6, 0x40

    .line 3064
    :cond_20a
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    move-result v4

    if-nez v4, :cond_213

    .line 3065
    const/4 v4, 0x0

    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mResizedWhileGone:Z

    .line 3067
    :cond_213
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    move-object/from16 v0, p9

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3068
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    move-object/from16 v0, p10

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3069
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    move-object/from16 v0, p11

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3070
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    move-object/from16 v0, p12

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3071
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    move-object/from16 v0, p13

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3072
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    move-object/from16 v0, p14

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3073
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v7, v4}, Lcom/android/server/wm/WindowState;->getBackdropFrame(Landroid/graphics/Rect;)Landroid/graphics/Rect;

    move-result-object v4

    move-object/from16 v0, p15

    invoke-virtual {v0, v4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3085
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    if-eqz v4, :cond_363

    const/4 v4, 0x1

    :goto_24f
    or-int/2addr v6, v4

    .line 3087
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v5, 0x1

    invoke-virtual {v4, v5}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 3092
    const/4 v4, 0x0

    iput-boolean v4, v7, Lcom/android/server/wm/WindowState;->mInRelayout:Z
    :try_end_25b
    .catchall {:try_start_81 .. :try_end_25b} :catchall_7e

    monitor-exit v25

    .line 3095
    if-eqz v11, :cond_261

    .line 3096
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    .line 3098
    :cond_261
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3099
    return v6

    .line 2908
    .end local v10    # "oldVisibility":I
    .end local v11    # "configChanged":Z
    .end local v17    # "imMayMove":Z
    .end local v18    # "isDefaultDisplay":Z
    .end local v22    # "toBeDisplayed":Z
    .end local v24    # "wallpaperMayMove":Z
    :cond_265
    const/4 v4, 0x0

    goto/16 :goto_cb

    .line 2910
    :cond_268
    const/4 v4, 0x0

    goto/16 :goto_d6

    .line 2918
    :cond_26b
    :try_start_26b
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->right:I

    if-nez v4, :cond_f9

    .line 2919
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-object v4, v4, Landroid/view/WindowManager$LayoutParams;->surfaceInsets:Landroid/graphics/Rect;

    iget v4, v4, Landroid/graphics/Rect;->bottom:I

    if-eqz v4, :cond_fd

    goto/16 :goto_f9

    .line 2923
    :cond_27d
    const/16 v17, 0x0

    .restart local v17    # "imMayMove":Z
    goto/16 :goto_105

    .line 2927
    .restart local v18    # "isDefaultDisplay":Z
    :cond_281
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    if-eqz v4, :cond_288

    const/4 v15, 0x0

    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_116

    .end local v15    # "focusMayChange":Z
    :cond_288
    const/4 v15, 0x1

    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_116

    .line 2925
    .end local v15    # "focusMayChange":Z
    :cond_28b
    const/4 v15, 0x0

    .restart local v15    # "focusMayChange":Z
    goto/16 :goto_116

    .line 2930
    :cond_28e
    const/16 v24, 0x0

    .local v24, "wallpaperMayMove":Z
    goto/16 :goto_127

    .line 2929
    .end local v24    # "wallpaperMayMove":Z
    :cond_292
    const/16 v24, 0x0

    .restart local v24    # "wallpaperMayMove":Z
    goto/16 :goto_127

    .line 2931
    :cond_296
    const/4 v4, 0x0

    goto/16 :goto_12d

    .restart local v10    # "oldVisibility":I
    .local v24, "wallpaperMayMove":Z
    :cond_299
    move-object/from16 v4, p0

    move-object/from16 v5, p16

    .line 2949
    invoke-direct/range {v4 .. v10}, Lcom/android/server/wm/WindowManagerService;->relayoutVisibleWindow(Landroid/content/res/Configuration;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;II)I
    :try_end_2a0
    .catchall {:try_start_26b .. :try_end_2a0} :catchall_7e

    move-result v6

    .line 2952
    :try_start_2a1
    move-object/from16 v0, p0

    move-object/from16 v1, p17

    invoke-direct {v0, v1, v6, v7, v8}, Lcom/android/server/wm/WindowManagerService;->createSurfaceControl(Landroid/view/Surface;ILcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;)I
    :try_end_2a8
    .catch Ljava/lang/Exception; {:try_start_2a1 .. :try_end_2a8} :catch_2c8
    .catchall {:try_start_2a1 .. :try_end_2a8} :catchall_7e

    move-result v6

    .line 2962
    and-int/lit8 v4, v6, 0x2

    if-eqz v4, :cond_2af

    .line 2963
    move/from16 v15, v18

    .line 2965
    .end local v15    # "focusMayChange":Z
    :cond_2af
    :try_start_2af
    iget-object v4, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v5, 0x7db

    if-ne v4, v5, :cond_2c3

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-nez v4, :cond_2c3

    .line 2966
    move-object/from16 v0, p0

    iput-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 2967
    const/16 v17, 0x1

    .line 2969
    :cond_2c3
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->adjustStartingWindowFlags()V

    goto/16 :goto_17f

    .line 2953
    .restart local v15    # "focusMayChange":Z
    :catch_2c8
    move-exception v13

    .line 2954
    .local v13, "e":Ljava/lang/Exception;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v5, 0x1

    invoke-virtual {v4, v5}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2956
    const-string/jumbo v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v26, "Exception thrown when creating surface for client "

    move-object/from16 v0, v26

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 2957
    const-string/jumbo v26, " ("

    .line 2956
    move-object/from16 v0, v26

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 2957
    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v26

    .line 2956
    move-object/from16 v0, v26

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 2957
    const-string/jumbo v26, ")"

    .line 2956
    move-object/from16 v0, v26

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, v13}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2959
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_312
    .catchall {:try_start_2af .. :try_end_312} :catchall_7e

    .line 2960
    const/4 v4, 0x0

    monitor-exit v25

    return v4

    .line 2974
    .end local v13    # "e":Ljava/lang/Exception;
    :cond_315
    const/16 v23, 0x0

    .local v23, "usingSavedSurfaceBeforeVisible":Z
    goto/16 :goto_166

    .line 2983
    .end local v23    # "usingSavedSurfaceBeforeVisible":Z
    :cond_319
    if-nez v23, :cond_170

    .line 2995
    :try_start_31b
    iget-boolean v4, v7, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    if-nez v4, :cond_327

    .line 2996
    move-object/from16 v0, p0

    move/from16 v1, v18

    invoke-direct {v0, v7, v8, v1, v15}, Lcom/android/server/wm/WindowManagerService;->tryStartExitingAnimation(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowStateAnimator;ZZ)Z
    :try_end_326
    .catchall {:try_start_31b .. :try_end_326} :catchall_7e

    move-result v15

    .line 2999
    .end local v15    # "focusMayChange":Z
    :cond_327
    const/4 v6, 0x4

    goto/16 :goto_170

    .line 3010
    :cond_32a
    :try_start_32a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "wmReleaseOutSurface_"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 3011
    iget-object v5, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v5}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v5

    .line 3010
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    const-wide/16 v26, 0x20

    move-wide/from16 v0, v26

    invoke-static {v0, v1, v4}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 3012
    invoke-virtual/range {p17 .. p17}, Landroid/view/Surface;->release()V
    :try_end_34e
    .catchall {:try_start_32a .. :try_end_34e} :catchall_355

    .line 3014
    const-wide/16 v4, 0x20

    :try_start_350
    invoke-static {v4, v5}, Landroid/os/Trace;->traceEnd(J)V

    goto/16 :goto_17f

    .line 3013
    :catchall_355
    move-exception v4

    .line 3014
    const-wide/16 v26, 0x20

    invoke-static/range {v26 .. v27}, Landroid/os/Trace;->traceEnd(J)V

    .line 3013
    throw v4
    :try_end_35c
    .catchall {:try_start_350 .. :try_end_35c} :catchall_7e

    .line 3030
    :cond_35c
    const/16 v22, 0x0

    .restart local v22    # "toBeDisplayed":Z
    goto/16 :goto_193

    .line 3046
    :cond_360
    const/4 v4, 0x0

    goto/16 :goto_1bf

    .line 3085
    .restart local v11    # "configChanged":Z
    :cond_363
    const/4 v4, 0x0

    goto/16 :goto_24f
.end method

.method public removeAppStartingWindow(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4415
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4416
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowToken;

    iget-object v0, v1, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    .line 4417
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_12

    monitor-exit v2

    .line 4414
    return-void

    .line 4415
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_12
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public removeAppToken(Landroid/os/IBinder;)V
    .registers 16
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4868
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    .line 4869
    const-string/jumbo v2, "removeAppToken()"

    .line 4868
    invoke-direct {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 4870
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4873
    :cond_15
    const/4 v1, 0x0

    .line 4874
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const/4 v12, 0x0

    .line 4875
    .local v12, "startingToken":Lcom/android/server/wm/AppWindowToken;
    const/4 v8, 0x0

    .line 4877
    .local v8, "delayed":Z
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 4878
    .local v10, "origId":J
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v13

    .line 4879
    :try_start_1f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowToken;

    .line 4880
    .local v7, "basewtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v7, :cond_b0

    iget-object v1, v7, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_b0

    .line 4883
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    .line 4882
    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 4883
    const/4 v4, -0x1

    const/4 v5, 0x1

    move-object v0, p0

    .line 4882
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    move-result v8

    .line 4884
    .local v8, "delayed":Z
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 4885
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 4886
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 4887
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_95

    .line 4888
    const/4 v8, 0x1

    .line 4899
    .end local v8    # "delayed":Z
    :cond_4c
    :goto_4c
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    iget-object v9, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 4900
    .local v9, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v8, :cond_5a

    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v0

    if-eqz v0, :cond_a4

    .line 4910
    :cond_5a
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    .line 4911
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v2, 0x0

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    .line 4912
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->removeAppFromTaskLocked()V

    .line 4915
    :goto_67
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->removed:Z

    .line 4916
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v0, :cond_6f

    .line 4917
    move-object v12, v1

    .line 4919
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_6f
    const/4 v0, 0x1

    const/4 v2, 0x1

    invoke-virtual {p0, v1, v0, v2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 4920
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-ne v0, v1, :cond_86

    .line 4922
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 4923
    const/4 v0, 0x0

    const/4 v2, 0x1

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 4924
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    .line 4930
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_86
    :goto_86
    if-nez v8, :cond_8d

    if-eqz v1, :cond_8d

    .line 4931
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 4935
    :cond_8d
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_90
    .catchall {:try_start_1f .. :try_end_90} :catchall_ad

    monitor-exit v13

    .line 4937
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4867
    return-void

    .line 4889
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_95
    :try_start_95
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v0

    if-eqz v0, :cond_4c

    .line 4890
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 4891
    const/4 v8, 0x1

    .local v8, "delayed":Z
    goto :goto_4c

    .line 4904
    .end local v8    # "delayed":Z
    .restart local v9    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_a4
    iget-object v0, v9, Lcom/android/server/wm/TaskStack;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->add(Ljava/lang/Object;)Z

    .line 4905
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z
    :try_end_ac
    .catchall {:try_start_95 .. :try_end_ac} :catchall_ad

    goto :goto_67

    .line 4878
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .end local v9    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_ad
    move-exception v0

    monitor-exit v13

    throw v0

    .line 4927
    .restart local v7    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .restart local v8    # "delayed":Z
    .restart local v12    # "startingToken":Lcom/android/server/wm/AppWindowToken;
    :cond_b0
    :try_start_b0
    const-string/jumbo v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Attempted to remove non-existing app token: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_ca
    .catchall {:try_start_b0 .. :try_end_ca} :catchall_ad

    goto :goto_86
.end method

.method removeInputConsumer()Z
    .registers 5

    .prologue
    const/4 v3, 0x1

    .line 10435
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10436
    :try_start_4
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    if-eqz v0, :cond_13

    .line 10437
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    .line 10438
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_11
    .catchall {:try_start_4 .. :try_end_11} :catchall_16

    monitor-exit v1

    .line 10439
    return v3

    .line 10441
    :cond_13
    const/4 v0, 0x0

    monitor-exit v1

    return v0

    .line 10435
    :catchall_16
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .registers 10
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .prologue
    .line 7091
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    .line 7092
    .local v4, "watcherBinder":Landroid/os/IBinder;
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 7093
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_8
    :try_start_8
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v1, v5, :cond_3b

    .line 7094
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 7095
    .local v3, "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v3, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    if-ne v4, v5, :cond_38

    .line 7096
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    .line 7097
    .local v2, "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 7098
    .local v0, "binder":Landroid/os/IBinder;
    if-eqz v0, :cond_36

    .line 7099
    iget-object v5, v2, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->deathRecipient:Landroid/os/IBinder$DeathRecipient;

    const/4 v7, 0x0

    invoke-interface {v0, v5, v7}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
    :try_end_36
    .catchall {:try_start_8 .. :try_end_36} :catchall_3d

    .line 7101
    :cond_36
    add-int/lit8 v1, v1, -0x1

    .line 7093
    .end local v0    # "binder":Landroid/os/IBinder;
    .end local v2    # "removed":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_38
    add-int/lit8 v1, v1, 0x1

    goto :goto_8

    .end local v3    # "rotationWatcher":Lcom/android/server/wm/WindowManagerService$RotationWatcher;
    :cond_3b
    monitor-exit v6

    .line 7090
    return-void

    .line 7092
    :catchall_3d
    move-exception v5

    monitor-exit v6

    throw v5
.end method

.method public removeStack(I)V
    .registers 4
    .param p1, "stackId"    # I

    .prologue
    .line 5240
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5241
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->remove(I)V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 5239
    return-void

    .line 5240
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public removeTask(I)V
    .registers 5
    .param p1, "taskId"    # I

    .prologue
    .line 5246
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5247
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_14

    .line 5248
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_f

    monitor-exit v2

    .line 5250
    return-void

    .line 5252
    :cond_f
    :try_start_f
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->removeLocked()V
    :try_end_12
    .catchall {:try_start_f .. :try_end_12} :catchall_14

    monitor-exit v2

    .line 5245
    return-void

    .line 5246
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_14
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public removeWallpaperInputConsumer()V
    .registers 4

    .prologue
    .line 10456
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10457
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    if-eqz v0, :cond_15

    .line 10458
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    invoke-virtual {v0}, Lcom/android/server/wm/InputConsumerImpl;->disposeChannelsLw()V

    .line 10459
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperInputConsumer:Lcom/android/server/wm/InputConsumerImpl;

    .line 10460
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_17

    :cond_15
    monitor-exit v1

    .line 10455
    return-void

    .line 10456
    :catchall_17
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 2394
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 2395
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_11

    move-result-object v0

    .line 2396
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_c

    monitor-exit v2

    .line 2397
    return-void

    .line 2399
    :cond_c
    :try_start_c
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    :try_end_f
    .catchall {:try_start_c .. :try_end_f} :catchall_11

    monitor-exit v2

    .line 2393
    return-void

    .line 2394
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_11
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .prologue
    .line 7462
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7463
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 7461
    return-void

    .line 7462
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V
    .registers 16
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v13, 0x1

    const/4 v12, 0x0

    const/4 v11, 0x0

    .line 2546
    iget-boolean v7, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-eqz v7, :cond_8

    .line 2550
    return-void

    .line 2553
    :cond_8
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v3, v7, -0x1

    .local v3, "i":I
    :goto_10
    if-ltz v3, :cond_45

    .line 2554
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 2555
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    const-string/jumbo v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Force-removing child win "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string/jumbo v9, " from container "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2556
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    .line 2553
    add-int/lit8 v3, v3, -0x1

    goto :goto_10

    .line 2559
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_45
    iput-boolean v13, p1, Lcom/android/server/wm/WindowState;->mRemoved:Z

    .line 2561
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-ne v7, p1, :cond_4e

    .line 2562
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 2571
    :cond_4e
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 2572
    .local v5, "type":I
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService;->excludeWindowTypeFromTapOutTask(I)Z

    move-result v7

    if-eqz v7, :cond_61

    .line 2573
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 2574
    .local v2, "displaycontent":Lcom/android/server/wm/DisplayContent;
    iget-object v7, v2, Lcom/android/server/wm/DisplayContent;->mTapExcludedWindows:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2576
    .end local v2    # "displaycontent":Lcom/android/server/wm/DisplayContent;
    :cond_61
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v7, p1}, Landroid/view/WindowManagerPolicy;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 2577
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->removeLocked()V

    .line 2580
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v8}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 2581
    iget v7, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v8, -0x1

    if-eq v7, v8, :cond_88

    .line 2582
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    iget v8, p1, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v9

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v7, v8, v9, v10}, Landroid/app/AppOpsManager;->finishOp(IILjava/lang/String;)V

    .line 2585
    :cond_88
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2586
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2587
    iput-boolean v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 2590
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v7, p1, :cond_106

    .line 2591
    iput-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 2596
    :cond_9a
    :goto_9a
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 2597
    .local v4, "token":Lcom/android/server/wm/WindowToken;
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2599
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 2600
    if-eqz v0, :cond_aa

    .line 2601
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 2606
    :cond_aa
    iget-object v7, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-nez v7, :cond_bd

    .line 2607
    iget-boolean v7, v4, Lcom/android/server/wm/WindowToken;->explicit:Z

    if-nez v7, :cond_114

    .line 2608
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    iget-object v8, v4, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 2615
    :cond_bd
    :goto_bd
    if-eqz v0, :cond_c6

    .line 2616
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-ne v7, p1, :cond_11c

    .line 2618
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 2632
    :cond_c6
    :goto_c6
    const/16 v7, 0x7dd

    if-ne v5, v7, :cond_13b

    .line 2633
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v7}, Lcom/android/server/wm/WallpaperController;->clearLastWallpaperTimeoutTime()V

    .line 2634
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v8, v8, 0x4

    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 2641
    :cond_d9
    :goto_d9
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 2642
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    if-eqz v6, :cond_100

    .line 2643
    invoke-virtual {v6, p1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 2644
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->isInLayout()Z

    move-result v7

    if-nez v7, :cond_100

    .line 2645
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 2646
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2647
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 2648
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_100

    .line 2649
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v7}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 2654
    :cond_100
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v7, v13}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2545
    return-void

    .line 2592
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "token":Lcom/android/server/wm/WindowToken;
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_106
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x7dc

    if-ne v7, v8, :cond_9a

    .line 2593
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_9a

    .line 2609
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "token":Lcom/android/server/wm/WindowToken;
    :cond_114
    if-eqz v0, :cond_bd

    .line 2610
    iput-boolean v12, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    .line 2611
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    goto :goto_bd

    .line 2620
    :cond_11c
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-nez v7, :cond_12b

    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v7, :cond_12b

    .line 2624
    iput-object v11, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    goto :goto_c6

    .line 2625
    :cond_12b
    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-ne v7, v13, :cond_c6

    iget-object v7, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    if-eqz v7, :cond_c6

    .line 2628
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V

    goto :goto_c6

    .line 2636
    :cond_13b
    iget-object v7, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v8, 0x100000

    and-int/2addr v7, v8

    if-eqz v7, :cond_d9

    .line 2637
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v8, v8, 0x4

    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto :goto_d9
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;)V
    .registers 3
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 2404
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 2403
    return-void
.end method

.method removeWindowLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 14
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "keepVisibleDeadWindow"    # Z

    .prologue
    .line 2408
    const/4 v9, 0x1

    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mWindowRemovalAllowed:Z

    .line 2412
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v10, 0x3

    if-ne v9, v10, :cond_2f

    const/4 v3, 0x1

    .line 2413
    .local v3, "startingWindow":Z
    :goto_b
    if-eqz v3, :cond_d

    .line 2423
    :cond_d
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 2425
    .local v4, "origId":J
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->disposeInputChannel()V

    .line 2442
    const/4 v7, 0x0

    .line 2446
    .local v7, "wasVisible":Z
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v9, :cond_be

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v9

    if-eqz v9, :cond_be

    .line 2447
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2448
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mWillReplaceWindow:Z

    if-eqz v9, :cond_31

    .line 2457
    const/4 v9, 0x1

    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 2458
    const/4 v9, 0x1

    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mReplacingRemoveRequested:Z

    .line 2459
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2460
    return-void

    .line 2412
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v3    # "startingWindow":Z
    .end local v4    # "origId":J
    .end local v7    # "wasVisible":Z
    :cond_2f
    const/4 v3, 0x0

    goto :goto_b

    .line 2463
    .restart local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v3    # "startingWindow":Z
    .restart local v4    # "origId":J
    .restart local v7    # "wasVisible":Z
    :cond_31
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isAnimatingWithSavedSurface()Z

    move-result v9

    if-eqz v9, :cond_3b

    iget-boolean v9, v0, Lcom/android/server/wm/AppWindowToken;->allDrawnExcludingSaved:Z

    if-eqz v9, :cond_5a

    .line 2479
    :cond_3b
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v7

    .line 2481
    .local v7, "wasVisible":Z
    if-eqz p2, :cond_61

    .line 2485
    const/4 v9, 0x1

    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAppDied:Z

    .line 2486
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2487
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 2491
    const/4 v9, 0x0

    invoke-virtual {p1, v9}, Lcom/android/server/wm/WindowState;->openInputChannel(Landroid/view/InputChannel;)V

    .line 2492
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v10, 0x1

    invoke-virtual {v9, v10}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2494
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2495
    return-void

    .line 2474
    .local v7, "wasVisible":Z
    :cond_5a
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V

    .line 2475
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2476
    return-void

    .line 2498
    .local v7, "wasVisible":Z
    :cond_61
    iget-object v8, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 2499
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    if-eqz v7, :cond_81

    .line 2500
    if-nez v3, :cond_b6

    const/4 v6, 0x2

    .line 2503
    .local v6, "transit":I
    :goto_68
    const/4 v9, 0x0

    invoke-virtual {v8, v6, v9}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v9

    if-eqz v9, :cond_72

    .line 2504
    const/4 v9, 0x1

    iput-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 2507
    :cond_72
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v9, :cond_81

    .line 2508
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v9

    if-nez v9, :cond_81

    .line 2509
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual {v9, p1, v6}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 2513
    .end local v6    # "transit":I
    :cond_81
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    move-result v9

    if-eqz v9, :cond_8d

    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->isDummyAnimation()Z

    move-result v9

    if-eqz v9, :cond_b8

    :cond_8d
    const/4 v1, 0x0

    .line 2514
    .local v1, "isAnimating":Z
    :goto_8e
    if-eqz v3, :cond_bc

    if-eqz v0, :cond_bc

    .line 2515
    iget-object v9, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    const/4 v10, 0x1

    if-ne v9, v10, :cond_ba

    const/4 v2, 0x1

    .line 2521
    .local v2, "lastWindowIsStartingWindow":Z
    :goto_9c
    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    move-result v9

    if-eqz v9, :cond_be

    iget-boolean v9, p1, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    if-eqz v9, :cond_be

    .line 2522
    if-eqz v2, :cond_aa

    .line 2521
    if-eqz v1, :cond_be

    .line 2526
    :cond_aa
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->setupWindowForRemoveOnExit(Lcom/android/server/wm/WindowState;)V

    .line 2527
    if-eqz v0, :cond_b2

    .line 2528
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 2530
    :cond_b2
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2531
    return-void

    .line 2500
    .end local v1    # "isAnimating":Z
    .end local v2    # "lastWindowIsStartingWindow":Z
    :cond_b6
    const/4 v6, 0x5

    goto :goto_68

    .line 2513
    :cond_b8
    const/4 v1, 0x1

    .restart local v1    # "isAnimating":Z
    goto :goto_8e

    .line 2515
    :cond_ba
    const/4 v2, 0x0

    .restart local v2    # "lastWindowIsStartingWindow":Z
    goto :goto_9c

    .line 2514
    .end local v2    # "lastWindowIsStartingWindow":Z
    :cond_bc
    const/4 v2, 0x0

    .restart local v2    # "lastWindowIsStartingWindow":Z
    goto :goto_9c

    .line 2535
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "isAnimating":Z
    .end local v2    # "lastWindowIsStartingWindow":Z
    .end local v7    # "wasVisible":Z
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_be
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/WindowState;)V

    .line 2538
    if-eqz v7, :cond_d1

    const/4 v9, 0x0

    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v9

    if-eqz v9, :cond_d1

    .line 2539
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v10, 0x12

    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 2541
    :cond_d1
    const/4 v9, 0x0

    const/4 v10, 0x1

    invoke-virtual {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 2542
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2407
    return-void
.end method

.method public removeWindowToken(Landroid/os/IBinder;)V
    .registers 16
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/16 v13, 0x7dd

    .line 3458
    const-string/jumbo v9, "android.permission.MANAGE_APP_TOKENS"

    .line 3459
    const-string/jumbo v10, "removeWindowToken()"

    .line 3458
    invoke-direct {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v9

    if-nez v9, :cond_17

    .line 3460
    new-instance v9, Ljava/lang/SecurityException;

    const-string/jumbo v10, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v9, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 3463
    :cond_17
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 3464
    .local v6, "origId":J
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v10

    .line 3465
    const/4 v3, 0x0

    .line 3466
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_1f
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v9, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowToken;

    .line 3467
    .local v8, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v8, :cond_ad

    .line 3468
    const/4 v2, 0x0

    .line 3469
    .local v2, "delayed":Z
    iget-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    if-nez v9, :cond_a3

    .line 3470
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 3471
    .local v0, "N":I
    const/4 v1, 0x0

    .line 3473
    .local v1, "changed":Z
    const/4 v4, 0x0

    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .local v4, "i":I
    :goto_36
    if-ge v4, v0, :cond_73

    .line 3474
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 3475
    .local v5, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3477
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowStateAnimator;->isAnimationSet()Z

    move-result v9

    if-eqz v9, :cond_4d

    .line 3478
    const/4 v2, 0x1

    .line 3481
    :cond_4d
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v9

    if-eqz v9, :cond_70

    .line 3482
    iget-object v9, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v11, 0x2

    .line 3483
    const/4 v12, 0x0

    .line 3482
    invoke-virtual {v9, v11, v12}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 3485
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v9, :cond_6a

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v9

    if-eqz v9, :cond_6a

    .line 3486
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    .line 3487
    const/4 v11, 0x2

    .line 3486
    invoke-virtual {v9, v5, v11}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 3489
    :cond_6a
    const/4 v1, 0x1

    .line 3490
    if-eqz v3, :cond_70

    .line 3491
    const/4 v9, 0x1

    iput-boolean v9, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3473
    :cond_70
    add-int/lit8 v4, v4, 0x1

    goto :goto_36

    .line 3496
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "win":Lcom/android/server/wm/WindowState;
    :cond_73
    const/4 v9, 0x1

    iput-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 3498
    if-eqz v1, :cond_82

    .line 3499
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 3500
    const/4 v9, 0x0

    .line 3501
    const/4 v11, 0x0

    .line 3500
    invoke-virtual {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 3504
    :cond_82
    if-eqz v2, :cond_96

    if-eqz v3, :cond_96

    .line 3505
    iget-object v9, v3, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3513
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v4    # "i":I
    :cond_8b
    :goto_8b
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v11, 0x1

    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V
    :try_end_91
    .catchall {:try_start_1f .. :try_end_91} :catchall_a0

    .end local v2    # "delayed":Z
    :goto_91
    monitor-exit v10

    .line 3518
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3457
    return-void

    .line 3506
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v2    # "delayed":Z
    .restart local v4    # "i":I
    :cond_96
    :try_start_96
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    if-ne v9, v13, :cond_8b

    .line 3507
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v9, v8}, Lcom/android/server/wm/WallpaperController;->removeWallpaperToken(Lcom/android/server/wm/WindowToken;)V
    :try_end_9f
    .catchall {:try_start_96 .. :try_end_9f} :catchall_a0

    goto :goto_8b

    .line 3464
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v2    # "delayed":Z
    .end local v4    # "i":I
    .end local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_a0
    move-exception v9

    monitor-exit v10

    throw v9

    .line 3509
    .restart local v2    # "delayed":Z
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_a3
    :try_start_a3
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    if-ne v9, v13, :cond_8b

    .line 3510
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v9, v8}, Lcom/android/server/wm/WallpaperController;->removeWallpaperToken(Lcom/android/server/wm/WindowToken;)V

    goto :goto_8b

    .line 3515
    .end local v2    # "delayed":Z
    :cond_ad
    const-string/jumbo v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v12, "Attempted to remove non-existing token: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_c7
    .catchall {:try_start_a3 .. :try_end_c7} :catchall_a0

    goto :goto_91
.end method

.method repositionChild(Lcom/android/server/wm/Session;Landroid/view/IWindow;IIIIJLandroid/graphics/Rect;)V
    .registers 21
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "left"    # I
    .param p4, "top"    # I
    .param p5, "right"    # I
    .param p6, "bottom"    # I
    .param p7, "frameNumber"    # J
    .param p9, "outFrame"    # Landroid/graphics/Rect;

    .prologue
    .line 2790
    const-string/jumbo v5, "repositionChild"

    const-wide/16 v6, 0x20

    invoke-static {v6, v7, v5}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 2791
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 2794
    .local v2, "origId":J
    :try_start_c
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6
    :try_end_f
    .catchall {:try_start_c .. :try_end_f} :catchall_41

    .line 2795
    const/4 v5, 0x0

    :try_start_10
    invoke-virtual {p0, p1, p2, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    :try_end_13
    .catchall {:try_start_10 .. :try_end_13} :catchall_3e

    move-result-object v4

    .line 2796
    .local v4, "win":Lcom/android/server/wm/WindowState;
    if-nez v4, :cond_20

    :try_start_16
    monitor-exit v6
    :try_end_17
    .catchall {:try_start_16 .. :try_end_17} :catchall_41

    .line 2840
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2841
    const-wide/16 v6, 0x20

    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    .line 2797
    return-void

    .line 2799
    :cond_20
    :try_start_20
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v5, :cond_4b

    .line 2800
    new-instance v5, Ljava/lang/IllegalArgumentException;

    .line 2801
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "repositionChild called but window is notattached to a parent win="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 2800
    invoke-direct {v5, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5
    :try_end_3e
    .catchall {:try_start_20 .. :try_end_3e} :catchall_3e

    .line 2794
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :catchall_3e
    move-exception v5

    :try_start_3f
    monitor-exit v6

    throw v5
    :try_end_41
    .catchall {:try_start_3f .. :try_end_41} :catchall_41

    .line 2839
    :catchall_41
    move-exception v5

    .line 2840
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2841
    const-wide/16 v6, 0x20

    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    .line 2839
    throw v5

    .line 2805
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_4b
    :try_start_4b
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iput p3, v5, Landroid/view/WindowManager$LayoutParams;->x:I

    .line 2806
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iput p4, v5, Landroid/view/WindowManager$LayoutParams;->y:I

    .line 2807
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    sub-int v7, p5, p3

    iput v7, v5, Landroid/view/WindowManager$LayoutParams;->width:I

    .line 2808
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    sub-int v7, p6, p4

    iput v7, v5, Landroid/view/WindowManager$LayoutParams;->height:I

    .line 2809
    iget v5, v4, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    iget v7, v4, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/wm/WindowState;->setWindowScale(II)V

    .line 2811
    iget-boolean v5, v4, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v5, :cond_8f

    .line 2816
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_6d
    .catchall {:try_start_4b .. :try_end_6d} :catchall_3e

    .line 2820
    :try_start_6d
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    iget-object v7, v4, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    invoke-virtual {v4, v5, v7}, Lcom/android/server/wm/WindowState;->applyGravityAndUpdateFrame(Landroid/graphics/Rect;Landroid/graphics/Rect;)V

    .line 2821
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowStateAnimator;->computeShownFrameLocked()V

    .line 2823
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v7, 0x0

    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowStateAnimator;->setSurfaceBoundariesLocked(Z)V

    .line 2825
    const-wide/16 v8, 0x0

    cmp-long v5, p7, v8

    if-lez v5, :cond_8c

    .line 2826
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-wide/from16 v0, p7

    invoke-virtual {v5, v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->deferTransactionUntilParentFrame(J)V
    :try_end_8c
    .catchall {:try_start_6d .. :try_end_8c} :catchall_9d

    .line 2830
    :cond_8c
    :try_start_8c
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 2837
    :cond_8f
    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    move-object/from16 p9, v0
    :try_end_93
    .catchall {:try_start_8c .. :try_end_93} :catchall_3e

    :try_start_93
    monitor-exit v6
    :try_end_94
    .catchall {:try_start_93 .. :try_end_94} :catchall_41

    .line 2840
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2841
    const-wide/16 v6, 0x20

    invoke-static {v6, v7}, Landroid/os/Trace;->traceEnd(J)V

    .line 2789
    return-void

    .line 2829
    :catchall_9d
    move-exception v5

    .line 2830
    :try_start_9e
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 2829
    throw v5
    :try_end_a2
    .catchall {:try_start_9e .. :try_end_a2} :catchall_3e
.end method

.method public requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    .registers 6
    .param p1, "receiver"    # Lcom/android/internal/os/IResultReceiver;
    .param p2, "deviceId"    # I

    .prologue
    .line 11402
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 11403
    .local v1, "focusedWindow":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_13

    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    if-eqz v2, :cond_13

    .line 11404
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v2

    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v2, p1, p2}, Landroid/view/IWindow;->requestAppKeyboardShortcuts(Lcom/android/internal/os/IResultReceiver;I)V
    :try_end_13
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_13} :catch_14

    .line 11400
    .end local v1    # "focusedWindow":Lcom/android/server/wm/WindowState;
    :cond_13
    :goto_13
    return-void

    .line 11406
    :catch_14
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_13
.end method

.method public requestAssistScreenshot(Lcom/android/internal/app/IAssistScreenshotReceiver;)Z
    .registers 4
    .param p1, "receiver"    # Lcom/android/internal/app/IAssistScreenshotReceiver;

    .prologue
    .line 6388
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    .line 6389
    const-string/jumbo v1, "requestAssistScreenshot()"

    .line 6388
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 6390
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6393
    :cond_15
    invoke-static {}, Lcom/android/server/FgThread;->getHandler()Landroid/os/Handler;

    move-result-object v0

    new-instance v1, Lcom/android/server/wm/WindowManagerService$8;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/internal/app/IAssistScreenshotReceiver;)V

    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z

    .line 6405
    const/4 v0, 0x1

    return v0
.end method

.method requestTraversal()V
    .registers 3

    .prologue
    .line 9811
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 9812
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_a

    monitor-exit v1

    .line 9810
    return-void

    .line 9811
    :catchall_a
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public resizeStack(ILandroid/graphics/Rect;Landroid/util/SparseArray;Landroid/util/SparseArray;Landroid/util/SparseArray;)Z
    .registers 11
    .param p1, "stackId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Landroid/graphics/Rect;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/content/res/Configuration;",
            ">;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/graphics/Rect;",
            ">;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/graphics/Rect;",
            ">;)Z"
        }
    .end annotation

    .prologue
    .line 5353
    .local p3, "configs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/content/res/Configuration;>;"
    .local p4, "taskBounds":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/graphics/Rect;>;"
    .local p5, "taskTempInsetBounds":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/graphics/Rect;>;"
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5354
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 5355
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_31

    .line 5356
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "resizeStack: stackId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 5357
    const-string/jumbo v4, " not found."

    .line 5356
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_2e
    .catchall {:try_start_3 .. :try_end_2e} :catchall_2e

    .line 5353
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_2e
    move-exception v1

    monitor-exit v2

    throw v1

    .line 5359
    .restart local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_31
    :try_start_31
    invoke-virtual {v0, p2, p3, p4, p5}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;Landroid/util/SparseArray;Landroid/util/SparseArray;Landroid/util/SparseArray;)Z

    move-result v1

    if-eqz v1, :cond_49

    .line 5360
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->isVisibleLocked()Z

    move-result v1

    .line 5359
    if-eqz v1, :cond_49

    .line 5361
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5362
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 5364
    :cond_49
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getRawFullscreen()Z
    :try_end_4c
    .catchall {:try_start_31 .. :try_end_4c} :catchall_2e

    move-result v1

    monitor-exit v2

    return v1
.end method

.method public resizeTask(ILandroid/graphics/Rect;Landroid/content/res/Configuration;ZZ)V
    .registers 11
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;
    .param p3, "configuration"    # Landroid/content/res/Configuration;
    .param p4, "relayout"    # Z
    .param p5, "forced"    # Z

    .prologue
    .line 5410
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5411
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 5412
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_31

    .line 5413
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "resizeTask: taskId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 5414
    const-string/jumbo v4, " not found."

    .line 5413
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_2e
    .catchall {:try_start_3 .. :try_end_2e} :catchall_2e

    .line 5410
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_2e
    move-exception v1

    monitor-exit v2

    throw v1

    .line 5417
    .restart local v0    # "task":Lcom/android/server/wm/Task;
    :cond_31
    :try_start_31
    invoke-virtual {v0, p2, p3, p5}, Lcom/android/server/wm/Task;->resizeLocked(Landroid/graphics/Rect;Landroid/content/res/Configuration;Z)Z

    move-result v1

    if-eqz v1, :cond_45

    if-eqz p4, :cond_45

    .line 5418
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5419
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_45
    .catchall {:try_start_31 .. :try_end_45} :catchall_2e

    :cond_45
    monitor-exit v2

    .line 5409
    return-void
.end method

.method restorePointerIconLocked(Lcom/android/server/wm/DisplayContent;FF)V
    .registers 9
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "latestX"    # F
    .param p3, "latestY"    # F

    .prologue
    .line 11547
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-virtual {v2, p2, p3}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->updatePosition(FF)V

    .line 11550
    invoke-virtual {p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 11551
    .local v1, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_24

    .line 11553
    :try_start_b
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 11554
    invoke-virtual {v1, p2}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    move-result v3

    .line 11555
    invoke-virtual {v1, p3}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    move-result v4

    .line 11553
    invoke-interface {v2, v3, v4}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_18
    .catch Landroid/os/RemoteException; {:try_start_b .. :try_end_18} :catch_19

    .line 11545
    :goto_18
    return-void

    .line 11556
    :catch_19
    move-exception v0

    .line 11557
    .local v0, "e":Landroid/os/RemoteException;
    const-string/jumbo v2, "WindowManager"

    const-string/jumbo v3, "unable to restore pointer icon"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_18

    .line 11560
    .end local v0    # "e":Landroid/os/RemoteException;
    :cond_24
    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;

    move-result-object v2

    const/16 v3, 0x3e8

    invoke-virtual {v2, v3}, Landroid/hardware/input/InputManager;->setPointerIconType(I)V

    goto :goto_18
.end method

.method public resumeKeyDispatching(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "_token"    # Landroid/os/IBinder;

    .prologue
    .line 8075
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 8076
    const-string/jumbo v2, "resumeKeyDispatching()"

    .line 8075
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 8077
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8080
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8081
    :try_start_18
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 8082
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_27

    .line 8083
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->resumeDispatchingLw(Lcom/android/server/wm/WindowToken;)V
    :try_end_27
    .catchall {:try_start_18 .. :try_end_27} :catchall_29

    :cond_27
    monitor-exit v2

    .line 8074
    return-void

    .line 8080
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_29
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method resumeRotationLocked()V
    .registers 4

    .prologue
    const/4 v2, 0x0

    .line 6801
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    if-lez v1, :cond_1c

    .line 6802
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    .line 6803
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    if-nez v1, :cond_1c

    .line 6804
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v0

    .line 6805
    .local v0, "changed":Z
    if-eqz v0, :cond_1c

    .line 6806
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x12

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 6800
    .end local v0    # "changed":Z
    :cond_1c
    return-void
.end method

.method rotationNeedsUpdateLocked()Z
    .registers 6

    .prologue
    .line 3884
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(II)I

    move-result v1

    .line 3885
    .local v1, "rotation":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    .line 3886
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    .line 3885
    invoke-interface {v2, v3, v1}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(II)Z

    move-result v2

    if-eqz v2, :cond_1f

    const/4 v0, 0x0

    .line 3887
    .local v0, "altOrientation":Z
    :goto_15
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    if-ne v2, v1, :cond_21

    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    if-ne v2, v0, :cond_21

    .line 3888
    const/4 v2, 0x0

    return v2

    .line 3885
    .end local v0    # "altOrientation":Z
    :cond_1f
    const/4 v0, 0x1

    .restart local v0    # "altOrientation":Z
    goto :goto_15

    .line 3890
    :cond_21
    const/4 v2, 0x1

    return v2
.end method

.method public saveANRStateLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .registers 12
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    const/16 v7, 0x26

    const/4 v6, 0x1

    const/4 v5, 0x0

    .line 10915
    new-instance v1, Ljava/io/StringWriter;

    invoke-direct {v1}, Ljava/io/StringWriter;-><init>()V

    .line 10916
    .local v1, "sw":Ljava/io/StringWriter;
    new-instance v0, Lcom/android/internal/util/FastPrintWriter;

    const/4 v2, 0x0

    const/16 v3, 0x400

    invoke-direct {v0, v1, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 10917
    .local v0, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "  ANR time: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Ljava/text/DateFormat;->getInstance()Ljava/text/DateFormat;

    move-result-object v3

    new-instance v4, Ljava/util/Date;

    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10918
    if-eqz p1, :cond_50

    .line 10919
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "  Application at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->stringName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10921
    :cond_50
    if-eqz p2, :cond_6f

    .line 10922
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "  Window at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10924
    :cond_6f
    if-eqz p3, :cond_88

    .line 10925
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "  Reason: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10927
    :cond_88
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    .line 10928
    invoke-virtual {p0, v0, v6, v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 10929
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    .line 10930
    const-string/jumbo v2, "Last ANR continued"

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 10931
    invoke-virtual {p0, v0, v6}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 10932
    invoke-virtual {v0}, Ljava/io/PrintWriter;->close()V

    .line 10933
    invoke-virtual {v1}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    .line 10935
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v2, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 10936
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/32 v4, 0x6ddd00

    invoke-virtual {v2, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 10914
    return-void
.end method

.method scheduleAnimationLocked()V
    .registers 3

    .prologue
    .line 9818
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    if-nez v0, :cond_10

    .line 9819
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    .line 9820
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v1, v1, Lcom/android/server/wm/WindowAnimator;->mAnimationFrameCallback:Landroid/view/Choreographer$FrameCallback;

    invoke-virtual {v0, v1}, Landroid/view/Choreographer;->postFrameCallback(Landroid/view/Choreographer$FrameCallback;)V

    .line 9817
    :cond_10
    return-void
.end method

.method public scheduleClearReplacingWindowIfNeeded(Landroid/os/IBinder;Z)V
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "replacing"    # Z

    .prologue
    .line 11291
    const/4 v0, 0x0

    .line 11292
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11293
    :try_start_4
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 11294
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_26

    .line 11295
    const-string/jumbo v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to reset replacing window on non-existing app token "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_24
    .catchall {:try_start_4 .. :try_end_24} :catchall_31

    monitor-exit v2

    .line 11297
    return-void

    .line 11299
    :cond_26
    if-eqz p2, :cond_2d

    .line 11300
    :try_start_28
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->scheduleReplacingWindowTimeouts(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_2b
    .catchall {:try_start_28 .. :try_end_2b} :catchall_31

    :goto_2b
    monitor-exit v2

    .line 11290
    return-void

    .line 11302
    :cond_2d
    :try_start_2d
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->resetReplacingWindows()V
    :try_end_30
    .catchall {:try_start_2d .. :try_end_30} :catchall_31

    goto :goto_2b

    .line 11292
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_31
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method scheduleRemoveStartingWindowLocked(Lcom/android/server/wm/AppWindowToken;)V
    .registers 6
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v3, 0x6

    const/4 v2, 0x0

    .line 4942
    if-nez p1, :cond_5

    .line 4943
    return-void

    .line 4945
    :cond_5
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v3, p1}, Lcom/android/server/wm/WindowManagerService$H;->hasMessages(ILjava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_e

    .line 4947
    return-void

    .line 4950
    :cond_e
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-nez v1, :cond_19

    .line 4951
    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v1, :cond_18

    .line 4956
    iput-object v2, p1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 4958
    :cond_18
    return-void

    .line 4964
    :cond_19
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v3, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    .line 4965
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 4941
    return-void
.end method

.method scheduleReplacingWindowTimeouts(Lcom/android/server/wm/AppWindowToken;)V
    .registers 6
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/16 v1, 0x2e

    .line 11308
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 11309
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mReplacingWindowTimeouts:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11311
    :cond_f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 11312
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 11313
    const-wide/16 v2, 0x7d0

    .line 11312
    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 11307
    return-void
.end method

.method public screenshotApplications(Landroid/os/IBinder;IIIF)Landroid/graphics/Bitmap;
    .registers 15
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "frameScale"    # F

    .prologue
    .line 6420
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    .line 6421
    const-string/jumbo v1, "screenshotApplications()"

    .line 6420
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 6422
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6425
    :cond_15
    :try_start_15
    const-string/jumbo v0, "screenshotApplications"

    const-wide/16 v2, 0x20

    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 6427
    sget-object v7, Landroid/graphics/Bitmap$Config;->RGB_565:Landroid/graphics/Bitmap$Config;

    .line 6426
    const/4 v5, 0x0

    .line 6427
    const/4 v8, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v6, p5

    .line 6426
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/wm/WindowManagerService;->screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;
    :try_end_2a
    .catchall {:try_start_15 .. :try_end_2a} :catchall_31

    move-result-object v0

    .line 6429
    const-wide/16 v2, 0x20

    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 6426
    return-object v0

    .line 6428
    :catchall_31
    move-exception v0

    .line 6429
    const-wide/16 v2, 0x20

    invoke-static {v2, v3}, Landroid/os/Trace;->traceEnd(J)V

    .line 6428
    throw v0
.end method

.method screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;
    .registers 51
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "includeFullDisplay"    # Z
    .param p6, "frameScale"    # F
    .param p7, "config"    # Landroid/graphics/Bitmap$Config;
    .param p8, "wallpaperOnly"    # Z

    .prologue
    .line 6449
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 6450
    :try_start_5
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    :try_end_c
    .catchall {:try_start_5 .. :try_end_c} :catchall_29

    move-result-object v19

    .line 6451
    .local v19, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v19, :cond_12

    .line 6454
    const/4 v6, 0x0

    monitor-exit v5

    return-object v6

    :cond_12
    monitor-exit v5

    .line 6457
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v20

    .line 6458
    .local v20, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v20

    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v21, v0

    .line 6459
    .local v21, "dw":I
    move-object/from16 v0, v20

    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v18, v0

    .line 6460
    .local v18, "dh":I
    if-eqz v21, :cond_27

    if-nez v18, :cond_2c

    .line 6463
    :cond_27
    const/4 v5, 0x0

    return-object v5

    .line 6449
    .end local v18    # "dh":I
    .end local v19    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v20    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v21    # "dw":I
    :catchall_29
    move-exception v6

    monitor-exit v5

    throw v6

    .line 6466
    .restart local v18    # "dh":I
    .restart local v19    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v20    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v21    # "dw":I
    :cond_2c
    const/4 v13, 0x0

    .line 6468
    .local v13, "bm":Landroid/graphics/Bitmap;
    const/4 v8, 0x0

    .line 6469
    .local v8, "maxLayer":I
    new-instance v23, Landroid/graphics/Rect;

    invoke-direct/range {v23 .. v23}, Landroid/graphics/Rect;-><init>()V

    .line 6470
    .local v23, "frame":Landroid/graphics/Rect;
    new-instance v33, Landroid/graphics/Rect;

    invoke-direct/range {v33 .. v33}, Landroid/graphics/Rect;-><init>()V

    .line 6474
    .local v33, "stackBounds":Landroid/graphics/Rect;
    if-nez p1, :cond_3c

    if-eqz p8, :cond_ac

    .line 6478
    :cond_3c
    const/16 v32, 0x0

    .line 6479
    .local v32, "screenshotReady":Z
    const v7, 0x7fffffff

    .line 6482
    .local v7, "minLayer":I
    :goto_41
    const/4 v12, 0x0

    .line 6485
    .local v12, "appWin":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 6487
    :try_start_47
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v5, :cond_b0

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v0, v5, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v25, v0

    .line 6493
    :goto_55
    if-eqz v25, :cond_b6

    .line 6494
    move-object/from16 v0, v25

    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-eqz v5, :cond_b6

    .line 6495
    move-object/from16 v0, v25

    iget-object v5, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    invoke-interface {v5}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    move-object/from16 v0, p1

    if-ne v5, v0, :cond_b6

    .line 6496
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isInMultiWindowMode()Z
    :try_end_70
    .catchall {:try_start_47 .. :try_end_70} :catchall_b9

    move-result v5

    if-eqz v5, :cond_b3

    const/16 v26, 0x0

    .local v26, "includeImeInScreenshot":Z
    :goto_75
    monitor-exit v6

    .line 6499
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v6, 0x2

    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v5

    add-int/lit8 v5, v5, 0x1

    mul-int/lit16 v5, v5, 0x2710

    add-int/lit16 v11, v5, 0x3e8

    .line 6502
    .local v11, "aboveAppLayer":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v39, v0

    monitor-enter v39

    .line 6504
    const/4 v12, 0x0

    .line 6505
    :try_start_8d
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v37

    .line 6506
    .local v37, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v24, v5, -0x1

    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .local v24, "i":I
    :goto_97
    if-ltz v24, :cond_120

    .line 6507
    move-object/from16 v0, v37

    move/from16 v1, v24

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Lcom/android/server/wm/WindowState;

    .line 6508
    .local v38, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v38

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_a7
    .catchall {:try_start_8d .. :try_end_a7} :catchall_195

    if-nez v5, :cond_bc

    .line 6506
    :cond_a9
    :goto_a9
    add-int/lit8 v24, v24, -0x1

    goto :goto_97

    .line 6475
    .end local v7    # "minLayer":I
    .end local v11    # "aboveAppLayer":I
    .end local v24    # "i":I
    .end local v26    # "includeImeInScreenshot":Z
    .end local v32    # "screenshotReady":Z
    .end local v37    # "windows":Lcom/android/server/wm/WindowList;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_ac
    const/16 v32, 0x1

    .line 6476
    .restart local v32    # "screenshotReady":Z
    const/4 v7, 0x0

    .line 6474
    .restart local v7    # "minLayer":I
    goto :goto_41

    .line 6487
    .restart local v12    # "appWin":Lcom/android/server/wm/WindowState;
    :cond_b0
    const/16 v25, 0x0

    .local v25, "imeTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    goto :goto_55

    .line 6496
    .end local v25    # "imeTargetAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_b3
    const/16 v26, 0x1

    .restart local v26    # "includeImeInScreenshot":Z
    goto :goto_75

    .line 6493
    .end local v26    # "includeImeInScreenshot":Z
    :cond_b6
    const/16 v26, 0x0

    .restart local v26    # "includeImeInScreenshot":Z
    goto :goto_75

    .line 6485
    .end local v26    # "includeImeInScreenshot":Z
    :catchall_b9
    move-exception v5

    monitor-exit v6

    throw v5

    .line 6511
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v11    # "aboveAppLayer":I
    .restart local v24    # "i":I
    .restart local v26    # "includeImeInScreenshot":Z
    .restart local v37    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_bc
    :try_start_bc
    move-object/from16 v0, v38

    iget v5, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    if-ge v5, v11, :cond_a9

    .line 6514
    if-eqz p8, :cond_ca

    move-object/from16 v0, v38

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v5, :cond_a9

    .line 6517
    :cond_ca
    move-object/from16 v0, v38

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-eqz v5, :cond_127

    .line 6518
    if-eqz v26, :cond_a9

    .line 6550
    :cond_d2
    :goto_d2
    move-object/from16 v0, v38

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v36, v0

    .line 6551
    .local v36, "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v36

    iget-object v5, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfaceController;->getLayer()I

    move-result v27

    .line 6552
    .local v27, "layer":I
    move/from16 v0, v27

    if-ge v8, v0, :cond_e6

    .line 6553
    move/from16 v8, v27

    .line 6555
    :cond_e6
    move/from16 v0, v27

    if-le v7, v0, :cond_ec

    .line 6556
    move/from16 v7, v27

    .line 6560
    :cond_ec
    if-nez p5, :cond_f4

    move-object/from16 v0, v38

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v5, :cond_14a

    .line 6576
    :cond_f4
    :goto_f4
    move-object/from16 v0, v38

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_198

    move-object/from16 v0, v38

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v0, p1

    if-ne v5, v0, :cond_198

    const/16 v22, 0x1

    .line 6578
    .local v22, "foundTargetWs":Z
    :goto_106
    if-eqz v22, :cond_116

    invoke-virtual/range {v38 .. v38}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v5

    if-eqz v5, :cond_116

    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowStateAnimator;->getShown()Z

    move-result v5

    if-eqz v5, :cond_116

    .line 6579
    const/16 v32, 0x1

    .line 6582
    :cond_116
    move-object/from16 v0, v38

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->isObscuringFullscreen(Landroid/view/DisplayInfo;)Z
    :try_end_11d
    .catchall {:try_start_bc .. :try_end_11d} :catchall_195

    move-result v5

    if-eqz v5, :cond_a9

    .line 6587
    .end local v22    # "foundTargetWs":Z
    .end local v27    # "layer":I
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_120
    if-eqz p1, :cond_1a2

    if-nez v12, :cond_1a2

    .line 6591
    const/4 v5, 0x0

    monitor-exit v39

    return-object v5

    .line 6521
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_127
    :try_start_127
    move-object/from16 v0, v38

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v5, :cond_135

    .line 6524
    if-eqz p8, :cond_131

    .line 6525
    move-object/from16 v12, v38

    .line 6528
    :cond_131
    if-nez v12, :cond_d2

    goto/16 :goto_a9

    .line 6539
    :cond_135
    if-eqz p1, :cond_d2

    .line 6540
    move-object/from16 v0, v38

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_a9

    move-object/from16 v0, v38

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v0, p1

    if-ne v5, v0, :cond_a9

    .line 6545
    move-object/from16 v12, v38

    .local v12, "appWin":Lcom/android/server/wm/WindowState;
    goto :goto_d2

    .line 6561
    .end local v12    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v27    # "layer":I
    .restart local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    :cond_14a
    move-object/from16 v0, v38

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v35, v0

    .line 6562
    .local v35, "wf":Landroid/graphics/Rect;
    move-object/from16 v0, v38

    iget-object v15, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    .line 6563
    .local v15, "cr":Landroid/graphics/Rect;
    move-object/from16 v0, v35

    iget v5, v0, Landroid/graphics/Rect;->left:I

    iget v6, v15, Landroid/graphics/Rect;->left:I

    add-int v28, v5, v6

    .line 6564
    .local v28, "left":I
    move-object/from16 v0, v35

    iget v5, v0, Landroid/graphics/Rect;->top:I

    iget v6, v15, Landroid/graphics/Rect;->top:I

    add-int v34, v5, v6

    .line 6565
    .local v34, "top":I
    move-object/from16 v0, v35

    iget v5, v0, Landroid/graphics/Rect;->right:I

    iget v6, v15, Landroid/graphics/Rect;->right:I

    sub-int v30, v5, v6

    .line 6566
    .local v30, "right":I
    move-object/from16 v0, v35

    iget v5, v0, Landroid/graphics/Rect;->bottom:I

    iget v6, v15, Landroid/graphics/Rect;->bottom:I

    sub-int v14, v5, v6

    .line 6567
    .local v14, "bottom":I
    move-object/from16 v0, v23

    move/from16 v1, v28

    move/from16 v2, v34

    move/from16 v3, v30

    invoke-virtual {v0, v1, v2, v3, v14}, Landroid/graphics/Rect;->union(IIII)V

    .line 6568
    move-object/from16 v0, v38

    move-object/from16 v1, v33

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowState;->getVisibleBounds(Landroid/graphics/Rect;)V

    .line 6569
    move-object/from16 v0, v23

    move-object/from16 v1, v33

    invoke-static {v0, v1}, Landroid/graphics/Rect;->intersects(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    move-result v5

    if-nez v5, :cond_f4

    .line 6571
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_193
    .catchall {:try_start_127 .. :try_end_193} :catchall_195

    goto/16 :goto_f4

    .line 6502
    .end local v13    # "bm":Landroid/graphics/Bitmap;
    .end local v14    # "bottom":I
    .end local v15    # "cr":Landroid/graphics/Rect;
    .end local v24    # "i":I
    .end local v27    # "layer":I
    .end local v28    # "left":I
    .end local v30    # "right":I
    .end local v34    # "top":I
    .end local v35    # "wf":Landroid/graphics/Rect;
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v37    # "windows":Lcom/android/server/wm/WindowList;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :catchall_195
    move-exception v5

    monitor-exit v39

    throw v5

    .line 6577
    .restart local v13    # "bm":Landroid/graphics/Bitmap;
    .restart local v24    # "i":I
    .restart local v27    # "layer":I
    .restart local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v37    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_198
    if-eqz v12, :cond_19e

    move/from16 v22, p8

    goto/16 :goto_106

    :cond_19e
    const/16 v22, 0x0

    goto/16 :goto_106

    .line 6594
    .end local v27    # "layer":I
    .end local v36    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    .end local v38    # "ws":Lcom/android/server/wm/WindowState;
    :cond_1a2
    if-nez v32, :cond_200

    .line 6595
    :try_start_1a4
    const-string/jumbo v6, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v40, "Failed to capture screenshot of "

    move-object/from16 v0, v40

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 6596
    const-string/jumbo v40, " appWin="

    .line 6595
    move-object/from16 v0, v40

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v40

    .line 6596
    if-nez v12, :cond_1d9

    const-string/jumbo v5, "null"

    .line 6595
    :goto_1c9
    move-object/from16 v0, v40

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v6, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1d6
    .catchall {:try_start_1a4 .. :try_end_1d6} :catchall_195

    .line 6598
    const/4 v5, 0x0

    monitor-exit v39

    return-object v5

    .line 6596
    :cond_1d9
    :try_start_1d9
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v41, " drawState="

    move-object/from16 v0, v41

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 6597
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v41, v0

    move-object/from16 v0, v41

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    move/from16 v41, v0

    .line 6596
    move/from16 v0, v41

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
    :try_end_1fe
    .catchall {:try_start_1d9 .. :try_end_1fe} :catchall_195

    move-result-object v5

    goto :goto_1c9

    .line 6606
    :cond_200
    if-nez v8, :cond_205

    .line 6609
    const/4 v5, 0x0

    monitor-exit v39

    return-object v5

    .line 6612
    :cond_205
    if-nez p5, :cond_221

    .line 6614
    const/4 v5, 0x0

    const/4 v6, 0x0

    :try_start_209
    move-object/from16 v0, v23

    move/from16 v1, v21

    move/from16 v2, v18

    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->intersect(IIII)Z

    move-result v5

    if-nez v5, :cond_218

    .line 6615
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->setEmpty()V

    .line 6621
    :cond_218
    :goto_218
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->isEmpty()Z
    :try_end_21b
    .catchall {:try_start_209 .. :try_end_21b} :catchall_195

    move-result v5

    if-eqz v5, :cond_22d

    .line 6622
    const/4 v5, 0x0

    monitor-exit v39

    return-object v5

    .line 6619
    :cond_221
    const/4 v5, 0x0

    const/4 v6, 0x0

    :try_start_223
    move-object/from16 v0, v23

    move/from16 v1, v21

    move/from16 v2, v18

    invoke-virtual {v0, v5, v6, v1, v2}, Landroid/graphics/Rect;->set(IIII)V

    goto :goto_218

    .line 6625
    :cond_22d
    if-gez p3, :cond_239

    .line 6626
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    move-result v5

    int-to-float v5, v5

    mul-float v5, v5, p6

    float-to-int v0, v5

    move/from16 p3, v0

    .line 6628
    :cond_239
    if-gez p4, :cond_245

    .line 6629
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    move-result v5

    int-to-float v5, v5

    mul-float v5, v5, p6

    float-to-int v0, v5

    move/from16 p4, v0

    .line 6634
    :cond_245
    new-instance v4, Landroid/graphics/Rect;

    move-object/from16 v0, v23

    invoke-direct {v4, v0}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 6635
    .local v4, "crop":Landroid/graphics/Rect;
    move/from16 v0, p3

    int-to-float v5, v0

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    move-result v6

    int-to-float v6, v6

    div-float/2addr v5, v6

    move/from16 v0, p4

    int-to-float v6, v0

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    move-result v40

    move/from16 v0, v40

    int-to-float v0, v0

    move/from16 v40, v0

    div-float v6, v6, v40

    cmpg-float v5, v5, v6

    if-gez v5, :cond_2fd

    .line 6636
    move/from16 v0, p3

    int-to-float v5, v0

    move/from16 v0, p4

    int-to-float v6, v0

    div-float/2addr v5, v6

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    move-result v6

    int-to-float v6, v6

    mul-float/2addr v5, v6

    float-to-int v0, v5

    move/from16 v17, v0

    .line 6637
    .local v17, "cropWidth":I
    iget v5, v4, Landroid/graphics/Rect;->left:I

    add-int v5, v5, v17

    iput v5, v4, Landroid/graphics/Rect;->right:I

    .line 6644
    .end local v17    # "cropWidth":I
    :goto_27d
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v5

    invoke-virtual {v5}, Landroid/view/Display;->getRotation()I

    move-result v10

    .line 6646
    .local v10, "rot":I
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mSfHwRotation:I

    add-int/2addr v5, v10

    rem-int/lit8 v10, v5, 0x4

    .line 6648
    const/4 v5, 0x1

    if-eq v10, v5, :cond_296

    const/4 v5, 0x3

    if-ne v10, v5, :cond_29a

    .line 6649
    :cond_296
    const/4 v5, 0x1

    if-ne v10, v5, :cond_315

    const/4 v10, 0x3

    .line 6654
    :cond_29a
    :goto_29a
    move/from16 v0, v21

    move/from16 v1, v18

    invoke-static {v4, v10, v0, v1}, Lcom/android/server/wm/WindowManagerService;->convertCropForSurfaceFlinger(Landroid/graphics/Rect;III)V

    .line 6670
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v31

    .line 6671
    .local v31, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v31, :cond_317

    .line 6672
    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    move-result v9

    .line 6678
    :goto_2b0
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 6679
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransactionSync()V

    move/from16 v5, p3

    move/from16 v6, p4

    .line 6681
    invoke-static/range {v4 .. v10}, Landroid/view/SurfaceControl;->screenshot(Landroid/graphics/Rect;IIIIZI)Landroid/graphics/Bitmap;

    move-result-object v13

    .line 6683
    .local v13, "bm":Landroid/graphics/Bitmap;
    if-nez v13, :cond_319

    .line 6684
    const-string/jumbo v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v40, "Screenshot failure taking screenshot for ("

    move-object/from16 v0, v40

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v21

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v40, "x"

    move-object/from16 v0, v40

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v18

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 6685
    const-string/jumbo v40, ") to layer "

    .line 6684
    move-object/from16 v0, v40

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2fa
    .catchall {:try_start_223 .. :try_end_2fa} :catchall_195

    .line 6686
    const/4 v5, 0x0

    monitor-exit v39

    return-object v5

    .line 6639
    .end local v10    # "rot":I
    .end local v31    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .local v13, "bm":Landroid/graphics/Bitmap;
    :cond_2fd
    move/from16 v0, p4

    int-to-float v5, v0

    move/from16 v0, p3

    int-to-float v6, v0

    div-float/2addr v5, v6

    :try_start_304
    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    move-result v6

    int-to-float v6, v6

    mul-float/2addr v5, v6

    float-to-int v0, v5

    move/from16 v16, v0

    .line 6640
    .local v16, "cropHeight":I
    iget v5, v4, Landroid/graphics/Rect;->top:I

    add-int v5, v5, v16

    iput v5, v4, Landroid/graphics/Rect;->bottom:I
    :try_end_313
    .catchall {:try_start_304 .. :try_end_313} :catchall_195

    goto/16 :goto_27d

    .line 6649
    .end local v16    # "cropHeight":I
    .restart local v10    # "rot":I
    :cond_315
    const/4 v10, 0x1

    goto :goto_29a

    .line 6671
    .restart local v31    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_317
    const/4 v9, 0x0

    .local v9, "inRotation":Z
    goto :goto_2b0

    .end local v9    # "inRotation":Z
    .local v13, "bm":Landroid/graphics/Bitmap;
    :cond_319
    monitor-exit v39

    .line 6713
    move-object/from16 v0, p7

    invoke-virtual {v13, v0}, Landroid/graphics/Bitmap;->createAshmemBitmap(Landroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

    move-result-object v29

    .line 6714
    .local v29, "ret":Landroid/graphics/Bitmap;
    invoke-virtual {v13}, Landroid/graphics/Bitmap;->recycle()V

    .line 6715
    return-object v29
.end method

.method public screenshotWallpaper()Landroid/graphics/Bitmap;
    .registers 13

    .prologue
    const-wide/16 v10, 0x20

    .line 6368
    const-string/jumbo v0, "android.permission.READ_FRAME_BUFFER"

    .line 6369
    const-string/jumbo v1, "screenshotWallpaper()"

    .line 6368
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 6370
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires READ_FRAME_BUFFER permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6373
    :cond_17
    :try_start_17
    const-string/jumbo v0, "screenshotWallpaper"

    const-wide/16 v2, 0x20

    invoke-static {v2, v3, v0}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 6375
    sget-object v7, Landroid/graphics/Bitmap$Config;->ARGB_8888:Landroid/graphics/Bitmap$Config;

    .line 6374
    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, -0x1

    const/4 v4, -0x1

    const/4 v5, 0x1

    const/high16 v6, 0x3f800000    # 1.0f

    .line 6375
    const/4 v8, 0x1

    move-object v0, p0

    .line 6374
    invoke-virtual/range {v0 .. v8}, Lcom/android/server/wm/WindowManagerService;->screenshotApplicationsInner(Landroid/os/IBinder;IIIZFLandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;
    :try_end_2d
    .catchall {:try_start_17 .. :try_end_2d} :catchall_32

    move-result-object v0

    .line 6377
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 6374
    return-object v0

    .line 6376
    :catchall_32
    move-exception v0

    .line 6377
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 6376
    throw v0
.end method

.method public scrollTask(ILandroid/graphics/Rect;)V
    .registers 8
    .param p1, "taskId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 5442
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5443
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 5444
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_31

    .line 5445
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "scrollTask: taskId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 5446
    const-string/jumbo v4, " not found."

    .line 5445
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_2e
    .catchall {:try_start_3 .. :try_end_2e} :catchall_2e

    .line 5442
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_2e
    move-exception v1

    monitor-exit v2

    throw v1

    .line 5449
    .restart local v0    # "task":Lcom/android/server/wm/Task;
    :cond_31
    :try_start_31
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->scrollLocked(Landroid/graphics/Rect;)Z

    move-result v1

    if-eqz v1, :cond_48

    .line 5450
    invoke-virtual {v0}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v3, 0x1

    iput-boolean v3, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5451
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 5452
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_48
    .catchall {:try_start_31 .. :try_end_48} :catchall_2e

    :cond_48
    monitor-exit v2

    .line 5441
    return-void
.end method

.method sendNewConfiguration()V
    .registers 4

    .prologue
    .line 7526
    :try_start_0
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    const/4 v2, 0x0

    invoke-interface {v1, v2}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_6} :catch_7

    .line 7524
    :goto_6
    return-void

    .line 7527
    :catch_7
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_6
.end method

.method public setAnimationScale(IF)V
    .registers 5
    .param p1, "which"    # I
    .param p2, "scale"    # F

    .prologue
    .line 5706
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    .line 5707
    const-string/jumbo v1, "setAnimationScale()"

    .line 5706
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 5708
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5711
    :cond_15
    invoke-static {p2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result p2

    .line 5712
    packed-switch p1, :pswitch_data_2e

    .line 5719
    :goto_1c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 5705
    return-void

    .line 5713
    :pswitch_24
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    goto :goto_1c

    .line 5714
    :pswitch_27
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    goto :goto_1c

    .line 5715
    :pswitch_2a
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    goto :goto_1c

    .line 5712
    nop

    :pswitch_data_2e
    .packed-switch 0x0
        :pswitch_24
        :pswitch_27
        :pswitch_2a
    .end packed-switch
.end method

.method public setAnimationScales([F)V
    .registers 7
    .param p1, "scales"    # [F

    .prologue
    const/4 v4, 0x0

    const/4 v3, 0x2

    const/4 v2, 0x1

    .line 5724
    const-string/jumbo v0, "android.permission.SET_ANIMATION_SCALE"

    .line 5725
    const-string/jumbo v1, "setAnimationScale()"

    .line 5724
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_18

    .line 5726
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5729
    :cond_18
    if-eqz p1, :cond_40

    .line 5730
    array-length v0, p1

    if-lt v0, v2, :cond_26

    .line 5731
    const/4 v0, 0x0

    aget v0, p1, v0

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScaleSetting:F

    .line 5733
    :cond_26
    array-length v0, p1

    if-lt v0, v3, :cond_31

    .line 5734
    aget v0, p1, v2

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScaleSetting:F

    .line 5736
    :cond_31
    array-length v0, p1

    const/4 v1, 0x3

    if-lt v0, v1, :cond_40

    .line 5737
    aget v0, p1, v3

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScaleSetting:F

    .line 5738
    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->dispatchNewAnimatorScaleLocked(Lcom/android/server/wm/Session;)V

    .line 5743
    :cond_40
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 5723
    return-void
.end method

.method public setAppFullscreen(Landroid/os/IBinder;Z)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "toOpaque"    # Z

    .prologue
    .line 4422
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4423
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 4424
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_13

    .line 4425
    iput-boolean p2, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 4426
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V

    .line 4427
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->requestTraversal()V
    :try_end_13
    .catchall {:try_start_3 .. :try_end_13} :catchall_15

    :cond_13
    monitor-exit v2

    .line 4421
    return-void

    .line 4422
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_15
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public setAppOrientation(Landroid/view/IApplicationToken;I)V
    .registers 8
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "requestedOrientation"    # I

    .prologue
    .line 3963
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 3964
    const-string/jumbo v2, "setAppOrientation()"

    .line 3963
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 3965
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 3968
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3969
    :try_start_18
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 3970
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_3e

    .line 3971
    const-string/jumbo v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to set orientation of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3c
    .catchall {:try_start_18 .. :try_end_3c} :catchall_83

    monitor-exit v2

    .line 3972
    return-void

    .line 3974
    :cond_3e
    if-eqz p2, :cond_43

    .line 3975
    const/4 v1, 0x6

    if-ne p2, v1, :cond_7a

    .line 3978
    :cond_43
    :goto_43
    :try_start_43
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAppOrientation token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " requestedOrientation: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3979
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string/jumbo v3, "single_hand_mode"

    const-string/jumbo v4, ""

    invoke-static {v1, v3, v4}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 3981
    :cond_76
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I
    :try_end_78
    .catchall {:try_start_43 .. :try_end_78} :catchall_83

    monitor-exit v2

    .line 3962
    return-void

    .line 3976
    :cond_7a
    const/16 v1, 0x8

    if-eq p2, v1, :cond_43

    .line 3977
    const/16 v1, 0xb

    if-ne p2, v1, :cond_76

    goto :goto_43

    .line 3968
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_83
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;Z)Z
    .registers 32
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z

    .prologue
    .line 4215
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    .line 4216
    const-string/jumbo v4, "setAppStartingWindow()"

    .line 4215
    move-object/from16 v0, p0

    invoke-direct {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_17

    .line 4217
    new-instance v3, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 4220
    :cond_17
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v19, v0

    monitor-enter v19

    .line 4225
    :try_start_1e
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v18

    .line 4226
    .local v18, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v18, :cond_43

    .line 4227
    const-string/jumbo v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "Attempted to set icon of non-existing app token: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_40
    .catchall {:try_start_1e .. :try_end_40} :catchall_f1

    .line 4228
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4234
    :cond_43
    :try_start_43
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_46
    .catchall {:try_start_43 .. :try_end_46} :catchall_f1

    move-result v3

    if-nez v3, :cond_4c

    .line 4235
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4238
    :cond_4c
    :try_start_4c
    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;
    :try_end_50
    .catchall {:try_start_4c .. :try_end_50} :catchall_f1

    if-eqz v3, :cond_55

    .line 4239
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4248
    :cond_55
    if-eqz p3, :cond_ac

    .line 4249
    :try_start_57
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v3

    .line 4250
    sget-object v4, Lcom/android/internal/R$styleable;->Window:[I

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 4249
    move-object/from16 v0, p2

    move/from16 v1, p3

    invoke-virtual {v3, v0, v1, v4, v5}, Lcom/android/server/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/server/AttributeCache$Entry;
    :try_end_68
    .catchall {:try_start_57 .. :try_end_68} :catchall_f1

    move-result-object v12

    .line 4251
    .local v12, "ent":Lcom/android/server/AttributeCache$Entry;
    if-nez v12, :cond_6e

    .line 4254
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4256
    :cond_6e
    :try_start_6e
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 4257
    const/4 v4, 0x5

    const/4 v5, 0x0

    .line 4256
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v16

    .line 4258
    .local v16, "windowIsTranslucent":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 4259
    const/4 v4, 0x4

    const/4 v5, 0x0

    .line 4258
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v15

    .line 4260
    .local v15, "windowIsFloating":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 4261
    const/16 v4, 0xe

    const/4 v5, 0x0

    .line 4260
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v17

    .line 4262
    .local v17, "windowShowWallpaper":Z
    iget-object v3, v12, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    .line 4263
    const/16 v4, 0xc

    const/4 v5, 0x0

    .line 4262
    invoke-virtual {v3, v4, v5}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z
    :try_end_8f
    .catchall {:try_start_6e .. :try_end_8f} :catchall_f1

    move-result v14

    .line 4267
    .local v14, "windowDisableStarting":Z
    if-eqz v16, :cond_95

    .line 4268
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4270
    :cond_95
    if-nez v15, :cond_99

    if-eqz v14, :cond_9c

    .line 4271
    :cond_99
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4273
    :cond_9c
    if-eqz v17, :cond_ac

    .line 4274
    :try_start_9e
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperControllerLocked:Lcom/android/server/wm/WallpaperController;

    invoke-virtual {v3}, Lcom/android/server/wm/WallpaperController;->getWallpaperTarget()Lcom/android/server/wm/WindowState;

    move-result-object v3

    if-nez v3, :cond_bb

    .line 4280
    const/high16 v3, 0x100000

    or-int p9, p9, v3

    .line 4287
    .end local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v14    # "windowDisableStarting":Z
    .end local v15    # "windowIsFloating":Z
    .end local v16    # "windowIsTranslucent":Z
    .end local v17    # "windowShowWallpaper":Z
    :cond_ac
    move-object/from16 v0, p0

    move-object/from16 v1, p10

    move-object/from16 v2, v18

    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->transferStartingWindow(Landroid/os/IBinder;Lcom/android/server/wm/AppWindowToken;)Z
    :try_end_b5
    .catchall {:try_start_9e .. :try_end_b5} :catchall_f1

    move-result v3

    if-eqz v3, :cond_be

    .line 4288
    const/4 v3, 0x1

    monitor-exit v19

    return v3

    .line 4282
    .restart local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .restart local v14    # "windowDisableStarting":Z
    .restart local v15    # "windowIsFloating":Z
    .restart local v16    # "windowIsTranslucent":Z
    .restart local v17    # "windowShowWallpaper":Z
    :cond_bb
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4293
    .end local v12    # "ent":Lcom/android/server/AttributeCache$Entry;
    .end local v14    # "windowDisableStarting":Z
    .end local v15    # "windowIsFloating":Z
    .end local v16    # "windowIsTranslucent":Z
    .end local v17    # "windowShowWallpaper":Z
    :cond_be
    if-nez p11, :cond_c3

    .line 4294
    const/4 v3, 0x0

    monitor-exit v19

    return v3

    .line 4298
    :cond_c3
    :try_start_c3
    new-instance v3, Lcom/android/server/wm/StartingData;

    move-object/from16 v4, p2

    move/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move/from16 v9, p7

    move/from16 v10, p8

    move/from16 v11, p9

    invoke-direct/range {v3 .. v11}, Lcom/android/server/wm/StartingData;-><init>(Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIII)V

    move-object/from16 v0, v18

    iput-object v3, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 4300
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v4, 0x5

    move-object/from16 v0, v18

    invoke-virtual {v3, v4, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v13

    .line 4305
    .local v13, "m":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z
    :try_end_ee
    .catchall {:try_start_c3 .. :try_end_ee} :catchall_f1

    monitor-exit v19

    .line 4307
    const/4 v3, 0x1

    return v3

    .line 4220
    .end local v13    # "m":Landroid/os/Message;
    .end local v18    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_f1
    move-exception v3

    monitor-exit v19

    throw v3
.end method

.method public setAppTask(Landroid/os/IBinder;IILandroid/graphics/Rect;Landroid/content/res/Configuration;IZ)V
    .registers 20
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "taskId"    # I
    .param p3, "stackId"    # I
    .param p4, "taskBounds"    # Landroid/graphics/Rect;
    .param p5, "config"    # Landroid/content/res/Configuration;
    .param p6, "taskResizeMode"    # I
    .param p7, "homeTask"    # Z

    .prologue
    .line 3598
    const-string/jumbo v2, "android.permission.MANAGE_APP_TOKENS"

    .line 3599
    const-string/jumbo v3, "setAppTask()"

    .line 3598
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 3600
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 3603
    :cond_15
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v11

    .line 3604
    :try_start_18
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v6

    .line 3605
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v6, :cond_3a

    .line 3606
    const-string/jumbo v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to set task id of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_38
    .catchall {:try_start_18 .. :try_end_38} :catchall_62

    monitor-exit v11

    .line 3607
    return-void

    .line 3609
    :cond_3a
    :try_start_3a
    iget-object v10, v6, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 3610
    .local v10, "oldTask":Lcom/android/server/wm/Task;
    invoke-virtual {v10, v6}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    .line 3612
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v2, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    .line 3613
    .local v9, "newTask":Lcom/android/server/wm/Task;
    if-nez v9, :cond_56

    .line 3615
    iget v5, v10, Lcom/android/server/wm/Task;->mUserId:I

    move-object v2, p0

    move v3, p2

    move v4, p3

    move-object/from16 v7, p4

    move-object/from16 v8, p5

    .line 3614
    invoke-direct/range {v2 .. v8}, Lcom/android/server/wm/WindowManagerService;->createTaskLocked(IIILcom/android/server/wm/AppWindowToken;Landroid/graphics/Rect;Landroid/content/res/Configuration;)Lcom/android/server/wm/Task;

    move-result-object v9

    .line 3617
    :cond_56
    const v2, 0x7fffffff

    move/from16 v0, p6

    move/from16 v1, p7

    invoke-virtual {v9, v2, v6, v0, v1}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;IZ)V
    :try_end_60
    .catchall {:try_start_3a .. :try_end_60} :catchall_62

    monitor-exit v11

    .line 3597
    return-void

    .line 3603
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v9    # "newTask":Lcom/android/server/wm/Task;
    .end local v10    # "oldTask":Lcom/android/server/wm/Task;
    :catchall_62
    move-exception v2

    monitor-exit v11

    throw v2
.end method

.method public setAppVisibility(Landroid/os/IBinder;Z)V
    .registers 15
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    .prologue
    const/4 v2, 0x1

    const/4 v0, 0x0

    .line 4642
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    .line 4643
    const-string/jumbo v4, "setAppVisibility()"

    .line 4642
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_17

    .line 4644
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4649
    :cond_17
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v11

    .line 4650
    :try_start_1a
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 4651
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_3c

    .line 4652
    const-string/jumbo v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Attempted to set visibility of non-existing app token: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3a
    .catchall {:try_start_1a .. :try_end_3a} :catchall_113

    monitor-exit v11

    .line 4653
    return-void

    .line 4661
    :cond_3c
    :try_start_3c
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 4662
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v3, v1}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    .line 4663
    const/4 v3, 0x0

    iput-boolean v3, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 4664
    if-eqz p2, :cond_d2

    :goto_4b
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 4666
    if-nez p2, :cond_d5

    .line 4670
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->removeAllDeadWindows()V

    .line 4671
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->setVisibleBeforeClientHidden()V

    .line 4710
    :cond_55
    :goto_55
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v0

    if-eqz v0, :cond_11f

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v0

    if-eqz v0, :cond_11f

    .line 4715
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    if-eqz v0, :cond_90

    .line 4716
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-nez v0, :cond_90

    .line 4717
    const-string/jumbo v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Will NOT set dummy animation on: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 4718
    const-string/jumbo v3, ", using null transfered animation!"

    .line 4717
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4720
    :cond_90
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->usingTransferredAnimation:Z

    if-nez v0, :cond_a3

    .line 4721
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    if-eqz v0, :cond_9e

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    .line 4720
    if-eqz v0, :cond_a3

    .line 4724
    :cond_9e
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setDummyAnimation()V

    .line 4726
    :cond_a3
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 4727
    if-eqz p2, :cond_116

    .line 4728
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 4729
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    .line 4734
    :goto_b0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v0

    const/16 v2, 0x10

    if-ne v0, v2, :cond_d0

    .line 4737
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v10

    .line 4738
    .local v10, "win":Lcom/android/server/wm/WindowState;
    if-eqz v10, :cond_d0

    .line 4739
    iget-object v7, v10, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 4740
    .local v7, "focusedToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v7, :cond_d0

    .line 4744
    const/4 v0, 0x1

    iput-boolean v0, v7, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 4745
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v0, v7}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z
    :try_end_d0
    .catchall {:try_start_3c .. :try_end_d0} :catchall_113

    .end local v7    # "focusedToken":Lcom/android/server/wm/AppWindowToken;
    .end local v10    # "win":Lcom/android/server/wm/WindowState;
    :cond_d0
    monitor-exit v11

    .line 4749
    return-void

    :cond_d2
    move v0, v2

    .line 4664
    goto/16 :goto_4b

    .line 4672
    :cond_d5
    if-eqz p2, :cond_55

    .line 4673
    :try_start_d7
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v0

    if-nez v0, :cond_ec

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v0

    if-eqz v0, :cond_ec

    .line 4677
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 4679
    :cond_ec
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 4682
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-nez v0, :cond_f7

    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppStopped:Z

    if-eqz v0, :cond_10b

    .line 4683
    :cond_f7
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    .line 4686
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-eqz v0, :cond_101

    .line 4687
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 4690
    :cond_101
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eqz v0, :cond_10b

    .line 4697
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 4698
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 4701
    :cond_10b
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->requestUpdateWallpaperIfNeeded()V

    .line 4705
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppStopped:Z
    :try_end_111
    .catchall {:try_start_d7 .. :try_end_111} :catchall_113

    goto/16 :goto_55

    .line 4649
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_113
    move-exception v0

    monitor-exit v11

    throw v0

    .line 4731
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_116
    :try_start_116
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 4732
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    goto :goto_b0

    .line 4752
    :cond_11f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 4753
    .local v8, "origId":J
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 4755
    iget-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->voiceInteraction:Z

    .line 4754
    const/4 v2, 0x0

    const/4 v4, -0x1

    .line 4755
    const/4 v5, 0x1

    move-object v0, p0

    move v3, p2

    .line 4754
    invoke-virtual/range {v0 .. v6}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z

    .line 4756
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 4757
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_136
    .catchall {:try_start_116 .. :try_end_136} :catchall_113

    monitor-exit v11

    .line 4641
    return-void
.end method

.method public setCurrentProfileIds([I)V
    .registers 4
    .param p1, "currentProfileIds"    # [I

    .prologue
    .line 5870
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 5871
    :try_start_3
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I
    :try_end_5
    .catchall {:try_start_3 .. :try_end_5} :catchall_7

    monitor-exit v0

    .line 5869
    return-void

    .line 5870
    :catchall_7
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method public setCurrentUser(I[I)V
    .registers 11
    .param p1, "newUserId"    # I
    .param p2, "currentProfileIds"    # [I

    .prologue
    .line 5876
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 5877
    :try_start_3
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 5878
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentProfileIds:[I

    .line 5879
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v5, p1}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    .line 5880
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, p1}, Landroid/view/WindowManagerPolicy;->setCurrentUserLw(I)V

    .line 5885
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v7, 0x1

    invoke-interface {v5, v7}, Landroid/view/WindowManagerPolicy;->enableKeyguard(Z)V

    .line 5888
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 5889
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_1e
    if-ge v1, v3, :cond_31

    .line 5890
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 5891
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->switchUserStacks()V

    .line 5892
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 5889
    add-int/lit8 v1, v1, 0x1

    goto :goto_1e

    .line 5894
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_31
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 5897
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5898
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDividerControllerLocked:Lcom/android/server/wm/DockedStackDividerController;

    .line 5899
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->hasDockedTasksForUser(I)Z

    move-result v7

    .line 5898
    invoke-virtual {v5, v7}, Lcom/android/server/wm/DockedStackDividerController;->notifyDockedStackExistsChanged(Z)V

    .line 5903
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v5, :cond_51

    .line 5904
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getForcedDisplayDensityForUserLocked(I)I

    move-result v2

    .line 5905
    .local v2, "forcedDensity":I
    if-eqz v2, :cond_53

    move v4, v2

    .line 5907
    .local v4, "targetDensity":I
    :goto_4e
    invoke-direct {p0, v0, v4}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    :try_end_51
    .catchall {:try_start_3 .. :try_end_51} :catchall_56

    .end local v2    # "forcedDensity":I
    .end local v4    # "targetDensity":I
    :cond_51
    monitor-exit v6

    .line 5875
    return-void

    .line 5906
    .restart local v2    # "forcedDensity":I
    :cond_53
    :try_start_53
    iget v4, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I
    :try_end_55
    .catchall {:try_start_53 .. :try_end_55} :catchall_56

    goto :goto_4e

    .line 5876
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "forcedDensity":I
    .end local v3    # "numDisplays":I
    :catchall_56
    move-exception v5

    monitor-exit v6

    throw v5
.end method

.method public setDockedStackCreateState(ILandroid/graphics/Rect;)V
    .registers 5
    .param p1, "mode"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 5150
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 5151
    :try_start_3
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setDockedStackCreateStateLocked(ILandroid/graphics/Rect;)V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_8

    monitor-exit v0

    .line 5149
    return-void

    .line 5150
    :catchall_8
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method setDockedStackCreateStateLocked(ILandroid/graphics/Rect;)V
    .registers 3
    .param p1, "mode"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    .line 5156
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateMode:I

    .line 5157
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mDockedStackCreateBounds:Landroid/graphics/Rect;

    .line 5155
    return-void
.end method

.method public setDockedStackDividerTouchRegion(Landroid/graphics/Rect;)V
    .registers 4
    .param p1, "touchRegion"    # Landroid/graphics/Rect;

    .prologue
    .line 11335
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 11336
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->setTouchRegion(Landroid/graphics/Rect;)V

    .line 11338
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusTaskRegionLocked()V
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_13

    monitor-exit v1

    .line 11334
    return-void

    .line 11335
    :catchall_13
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public setDockedStackResizing(Z)V
    .registers 4
    .param p1, "resizing"    # Z

    .prologue
    .line 11327
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 11328
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DockedStackDividerController;->setResizing(Z)V

    .line 11329
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_13

    monitor-exit v1

    .line 11326
    return-void

    .line 11327
    :catchall_13
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public setEventDispatching(Z)V
    .registers 4
    .param p1, "enabled"    # Z

    .prologue
    .line 8090
    const-string/jumbo v0, "android.permission.MANAGE_APP_TOKENS"

    .line 8091
    const-string/jumbo v1, "setEventDispatching()"

    .line 8090
    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 8092
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8095
    :cond_15
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8096
    :try_start_18
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    .line 8097
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_23

    .line 8098
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V
    :try_end_23
    .catchall {:try_start_18 .. :try_end_23} :catchall_25

    :cond_23
    monitor-exit v1

    .line 8089
    return-void

    .line 8095
    :catchall_25
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method setFocusTaskRegionLocked()V
    .registers 4

    .prologue
    .line 3998
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v2, :cond_11

    .line 3999
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v1, v2, Lcom/android/server/wm/AppWindowToken;->mTask:Lcom/android/server/wm/Task;

    .line 4000
    .local v1, "task":Lcom/android/server/wm/Task;
    invoke-virtual {v1}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 4001
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_11

    .line 4002
    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->setTouchExcludeRegion(Lcom/android/server/wm/Task;)V

    .line 3997
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "task":Lcom/android/server/wm/Task;
    :cond_11
    return-void
.end method

.method public setFocusedApp(Landroid/os/IBinder;Z)V
    .registers 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "moveFocusNow"    # Z

    .prologue
    .line 4009
    const-string/jumbo v5, "android.permission.MANAGE_APP_TOKENS"

    .line 4010
    const-string/jumbo v6, "setFocusedApp()"

    .line 4009
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_15

    .line 4011
    new-instance v5, Ljava/lang/SecurityException;

    const-string/jumbo v6, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 4014
    :cond_15
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 4016
    if-nez p1, :cond_7c

    .line 4018
    const/4 v1, 0x0

    .line 4028
    :cond_1b
    :goto_1b
    :try_start_1b
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eq v5, v1, :cond_a1

    const/4 v0, 0x1

    .line 4029
    .local v0, "changed":Z
    :goto_20
    if-eqz v0, :cond_5e

    if-eqz v1, :cond_5e

    .line 4030
    iget v4, v1, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 4031
    .local v4, "requestedOrientation":I
    if-eqz v4, :cond_2b

    .line 4032
    const/4 v5, 0x6

    if-ne v4, v5, :cond_a4

    .line 4035
    :cond_2b
    :goto_2b
    sget-object v5, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setFocusedApp token: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, " requestedOrientation: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4036
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v5}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    const-string/jumbo v7, "single_hand_mode"

    const-string/jumbo v8, ""

    invoke-static {v5, v7, v8}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 4039
    .end local v4    # "requestedOrientation":I
    :cond_5e
    if-eqz v0, :cond_6a

    .line 4040
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 4041
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v5, v1}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    .line 4042
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusTaskRegionLocked()V

    .line 4045
    :cond_6a
    if-eqz p2, :cond_7a

    if-eqz v0, :cond_7a

    .line 4046
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 4047
    .local v2, "origId":J
    const/4 v5, 0x0

    const/4 v7, 0x1

    invoke-virtual {p0, v5, v7}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 4048
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_7a
    .catchall {:try_start_1b .. :try_end_7a} :catchall_9e

    .end local v2    # "origId":J
    :cond_7a
    monitor-exit v6

    .line 4008
    return-void

    .line 4020
    .end local v0    # "changed":Z
    :cond_7c
    :try_start_7c
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 4021
    .local v1, "newFocus":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_1b

    .line 4022
    const-string/jumbo v5, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "Attempted to set focus to non-existing app token: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v5, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9c
    .catchall {:try_start_7c .. :try_end_9c} :catchall_9e

    goto/16 :goto_1b

    .line 4014
    .end local v1    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :catchall_9e
    move-exception v5

    monitor-exit v6

    throw v5

    .line 4028
    :cond_a1
    const/4 v0, 0x0

    .restart local v0    # "changed":Z
    goto/16 :goto_20

    .line 4033
    .restart local v4    # "requestedOrientation":I
    :cond_a4
    const/16 v5, 0x8

    if-eq v4, v5, :cond_2b

    .line 4034
    const/16 v5, 0xb

    if-ne v4, v5, :cond_5e

    goto/16 :goto_2b
.end method

.method public setForceResizableTasks(Z)V
    .registers 4
    .param p1, "forceResizableTasks"    # Z

    .prologue
    .line 11379
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 11380
    :try_start_3
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mForceResizableTasks:Z
    :try_end_5
    .catchall {:try_start_3 .. :try_end_5} :catchall_7

    monitor-exit v0

    .line 11378
    return-void

    .line 11379
    :catchall_7
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method public setForcedDisplayDensityForUser(III)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "density"    # I
    .param p3, "userId"    # I

    .prologue
    const/4 v6, 0x0

    const/4 v3, 0x0

    .line 9280
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 9281
    const-string/jumbo v1, "android.permission.WRITE_SECURE_SETTINGS"

    .line 9280
    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_16

    .line 9283
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9286
    :cond_16
    if-eqz p1, :cond_21

    .line 9287
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v1, "Can only set the default display"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9290
    :cond_21
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 9291
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    const-string/jumbo v5, "setForcedDisplayDensityForUser"

    const/4 v4, 0x1

    move v2, p3

    .line 9290
    invoke-static/range {v0 .. v6}, Landroid/app/ActivityManager;->handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I

    move-result v10

    .line 9293
    .local v10, "targetUserId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 9295
    .local v8, "ident":J
    :try_start_36
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1
    :try_end_39
    .catchall {:try_start_36 .. :try_end_39} :catchall_5e

    .line 9296
    :try_start_39
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    .line 9297
    .local v7, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v7, :cond_46

    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    if-ne v0, v10, :cond_46

    .line 9298
    invoke-direct {p0, v7, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 9300
    :cond_46
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    .line 9301
    const-string/jumbo v2, "display_density_forced"

    .line 9302
    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v3

    .line 9300
    invoke-static {v0, v2, v3, v10}, Landroid/provider/Settings$Secure;->putStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;I)Z
    :try_end_56
    .catchall {:try_start_39 .. :try_end_56} :catchall_5b

    :try_start_56
    monitor-exit v1
    :try_end_57
    .catchall {:try_start_56 .. :try_end_57} :catchall_5e

    .line 9305
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9279
    return-void

    .line 9295
    .end local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_5b
    move-exception v0

    :try_start_5c
    monitor-exit v1

    throw v0
    :try_end_5e
    .catchall {:try_start_5c .. :try_end_5e} :catchall_5e

    .line 9304
    :catchall_5e
    move-exception v0

    .line 9305
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9304
    throw v0
.end method

.method public setForcedDisplayScalingMode(II)V
    .registers 9
    .param p1, "displayId"    # I
    .param p2, "mode"    # I

    .prologue
    .line 9148
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 9149
    const-string/jumbo v4, "android.permission.WRITE_SECURE_SETTINGS"

    .line 9148
    invoke-virtual {v1, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_14

    .line 9151
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9154
    :cond_14
    if-eqz p1, :cond_1f

    .line 9155
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v4, "Can only set the default display"

    invoke-direct {v1, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9157
    :cond_1f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 9159
    .local v2, "ident":J
    :try_start_23
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_49

    .line 9160
    :try_start_26
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9161
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_41

    .line 9162
    if-ltz p2, :cond_31

    const/4 v1, 0x1

    if-le p2, v1, :cond_32

    .line 9163
    :cond_31
    const/4 p2, 0x0

    .line 9165
    :cond_32
    invoke-direct {p0, v0, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayScalingModeLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 9166
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    .line 9167
    const-string/jumbo v5, "display_scaling_force"

    .line 9166
    invoke-static {v1, v5, p2}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
    :try_end_41
    .catchall {:try_start_26 .. :try_end_41} :catchall_46

    :cond_41
    :try_start_41
    monitor-exit v4
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_49

    .line 9171
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9147
    return-void

    .line 9159
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_46
    move-exception v1

    :try_start_47
    monitor-exit v4

    throw v1
    :try_end_49
    .catchall {:try_start_47 .. :try_end_49} :catchall_49

    .line 9170
    :catchall_49
    move-exception v1

    .line 9171
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9170
    throw v1
.end method

.method public setForcedDisplaySize(III)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    .prologue
    .line 9113
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 9114
    const-string/jumbo v7, "android.permission.WRITE_SECURE_SETTINGS"

    .line 9113
    invoke-virtual {v6, v7}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_14

    .line 9116
    new-instance v6, Ljava/lang/SecurityException;

    const-string/jumbo v7, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 9119
    :cond_14
    if-eqz p1, :cond_1f

    .line 9120
    new-instance v6, Ljava/lang/IllegalArgumentException;

    const-string/jumbo v7, "Can only set the default display"

    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 9122
    :cond_1f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 9124
    .local v4, "ident":J
    :try_start_23
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_7c

    .line 9127
    const/16 v2, 0xc8

    .line 9128
    .local v2, "MIN_WIDTH":I
    const/16 v1, 0xc8

    .line 9129
    .local v1, "MIN_HEIGHT":I
    const/4 v0, 0x2

    .line 9130
    .local v0, "MAX_SCALE":I
    :try_start_2b
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 9131
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_74

    .line 9132
    const/16 v6, 0xc8

    invoke-static {p2, v6}, Ljava/lang/Math;->max(II)I

    move-result v6

    .line 9133
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    mul-int/lit8 v8, v8, 0x2

    .line 9132
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    move-result p2

    .line 9134
    const/16 v6, 0xc8

    invoke-static {p3, v6}, Ljava/lang/Math;->max(II)I

    move-result v6

    .line 9135
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    mul-int/lit8 v8, v8, 0x2

    .line 9134
    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    move-result p3

    .line 9136
    invoke-direct {p0, v3, p2, p3}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    .line 9137
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v6

    .line 9138
    const-string/jumbo v8, "display_size_forced"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string/jumbo v10, ","

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 9137
    invoke-static {v6, v8, v9}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
    :try_end_74
    .catchall {:try_start_2b .. :try_end_74} :catchall_79

    :cond_74
    :try_start_74
    monitor-exit v7
    :try_end_75
    .catchall {:try_start_74 .. :try_end_75} :catchall_7c

    .line 9142
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9112
    return-void

    .line 9124
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_79
    move-exception v6

    :try_start_7a
    monitor-exit v7

    throw v6
    :try_end_7c
    .catchall {:try_start_7a .. :try_end_7c} :catchall_7c

    .line 9141
    .end local v0    # "MAX_SCALE":I
    .end local v1    # "MIN_HEIGHT":I
    .end local v2    # "MIN_WIDTH":I
    :catchall_7c
    move-exception v6

    .line 9142
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9141
    throw v6
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .registers 8
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    .prologue
    const/4 v5, 0x0

    .line 9779
    if-eqz p1, :cond_35

    const/4 v0, 0x1

    .line 9781
    .local v0, "hold":Z
    :goto_4
    if-eqz v0, :cond_16

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    if-eq v2, p1, :cond_16

    .line 9782
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v3, Landroid/os/WorkSource;

    iget v4, p1, Lcom/android/server/wm/Session;->mUid:I

    invoke-direct {v3, v4}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 9784
    :cond_16
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    .line 9786
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v1

    .line 9787
    .local v1, "state":Z
    if-eq v0, v1, :cond_34

    .line 9788
    if-eqz v0, :cond_37

    .line 9793
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    iget-object v2, v2, Lcom/android/server/wm/WindowSurfacePlacer;->mHoldScreenWindow:Lcom/android/server/wm/WindowState;

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 9794
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 9795
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 9796
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStartedLw()V

    .line 9778
    :cond_34
    :goto_34
    return-void

    .line 9779
    .end local v0    # "hold":Z
    .end local v1    # "state":Z
    :cond_35
    const/4 v0, 0x0

    goto :goto_4

    .line 9802
    .restart local v0    # "hold":Z
    .restart local v1    # "state":Z
    :cond_37
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockHoldingWindow:Lcom/android/server/wm/WindowState;

    .line 9803
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    iget-object v2, v2, Lcom/android/server/wm/WindowSurfacePlacer;->mObsuringWindow:Lcom/android/server/wm/WindowState;

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastWakeLockObscuringWindow:Lcom/android/server/wm/WindowState;

    .line 9804
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    .line 9805
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    goto :goto_34
.end method

.method public setInTouchMode(Z)V
    .registers 4
    .param p1, "mode"    # Z

    .prologue
    .line 6192
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 6193
    :try_start_3
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z
    :try_end_5
    .catchall {:try_start_3 .. :try_end_5} :catchall_7

    monitor-exit v0

    .line 6191
    return-void

    .line 6192
    :catchall_7
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .registers 13
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    .prologue
    .line 2718
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2720
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_4f

    .line 2721
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 2727
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_47

    .line 2728
    const/4 v3, 0x0

    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 2729
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v3, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2730
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v3, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 2731
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    invoke-virtual {v3, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 2732
    iput p3, v2, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    .line 2733
    iget v3, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    const/high16 v5, 0x3f800000    # 1.0f

    cmpl-float v3, v3, v5

    if-eqz v3, :cond_3f

    .line 2734
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    .line 2735
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    .line 2736
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v3, v5}, Landroid/graphics/Region;->scale(F)V

    .line 2738
    :cond_3f
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 2739
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_47
    .catchall {:try_start_8 .. :try_end_47} :catchall_4c

    :cond_47
    :try_start_47
    monitor-exit v4
    :try_end_48
    .catchall {:try_start_47 .. :try_end_48} :catchall_4f

    .line 2743
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2717
    return-void

    .line 2720
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_4c
    move-exception v3

    :try_start_4d
    monitor-exit v4

    throw v3
    :try_end_4f
    .catchall {:try_start_4d .. :try_end_4f} :catchall_4f

    .line 2742
    :catchall_4f
    move-exception v3

    .line 2743
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2742
    throw v3
.end method

.method public setNewConfiguration(Landroid/content/res/Configuration;)[I
    .registers 5
    .param p1, "config"    # Landroid/content/res/Configuration;

    .prologue
    .line 3895
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 3896
    const-string/jumbo v2, "setNewConfiguration()"

    .line 3895
    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 3897
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 3900
    :cond_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3901
    :try_start_18
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    if-eqz v1, :cond_24

    .line 3902
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 3903
    const-string/jumbo v1, "new-config"

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 3905
    :cond_24
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v1, p1}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I
    :try_end_29
    .catchall {:try_start_18 .. :try_end_29} :catchall_44

    move-result v1

    if-eqz v1, :cond_32

    const/4 v0, 0x1

    .line 3906
    .local v0, "configChanged":Z
    :goto_2d
    if-nez v0, :cond_34

    .line 3907
    const/4 v1, 0x0

    monitor-exit v2

    return-object v1

    .line 3905
    .end local v0    # "configChanged":Z
    :cond_32
    const/4 v0, 0x0

    .restart local v0    # "configChanged":Z
    goto :goto_2d

    .line 3909
    :cond_34
    :try_start_34
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->prepareFreezingAllTaskBounds()V

    .line 3910
    new-instance v1, Landroid/content/res/Configuration;

    invoke-direct {v1, p1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    .line 3911
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->onConfigurationChanged()[I
    :try_end_41
    .catchall {:try_start_34 .. :try_end_41} :catchall_44

    move-result-object v1

    monitor-exit v2

    return-object v1

    .line 3900
    .end local v0    # "configChanged":Z
    :catchall_44
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public setOverscan(IIIII)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    .prologue
    .line 9413
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 9414
    const-string/jumbo v2, "android.permission.WRITE_SECURE_SETTINGS"

    .line 9413
    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 9416
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v2, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9419
    :cond_14
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9421
    .local v6, "ident":J
    :try_start_18
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8
    :try_end_1b
    .catchall {:try_start_18 .. :try_end_1b} :catchall_31

    .line 9422
    :try_start_1b
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 9423
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_29

    move-object v0, p0

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    .line 9424
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    :try_end_29
    .catchall {:try_start_1b .. :try_end_29} :catchall_2e

    :cond_29
    :try_start_29
    monitor-exit v8
    :try_end_2a
    .catchall {:try_start_29 .. :try_end_2a} :catchall_31

    .line 9428
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9412
    return-void

    .line 9421
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_2e
    move-exception v0

    :try_start_2f
    monitor-exit v8

    throw v0
    :try_end_31
    .catchall {:try_start_2f .. :try_end_31} :catchall_31

    .line 9427
    :catchall_31
    move-exception v0

    .line 9428
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9427
    throw v0
.end method

.method public setRecentsVisibility(Z)V
    .registers 4
    .param p1, "visible"    # Z

    .prologue
    .line 10314
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 10316
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10320
    :cond_14
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10321
    :try_start_17
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setRecentsVisibilityLw(Z)V
    :try_end_1c
    .catchall {:try_start_17 .. :try_end_1c} :catchall_1e

    monitor-exit v1

    .line 10313
    return-void

    .line 10320
    :catchall_1e
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public setReplacingWindow(Landroid/os/IBinder;Z)V
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "animate"    # Z

    .prologue
    .line 11239
    const/4 v0, 0x0

    .line 11240
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11241
    :try_start_4
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 11242
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_15

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v1

    if-eqz v1, :cond_15

    .line 11247
    invoke-virtual {v0, p2}, Lcom/android/server/wm/AppWindowToken;->setReplacingWindows(Z)V
    :try_end_13
    .catchall {:try_start_4 .. :try_end_13} :catchall_31

    monitor-exit v2

    .line 11238
    return-void

    .line 11243
    :cond_15
    :try_start_15
    const-string/jumbo v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to set replacing window on non-existing app token "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2f
    .catchall {:try_start_15 .. :try_end_2f} :catchall_31

    monitor-exit v2

    .line 11245
    return-void

    .line 11240
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_31
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public setReplacingWindows(Landroid/os/IBinder;Z)V
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "childrenOnly"    # Z

    .prologue
    .line 11262
    const/4 v0, 0x0

    .line 11263
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11264
    :try_start_4
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 11265
    .local v0, "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_1b

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v1

    if-eqz v1, :cond_1b

    .line 11271
    if-eqz p2, :cond_37

    .line 11272
    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->setReplacingChildren()V

    .line 11277
    :goto_15
    const/4 v1, 0x1

    invoke-virtual {p0, p1, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleClearReplacingWindowIfNeeded(Landroid/os/IBinder;Z)V
    :try_end_19
    .catchall {:try_start_4 .. :try_end_19} :catchall_3c

    monitor-exit v2

    .line 11261
    return-void

    .line 11266
    :cond_1b
    :try_start_1b
    const-string/jumbo v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "Attempted to set replacing window on non-existing app token "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_35
    .catchall {:try_start_1b .. :try_end_35} :catchall_3c

    monitor-exit v2

    .line 11268
    return-void

    .line 11274
    :cond_37
    const/4 v1, 0x0

    :try_start_38
    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppWindowToken;->setReplacingWindows(Z)V
    :try_end_3b
    .catchall {:try_start_38 .. :try_end_3b} :catchall_3c

    goto :goto_15

    .line 11263
    .end local v0    # "appWindowToken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3c
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public setResizeDimLayer(ZIF)V
    .registers 6
    .param p1, "visible"    # Z
    .param p2, "targetStackId"    # I
    .param p3, "alpha"    # F

    .prologue
    .line 11344
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 11345
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v0

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/DockedStackDividerController;->setResizeDimLayer(ZIF)V
    :try_end_e
    .catchall {:try_start_3 .. :try_end_e} :catchall_10

    monitor-exit v1

    .line 11343
    return-void

    .line 11344
    :catchall_10
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public setScreenCaptureDisabled(IZ)V
    .registers 11
    .param p1, "userId"    # I
    .param p2, "disabled"    # Z

    .prologue
    .line 2360
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 2361
    .local v0, "callingUid":I
    const/16 v5, 0x3e8

    if-eq v0, v5, :cond_11

    .line 2362
    new-instance v5, Ljava/lang/SecurityException;

    const-string/jumbo v6, "Only system can call setScreenCaptureDisabled."

    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 2365
    :cond_11
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 2366
    :try_start_14
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mScreenCaptureDisabled:Landroid/util/SparseArray;

    invoke-static {p2}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v7

    invoke-virtual {v5, p1, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 2368
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "displayNdx":I
    :goto_25
    if-ltz v1, :cond_58

    .line 2369
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v5, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 2370
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v3, v5, -0x1

    .local v3, "winNdx":I
    :goto_39
    if-ltz v3, :cond_55

    .line 2371
    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 2372
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v5, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v5, :cond_52

    iget v5, v2, Lcom/android/server/wm/WindowState;->mOwnerUid:I

    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    if-ne p1, v5, :cond_52

    .line 2373
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v5, p2}, Lcom/android/server/wm/WindowStateAnimator;->setSecureLocked(Z)V
    :try_end_52
    .catchall {:try_start_14 .. :try_end_52} :catchall_5a

    .line 2370
    :cond_52
    add-int/lit8 v3, v3, -0x1

    goto :goto_39

    .line 2368
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_55
    add-int/lit8 v1, v1, -0x1

    goto :goto_25

    .end local v3    # "winNdx":I
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_58
    monitor-exit v6

    .line 2359
    return-void

    .line 2365
    .end local v1    # "displayNdx":I
    :catchall_5a
    move-exception v5

    monitor-exit v6

    throw v5
.end method

.method public setSingleHandMode(I)V
    .registers 5
    .param p1, "singleHandMode"    # I

    .prologue
    .line 11836
    sget-object v0, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "cur: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mSingleHandMode:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " to: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11837
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mSingleHandMode:I

    if-ne v0, p1, :cond_2b

    return-void

    .line 11838
    :cond_2b
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mSingleHandMode:I

    .line 11835
    return-void
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .registers 3
    .param p1, "value"    # Ljava/lang/String;

    .prologue
    .line 6340
    const-string/jumbo v0, "persist.sys.strictmode.visual"

    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 6339
    return-void
.end method

.method public setTaskDockedResizing(IZ)V
    .registers 8
    .param p1, "taskId"    # I
    .param p2, "resizing"    # Z

    .prologue
    .line 5431
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5432
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 5433
    .local v0, "task":Lcom/android/server/wm/Task;
    if-nez v0, :cond_2f

    .line 5434
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->TAG:Ljava/lang/String;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setTaskDockedResizing: taskId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, " not found."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2d
    .catchall {:try_start_3 .. :try_end_2d} :catchall_35

    monitor-exit v2

    .line 5435
    return-void

    .line 5437
    :cond_2f
    const/4 v1, 0x1

    :try_start_30
    invoke-virtual {v0, p2, v1}, Lcom/android/server/wm/Task;->setDragResizing(ZI)V
    :try_end_33
    .catchall {:try_start_30 .. :try_end_33} :catchall_35

    monitor-exit v2

    .line 5430
    return-void

    .line 5431
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_35
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public setTaskResizeable(II)V
    .registers 6
    .param p1, "taskId"    # I
    .param p2, "resizeMode"    # I

    .prologue
    .line 11370
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11371
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/Task;

    .line 11372
    .local v0, "task":Lcom/android/server/wm/Task;
    if-eqz v0, :cond_10

    .line 11373
    invoke-virtual {v0, p2}, Lcom/android/server/wm/Task;->setResizeable(I)V
    :try_end_10
    .catchall {:try_start_3 .. :try_end_10} :catchall_12

    :cond_10
    monitor-exit v2

    .line 11369
    return-void

    .line 11370
    .end local v0    # "task":Lcom/android/server/wm/Task;
    :catchall_12
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZZ)Z
    .registers 24
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "visible"    # Z
    .param p4, "transit"    # I
    .param p5, "performLayout"    # Z
    .param p6, "isVoiceInteraction"    # Z

    .prologue
    .line 4450
    const/4 v9, 0x0

    .line 4452
    .local v9, "delayed":Z
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move/from16 v0, p3

    if-ne v2, v0, :cond_13

    .line 4453
    if-eqz p3, :cond_b3

    const/4 v2, 0x0

    :goto_c
    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 4454
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 4462
    :cond_13
    const/4 v13, 0x0

    .line 4463
    .local v13, "visibilityChanged":Z
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    move/from16 v0, p3

    if-eq v2, v0, :cond_30

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-eqz v2, :cond_28

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mIsExiting:Z

    if-nez v2, :cond_30

    .line 4464
    :cond_28
    if-eqz p3, :cond_140

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->waitingForReplacement()Z

    move-result v2

    .line 4463
    if-eqz v2, :cond_140

    .line 4465
    :cond_30
    const/4 v8, 0x0

    .line 4470
    .local v8, "changed":Z
    const/4 v11, 0x0

    .line 4472
    .local v11, "runningAppAnimation":Z
    const/4 v2, -0x1

    move/from16 v0, p4

    if-eq v0, v2, :cond_78

    .line 4473
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    sget-object v3, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    if-ne v2, v3, :cond_48

    .line 4474
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->setNullAnimation()V

    :cond_48
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move/from16 v5, p4

    move/from16 v6, p3

    move/from16 v7, p6

    .line 4476
    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    move-result v2

    if-eqz v2, :cond_5c

    .line 4477
    const/4 v11, 0x1

    const/4 v9, 0x1

    .line 4479
    :cond_5c
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v15

    .line 4481
    .local v15, "window":Lcom/android/server/wm/WindowState;
    if-eqz v15, :cond_77

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v2, :cond_77

    .line 4482
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    if-nez v2, :cond_77

    .line 4483
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    move/from16 v0, p4

    invoke-virtual {v2, v15, v0}, Lcom/android/server/wm/AccessibilityController;->onAppWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 4485
    :cond_77
    const/4 v8, 0x1

    .line 4488
    .end local v15    # "window":Lcom/android/server/wm/WindowState;
    :cond_78
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v16

    .line 4489
    .local v16, "windowsCount":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_81
    move/from16 v0, v16

    if-ge v10, v0, :cond_108

    .line 4490
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/wm/WindowState;

    .line 4491
    .local v14, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-ne v14, v2, :cond_b6

    .line 4495
    if-nez p3, :cond_b0

    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v2

    if-eqz v2, :cond_b0

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->isAnimating()Z

    move-result v2

    if-eqz v2, :cond_b0

    .line 4496
    const/4 v2, 0x1

    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mAnimatingExit:Z

    .line 4497
    const/4 v2, 0x1

    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    .line 4498
    const/4 v2, 0x1

    iput-boolean v2, v14, Lcom/android/server/wm/WindowState;->mWindowRemovalAllowed:Z

    .line 4489
    :cond_b0
    :goto_b0
    add-int/lit8 v10, v10, 0x1

    goto :goto_81

    .line 4453
    .end local v8    # "changed":Z
    .end local v10    # "i":I
    .end local v11    # "runningAppAnimation":Z
    .end local v13    # "visibilityChanged":Z
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_b3
    const/4 v2, 0x1

    goto/16 :goto_c

    .line 4505
    .restart local v8    # "changed":Z
    .restart local v10    # "i":I
    .restart local v11    # "runningAppAnimation":Z
    .restart local v13    # "visibilityChanged":Z
    .restart local v14    # "win":Lcom/android/server/wm/WindowState;
    .restart local v16    # "windowsCount":I
    :cond_b6
    if-eqz p3, :cond_e0

    .line 4506
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v2

    if-nez v2, :cond_b0

    .line 4507
    if-nez v11, :cond_db

    .line 4508
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 4509
    const/4 v3, 0x1

    const/4 v4, 0x1

    .line 4508
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 4511
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v2, :cond_db

    .line 4512
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    if-nez v2, :cond_db

    .line 4513
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    .line 4514
    const/4 v3, 0x1

    .line 4513
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 4517
    :cond_db
    const/4 v8, 0x1

    .line 4518
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    goto :goto_b0

    .line 4520
    :cond_e0
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v2

    if-eqz v2, :cond_b0

    .line 4521
    if-nez v11, :cond_103

    .line 4522
    iget-object v2, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 4523
    const/4 v3, 0x2

    const/4 v4, 0x0

    .line 4522
    invoke-virtual {v2, v3, v4}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 4525
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v2, :cond_103

    .line 4526
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v2

    if-nez v2, :cond_103

    .line 4527
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    .line 4528
    const/4 v3, 0x2

    .line 4527
    invoke-virtual {v2, v14, v3}, Lcom/android/server/wm/AccessibilityController;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 4531
    :cond_103
    const/4 v8, 0x1

    .line 4532
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    goto :goto_b0

    .line 4536
    .end local v14    # "win":Lcom/android/server/wm/WindowState;
    :cond_108
    if-eqz p3, :cond_176

    const/4 v2, 0x0

    :goto_10b
    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 4537
    const/4 v13, 0x1

    .line 4538
    if-nez p3, :cond_178

    .line 4539
    const/4 v2, 0x1

    const/4 v3, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 4554
    :cond_11f
    :goto_11f
    if-eqz v8, :cond_140

    .line 4555
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v2}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 4556
    if-eqz p5, :cond_138

    .line 4557
    const/4 v2, 0x3

    .line 4558
    const/4 v3, 0x0

    .line 4557
    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 4559
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 4561
    :cond_138
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 4565
    .end local v8    # "changed":Z
    .end local v10    # "i":I
    .end local v11    # "runningAppAnimation":Z
    .end local v16    # "windowsCount":I
    :cond_140
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v2, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v2, :cond_149

    .line 4566
    const/4 v9, 0x1

    .line 4569
    :cond_149
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v10, v2, -0x1

    .restart local v10    # "i":I
    :goto_153
    if-ltz v10, :cond_157

    if-eqz v9, :cond_18b

    .line 4575
    :cond_157
    if-eqz v13, :cond_175

    .line 4576
    if-eqz p3, :cond_15d

    if-eqz v9, :cond_1a1

    .line 4583
    :cond_15d
    :goto_15d
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Landroid/util/ArraySet;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_175

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1b2

    .line 4592
    :cond_175
    :goto_175
    return v9

    .line 4536
    .restart local v8    # "changed":Z
    .restart local v11    # "runningAppAnimation":Z
    .restart local v16    # "windowsCount":I
    :cond_176
    const/4 v2, 0x1

    goto :goto_10b

    .line 4543
    :cond_178
    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 4544
    .local v12, "swin":Lcom/android/server/wm/WindowState;
    if-eqz v12, :cond_11f

    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v2

    if-nez v2, :cond_11f

    .line 4545
    const/4 v2, 0x0

    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    .line 4546
    const/4 v2, 0x0

    iput-boolean v2, v12, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    goto :goto_11f

    .line 4570
    .end local v8    # "changed":Z
    .end local v11    # "runningAppAnimation":Z
    .end local v12    # "swin":Lcom/android/server/wm/WindowState;
    .end local v16    # "windowsCount":I
    :cond_18b
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isWindowAnimationSet()Z

    move-result v2

    if-eqz v2, :cond_19e

    .line 4571
    const/4 v9, 0x1

    .line 4569
    :cond_19e
    add-int/lit8 v10, v10, -0x1

    goto :goto_153

    .line 4579
    :cond_1a1
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->mEnteringAnimation:Z

    .line 4580
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManagerAppTransitionNotifier:Landroid/view/WindowManagerInternal$AppTransitionListener;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v2, v3}, Landroid/view/WindowManagerInternal$AppTransitionListener;->onAppTransitionFinishedLocked(Landroid/os/IBinder;)V

    goto :goto_15d

    .line 4587
    :cond_1b2
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDockedDividerController()Lcom/android/server/wm/DockedStackDividerController;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DockedStackDividerController;->notifyAppVisibilityChanged()V

    goto :goto_175
.end method

.method setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "region"    # Landroid/graphics/Region;

    .prologue
    .line 2700
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 2702
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_1f

    .line 2703
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 2707
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_17

    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v3, :cond_17

    .line 2708
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowStateAnimator;->setTransparentRegionHintLocked(Landroid/graphics/Region;)V
    :try_end_17
    .catchall {:try_start_8 .. :try_end_17} :catchall_1c

    :cond_17
    :try_start_17
    monitor-exit v4
    :try_end_18
    .catchall {:try_start_17 .. :try_end_18} :catchall_1f

    .line 2712
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2699
    return-void

    .line 2702
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_1c
    move-exception v3

    :try_start_1d
    monitor-exit v4

    throw v3
    :try_end_1f
    .catchall {:try_start_1d .. :try_end_1f} :catchall_1f

    .line 2711
    :catchall_1f
    move-exception v3

    .line 2712
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 2711
    throw v3
.end method

.method public setTvPipVisibility(Z)V
    .registers 4
    .param p1, "visible"    # Z

    .prologue
    .line 10327
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 10329
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10333
    :cond_14
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10334
    :try_start_17
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setTvPipVisibilityLw(Z)V
    :try_end_1c
    .catchall {:try_start_17 .. :try_end_1c} :catchall_1e

    monitor-exit v1

    .line 10326
    return-void

    .line 10333
    :catchall_1e
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public setWindowOpaque(Landroid/os/IBinder;Z)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    .prologue
    .line 4433
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v0

    .line 4434
    :try_start_3
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_8

    monitor-exit v0

    .line 4432
    return-void

    .line 4433
    :catchall_8
    move-exception v1

    monitor-exit v0

    throw v1
.end method

.method public setWindowOpaqueLocked(Landroid/os/IBinder;Z)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "isOpaque"    # Z

    .prologue
    .line 4439
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 4440
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_11

    .line 4441
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 4442
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_11

    .line 4443
    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2, p2}, Lcom/android/server/wm/WindowStateAnimator;->setOpaqueLocked(Z)V

    .line 4438
    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :cond_11
    return-void
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .registers 6
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .prologue
    .line 6145
    const/4 v0, 0x0

    .line 6146
    .local v0, "first":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 6155
    :try_start_4
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z
    :try_end_6
    .catchall {:try_start_4 .. :try_end_6} :catchall_28

    if-nez v1, :cond_a

    monitor-exit v2

    .line 6156
    return-void

    .line 6158
    :cond_a
    :try_start_a
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z
    :try_end_c
    .catchall {:try_start_a .. :try_end_c} :catchall_28

    if-nez v1, :cond_13

    .line 6159
    if-nez p2, :cond_12

    monitor-exit v2

    .line 6160
    return-void

    .line 6162
    :cond_12
    const/4 v0, 0x1

    .line 6164
    :cond_13
    :try_start_13
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z
    :try_end_15
    .catchall {:try_start_13 .. :try_end_15} :catchall_28

    if-eqz v1, :cond_19

    monitor-exit v2

    .line 6165
    return-void

    .line 6167
    :cond_19
    const/4 v1, 0x1

    :try_start_1a
    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 6168
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, p1, p2}, Landroid/view/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V
    :try_end_21
    .catchall {:try_start_1a .. :try_end_21} :catchall_28

    monitor-exit v2

    .line 6170
    if-eqz v0, :cond_27

    .line 6171
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    .line 6144
    :cond_27
    return-void

    .line 6146
    :catchall_28
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public showCircularMask(Z)V
    .registers 10
    .param p1, "visible"    # Z

    .prologue
    .line 6228
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 6232
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_61

    .line 6234
    if-eqz p1, :cond_4e

    .line 6236
    :try_start_8
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    if-nez v0, :cond_43

    .line 6237
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 6238
    const v1, 0x10e00a4

    .line 6237
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v4

    .line 6239
    .local v4, "screenOffset":I
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 6240
    const v1, 0x10500a6

    .line 6239
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v5

    .line 6242
    .local v5, "maskThickness":I
    new-instance v0, Lcom/android/server/wm/CircularDisplayMask;

    .line 6243
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    .line 6244
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    .line 6245
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    .line 6246
    const/16 v7, 0x7e2

    .line 6245
    invoke-interface {v3, v7}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v3

    mul-int/lit16 v3, v3, 0x2710

    add-int/lit8 v3, v3, 0xa

    .line 6242
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/CircularDisplayMask;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;III)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    .line 6249
    .end local v4    # "screenOffset":I
    .end local v5    # "maskThickness":I
    :cond_43
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V
    :try_end_49
    .catchall {:try_start_8 .. :try_end_49} :catchall_5c

    .line 6255
    :cond_49
    :goto_49
    :try_start_49
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_4c
    .catchall {:try_start_49 .. :try_end_4c} :catchall_61

    monitor-exit v6

    .line 6227
    return-void

    .line 6250
    :cond_4e
    :try_start_4e
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    if-eqz v0, :cond_49

    .line 6251
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/wm/CircularDisplayMask;->setVisibility(Z)V

    .line 6252
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCircularDisplayMask:Lcom/android/server/wm/CircularDisplayMask;
    :try_end_5b
    .catchall {:try_start_4e .. :try_end_5b} :catchall_5c

    goto :goto_49

    .line 6254
    :catchall_5c
    move-exception v0

    .line 6255
    :try_start_5d
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 6254
    throw v0
    :try_end_61
    .catchall {:try_start_5d .. :try_end_61} :catchall_61

    .line 6228
    :catchall_61
    move-exception v0

    monitor-exit v6

    throw v0
.end method

.method public showEmulatorDisplayOverlay()V
    .registers 8

    .prologue
    .line 6263
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 6267
    :try_start_3
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_6
    .catchall {:try_start_3 .. :try_end_6} :catchall_39

    .line 6269
    :try_start_6
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    if-nez v0, :cond_29

    .line 6270
    new-instance v0, Lcom/android/server/wm/EmulatorDisplayOverlay;

    .line 6271
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 6272
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v3

    .line 6273
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    .line 6274
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    .line 6275
    const/16 v6, 0x7e2

    .line 6274
    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v5

    mul-int/lit16 v5, v5, 0x2710

    add-int/lit8 v5, v5, 0xa

    .line 6270
    invoke-direct {v0, v2, v3, v4, v5}, Lcom/android/server/wm/EmulatorDisplayOverlay;-><init>(Landroid/content/Context;Landroid/view/Display;Landroid/view/SurfaceSession;I)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    .line 6278
    :cond_29
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mEmulatorDisplayOverlay:Lcom/android/server/wm/EmulatorDisplayOverlay;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/EmulatorDisplayOverlay;->setVisibility(Z)V
    :try_end_2f
    .catchall {:try_start_6 .. :try_end_2f} :catchall_34

    .line 6280
    :try_start_2f
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V
    :try_end_32
    .catchall {:try_start_2f .. :try_end_32} :catchall_39

    monitor-exit v1

    .line 6262
    return-void

    .line 6279
    :catchall_34
    move-exception v0

    .line 6280
    :try_start_35
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 6279
    throw v0
    :try_end_39
    .catchall {:try_start_35 .. :try_end_39} :catchall_39

    .line 6263
    :catchall_39
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public showEmulatorDisplayOverlayIfNeeded()V
    .registers 4

    .prologue
    .line 6219
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 6220
    const v1, 0x1120095

    .line 6219
    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v0

    if-eqz v0, :cond_2a

    .line 6221
    const-string/jumbo v0, "ro.emulator.circular"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getBoolean(Ljava/lang/String;Z)Z

    move-result v0

    .line 6219
    if-eqz v0, :cond_2a

    .line 6222
    sget-boolean v0, Landroid/os/Build;->IS_EMULATOR:Z

    .line 6219
    if-eqz v0, :cond_2a

    .line 6223
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x24

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 6218
    :cond_2a
    return-void
.end method

.method showGlobalActions()V
    .registers 2

    .prologue
    .line 5675
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->showGlobalActions()V

    .line 5674
    return-void
.end method

.method public showRecentApps(Z)V
    .registers 3
    .param p1, "fromHome"    # Z

    .prologue
    .line 10481
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->showRecentApps(Z)V

    .line 10480
    return-void
.end method

.method public showStrictModeViolation(Z)V
    .registers 7
    .param p1, "on"    # Z

    .prologue
    .line 6291
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 6292
    .local v0, "pid":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    if-eqz p1, :cond_15

    const/4 v1, 0x1

    :goto_b
    const/16 v4, 0x19

    invoke-virtual {v3, v4, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 6290
    return-void

    .line 6292
    :cond_15
    const/4 v1, 0x0

    goto :goto_b
.end method

.method public shutdown(Z)V
    .registers 4
    .param p1, "confirm"    # Z

    .prologue
    .line 5854
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "userrequested"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 5853
    return-void
.end method

.method public startAppFreezingScreen(Landroid/os/IBinder;I)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "configChanges"    # I

    .prologue
    .line 4824
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    .line 4825
    const-string/jumbo v4, "setAppFreezingScreen()"

    .line 4824
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_15

    .line 4826
    new-instance v3, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 4829
    :cond_15
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 4830
    if-nez p2, :cond_22

    :try_start_1a
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_54

    move-result v3

    if-eqz v3, :cond_22

    monitor-exit v4

    .line 4832
    return-void

    .line 4835
    :cond_22
    :try_start_22
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v2

    .line 4836
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_2c

    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-nez v3, :cond_48

    .line 4837
    :cond_2c
    const-string/jumbo v3, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "Attempted to freeze screen with non-existing app token: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_46
    .catchall {:try_start_22 .. :try_end_46} :catchall_54

    monitor-exit v4

    .line 4838
    return-void

    .line 4840
    :cond_48
    :try_start_48
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4841
    .local v0, "origId":J
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;)V

    .line 4842
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_52
    .catchall {:try_start_48 .. :try_end_52} :catchall_54

    monitor-exit v4

    .line 4823
    return-void

    .line 4829
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_54
    move-exception v3

    monitor-exit v4

    throw v3
.end method

.method public startFreezingScreen(II)V
    .registers 10
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    .prologue
    .line 5500
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    .line 5501
    const-string/jumbo v3, "startFreezingScreen()"

    .line 5500
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 5502
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5505
    :cond_15
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 5506
    :try_start_18
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v2, :cond_3a

    .line 5507
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 5508
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_22
    .catchall {:try_start_18 .. :try_end_22} :catchall_41

    move-result-wide v0

    .line 5510
    .local v0, "origId":J
    const/4 v2, 0x0

    :try_start_24
    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 5511
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 5512
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v4, 0x1388

    const/16 v6, 0x1e

    invoke-virtual {v2, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_37
    .catchall {:try_start_24 .. :try_end_37} :catchall_3c

    .line 5514
    :try_start_37
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_3a
    .catchall {:try_start_37 .. :try_end_3a} :catchall_41

    .end local v0    # "origId":J
    :cond_3a
    monitor-exit v3

    .line 5499
    return-void

    .line 5513
    .restart local v0    # "origId":J
    :catchall_3c
    move-exception v2

    .line 5514
    :try_start_3d
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5513
    throw v2
    :try_end_41
    .catchall {:try_start_3d .. :try_end_41} :catchall_41

    .line 5505
    .end local v0    # "origId":J
    :catchall_41
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method startMovingTask(Landroid/view/IWindow;FF)Z
    .registers 10
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "startX"    # F
    .param p3, "startY"    # F

    .prologue
    const/4 v5, 0x0

    .line 7822
    const/4 v1, 0x0

    .line 7823
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 7824
    const/4 v2, 0x0

    const/4 v4, 0x0

    :try_start_7
    invoke-virtual {p0, v2, p1, v4}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 7827
    .local v1, "win":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    invoke-direct {p0, v1, v2, p2, p3}, Lcom/android/server/wm/WindowManagerService;->startPositioningLocked(Lcom/android/server/wm/WindowState;ZFF)Z
    :try_end_f
    .catchall {:try_start_7 .. :try_end_f} :catchall_22

    move-result v2

    if-nez v2, :cond_14

    monitor-exit v3

    .line 7828
    return v5

    :cond_14
    monitor-exit v3

    .line 7832
    :try_start_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v3

    iget v3, v3, Lcom/android/server/wm/Task;->mTaskId:I

    invoke-interface {v2, v3}, Landroid/app/IActivityManager;->setFocusedTask(I)V
    :try_end_20
    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_20} :catch_25

    .line 7834
    :goto_20
    const/4 v2, 0x1

    return v2

    .line 7823
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :catchall_22
    move-exception v2

    monitor-exit v3

    throw v2

    .line 7833
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    :catch_25
    move-exception v0

    .local v0, "e":Landroid/os/RemoteException;
    goto :goto_20
.end method

.method public startViewServer(I)Z
    .registers 6
    .param p1, "port"    # I

    .prologue
    const/4 v3, 0x0

    .line 7173
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7174
    return v3

    .line 7177
    :cond_8
    const-string/jumbo v1, "android.permission.DUMP"

    const-string/jumbo v2, "startViewServer"

    invoke-direct {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 7178
    return v3

    .line 7181
    :cond_15
    const/16 v1, 0x400

    if-ge p1, v1, :cond_1a

    .line 7182
    return v3

    .line 7185
    :cond_1a
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v1, :cond_38

    .line 7186
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v1

    if-nez v1, :cond_37

    .line 7188
    :try_start_26
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_2b
    .catch Ljava/io/IOException; {:try_start_26 .. :try_end_2b} :catch_2d

    move-result v1

    return v1

    .line 7189
    :catch_2d
    move-exception v0

    .line 7190
    .local v0, "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    const-string/jumbo v2, "View server did not start"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7193
    .end local v0    # "e":Ljava/io/IOException;
    :cond_37
    return v3

    .line 7197
    :cond_38
    :try_start_38
    new-instance v1, Lcom/android/server/wm/ViewServer;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    .line 7198
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_44
    .catch Ljava/io/IOException; {:try_start_38 .. :try_end_44} :catch_46

    move-result v1

    return v1

    .line 7199
    :catch_46
    move-exception v0

    .line 7200
    .restart local v0    # "e":Ljava/io/IOException;
    const-string/jumbo v1, "WindowManager"

    const-string/jumbo v2, "View server did not start"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7202
    return v3
.end method

.method public statusBarVisibilityChanged(I)V
    .registers 4
    .param p1, "visibility"    # I

    .prologue
    .line 10340
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string/jumbo v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_14

    .line 10342
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10346
    :cond_14
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 10347
    :try_start_17
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    .line 10348
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    move-result p1

    .line 10349
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)Z
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_24

    monitor-exit v1

    .line 10339
    return-void

    .line 10346
    :catchall_24
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public stopAppFreezingScreen(Landroid/os/IBinder;Z)V
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "force"    # Z

    .prologue
    .line 4848
    const-string/jumbo v3, "android.permission.MANAGE_APP_TOKENS"

    .line 4849
    const-string/jumbo v4, "setAppFreezingScreen()"

    .line 4848
    invoke-direct {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_15

    .line 4850
    new-instance v3, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 4853
    :cond_15
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 4854
    :try_start_18
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v2

    .line 4855
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_22

    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;
    :try_end_20
    .catchall {:try_start_18 .. :try_end_20} :catchall_31

    if-nez v3, :cond_24

    :cond_22
    monitor-exit v4

    .line 4856
    return-void

    .line 4858
    :cond_24
    :try_start_24
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4861
    .local v0, "origId":J
    const/4 v3, 0x1

    invoke-virtual {p0, v2, v3, p2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 4862
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2f
    .catchall {:try_start_24 .. :try_end_2f} :catchall_31

    monitor-exit v4

    .line 4847
    return-void

    .line 4853
    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_31
    move-exception v3

    monitor-exit v4

    throw v3
.end method

.method stopFreezingDisplayLocked()V
    .registers 19

    .prologue
    .line 10159
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v3, :cond_7

    .line 10160
    return-void

    .line 10163
    :cond_7
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    if-nez v3, :cond_13

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    if-lez v3, :cond_14

    .line 10172
    :cond_13
    return-void

    .line 10164
    :cond_14
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    const/4 v4, 0x1

    if-eq v3, v4, :cond_13

    .line 10165
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 10163
    if-nez v3, :cond_13

    .line 10165
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_13

    .line 10178
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 10179
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    sub-long/2addr v4, v6

    long-to-int v3, v4

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 10180
    new-instance v16, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    move-object/from16 v0, v16

    invoke-direct {v0, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 10181
    .local v16, "sb":Ljava/lang/StringBuilder;
    const-string/jumbo v3, "Screen frozen for "

    move-object/from16 v0, v16

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10182
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v4, v3

    move-object/from16 v0, v16

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 10183
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v3, :cond_70

    .line 10184
    const-string/jumbo v3, " due to "

    move-object/from16 v0, v16

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10185
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    move-object/from16 v0, v16

    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 10187
    :cond_70
    const-string/jumbo v3, "WindowManager"

    invoke-virtual/range {v16 .. v16}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10188
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x11

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 10189
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 10194
    const/16 v17, 0x0

    .line 10196
    .local v17, "updateRotation":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v12

    .line 10197
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v13

    .line 10199
    .local v13, "displayId":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 10200
    .local v2, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v2, :cond_136

    .line 10201
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v3

    .line 10200
    if-eqz v3, :cond_136

    .line 10204
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v14

    .line 10206
    .local v14, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v15

    .line 10207
    .local v15, "isDimming":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    invoke-interface {v3, v4, v5, v15}, Landroid/view/WindowManagerPolicy;->validateRotationAnimationLw(IIZ)Z

    move-result v3

    if-nez v3, :cond_ca

    .line 10208
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 10210
    :cond_ca
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v4, 0x2710

    .line 10211
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    move-result v6

    iget v7, v14, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 10212
    iget v8, v14, Landroid/view/DisplayInfo;->logicalHeight:I

    move-object/from16 v0, p0

    iget v9, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    move-object/from16 v0, p0

    iget v10, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    .line 10210
    invoke-virtual/range {v2 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    move-result v3

    if-eqz v3, :cond_128

    .line 10213
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 10227
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :goto_e9
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    .line 10235
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v11

    .line 10242
    .local v11, "configChanged":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0xf

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 10243
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v4, 0x7d0

    const/16 v6, 0xf

    invoke-virtual {v3, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 10245
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v3}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 10247
    if-eqz v17, :cond_11c

    .line 10249
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v3

    or-int/2addr v11, v3

    .line 10252
    :cond_11c
    if-eqz v11, :cond_127

    .line 10253
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x12

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 10158
    :cond_127
    return-void

    .line 10215
    .end local v11    # "configChanged":Z
    .restart local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v15    # "isDimming":Z
    :cond_128
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 10216
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v4, 0x0

    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 10217
    const/16 v17, 0x1

    goto :goto_e9

    .line 10220
    .end local v14    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "isDimming":Z
    :cond_136
    if-eqz v2, :cond_143

    .line 10221
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 10222
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v4, 0x0

    invoke-virtual {v3, v13, v4}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 10224
    :cond_143
    const/16 v17, 0x1

    goto :goto_e9
.end method

.method public stopFreezingScreen()V
    .registers 5

    .prologue
    .line 5522
    const-string/jumbo v2, "android.permission.FREEZE_SCREEN"

    .line 5523
    const-string/jumbo v3, "stopFreezingScreen()"

    .line 5522
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_15

    .line 5524
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires FREEZE_SCREEN permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5527
    :cond_15
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 5528
    :try_start_18
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-eqz v2, :cond_2e

    .line 5529
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 5530
    const-string/jumbo v2, "client"

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 5531
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_27
    .catchall {:try_start_18 .. :try_end_27} :catchall_35

    move-result-wide v0

    .line 5533
    .local v0, "origId":J
    :try_start_28
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V
    :try_end_2b
    .catchall {:try_start_28 .. :try_end_2b} :catchall_30

    .line 5535
    :try_start_2b
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_2e
    .catchall {:try_start_2b .. :try_end_2e} :catchall_35

    .end local v0    # "origId":J
    :cond_2e
    monitor-exit v3

    .line 5521
    return-void

    .line 5534
    .restart local v0    # "origId":J
    :catchall_30
    move-exception v2

    .line 5535
    :try_start_31
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5534
    throw v2
    :try_end_35
    .catchall {:try_start_31 .. :try_end_35} :catchall_35

    .line 5527
    .end local v0    # "origId":J
    :catchall_35
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method stopUsingSavedSurfaceLocked()V
    .registers 4

    .prologue
    .line 9008
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_8
    if-ltz v0, :cond_18

    .line 9009
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/AppWindowToken;

    .line 9010
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->stopUsingSavedSurfaceLocked()V

    .line 9008
    add-int/lit8 v0, v0, -0x1

    goto :goto_8

    .line 9012
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_18
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedEarlyAnim:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 9007
    return-void
.end method

.method public stopViewServer()Z
    .registers 4

    .prologue
    const/4 v2, 0x0

    .line 7220
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v0

    if-eqz v0, :cond_8

    .line 7221
    return v2

    .line 7224
    :cond_8
    const-string/jumbo v0, "android.permission.DUMP"

    const-string/jumbo v1, "stopViewServer"

    invoke-direct {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_15

    .line 7225
    return v2

    .line 7228
    :cond_15
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v0, :cond_20

    .line 7229
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    move-result v0

    return v0

    .line 7231
    :cond_20
    return v2
.end method

.method subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    .registers 5
    .param p1, "display"    # Landroid/graphics/Rect;
    .param p2, "insets"    # Landroid/graphics/Rect;
    .param p3, "inOutBounds"    # Landroid/graphics/Rect;

    .prologue
    .line 11459
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {v0, p1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 11460
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {v0, p2}, Landroid/graphics/Rect;->inset(Landroid/graphics/Rect;)V

    .line 11461
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect3:Landroid/graphics/Rect;

    invoke-virtual {p3, v0}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    .line 11458
    return-void
.end method

.method public subtractNonDecorInsets(Landroid/graphics/Rect;)V
    .registers 9
    .param p1, "inOutBounds"    # Landroid/graphics/Rect;

    .prologue
    .line 11450
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11451
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->getNonDecorInsetsLocked(Landroid/graphics/Rect;)V

    .line 11452
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v0

    .line 11453
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {v1, v5, v6, v3, v4}, Landroid/graphics/Rect;->set(IIII)V

    .line 11454
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    invoke-virtual {p0, v1, v3, p1}, Lcom/android/server/wm/WindowManagerService;->subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_20

    monitor-exit v2

    .line 11449
    return-void

    .line 11450
    .end local v0    # "di":Landroid/view/DisplayInfo;
    :catchall_20
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public subtractStableInsets(Landroid/graphics/Rect;)V
    .registers 9
    .param p1, "inOutBounds"    # Landroid/graphics/Rect;

    .prologue
    .line 11434
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 11435
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->getStableInsetsLocked(Landroid/graphics/Rect;)V

    .line 11436
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v0

    .line 11437
    .local v0, "di":Landroid/view/DisplayInfo;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    iget v3, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v4, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {v1, v5, v6, v3, v4}, Landroid/graphics/Rect;->set(IIII)V

    .line 11438
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect:Landroid/graphics/Rect;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpRect2:Landroid/graphics/Rect;

    invoke-virtual {p0, v1, v3, p1}, Lcom/android/server/wm/WindowManagerService;->subtractInsets(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;)V
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_20

    monitor-exit v2

    .line 11433
    return-void

    .line 11434
    .end local v0    # "di":Landroid/view/DisplayInfo;
    :catchall_20
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public switchInputMethod(Z)V
    .registers 4
    .param p1, "forwardDirection"    # Z

    .prologue
    .line 5845
    const-class v1, Landroid/view/inputmethod/InputMethodManagerInternal;

    invoke-static {v1}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/view/inputmethod/InputMethodManagerInternal;

    .line 5846
    .local v0, "inputMethodManagerInternal":Landroid/view/inputmethod/InputMethodManagerInternal;
    if-eqz v0, :cond_d

    .line 5847
    invoke-interface {v0, p1}, Landroid/view/inputmethod/InputMethodManagerInternal;->switchInputMethod(Z)V

    .line 5843
    :cond_d
    return-void
.end method

.method public systemReady()V
    .registers 5

    .prologue
    const/4 v0, 0x0

    .line 8253
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->systemReady()V

    .line 8254
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->judgeSingleHandSwitchBySize()Z

    move-result v1

    if-eqz v1, :cond_d

    const/4 v0, 0x1

    :cond_d
    sput v0, Lcom/android/server/wm/WindowManagerService;->mSingleHandSwitch:I

    .line 8255
    sget v0, Lcom/android/server/wm/WindowManagerService;->mSingleHandSwitch:I

    if-lez v0, :cond_25

    .line 8256
    new-instance v0, Lcom/android/server/wm/SingleHandAdapter;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mUiHandler:Landroid/os/Handler;

    invoke-direct {v0, v1, v2, v3, p0}, Lcom/android/server/wm/SingleHandAdapter;-><init>(Landroid/content/Context;Landroid/os/Handler;Landroid/os/Handler;Lcom/android/server/wm/WindowManagerService;)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mSingleHandAdapter:Lcom/android/server/wm/SingleHandAdapter;

    .line 8257
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mSingleHandAdapter:Lcom/android/server/wm/SingleHandAdapter;

    invoke-virtual {v0}, Lcom/android/server/wm/SingleHandAdapter;->registerLocked()V

    .line 8252
    :cond_25
    return-void
.end method

.method public thawRotation()V
    .registers 7

    .prologue
    const/4 v5, 0x0

    .line 6754
    const-string/jumbo v2, "android.permission.SET_ORIENTATION"

    .line 6755
    const-string/jumbo v3, "thawRotation()"

    .line 6754
    invoke-direct {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_16

    .line 6756
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "Requires SET_ORIENTATION permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6761
    :cond_16
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6763
    .local v0, "origId":J
    :try_start_1a
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v3, 0x0

    .line 6764
    const/16 v4, 0x309

    .line 6763
    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_22
    .catchall {:try_start_1a .. :try_end_22} :catchall_29

    .line 6766
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6769
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 6753
    return-void

    .line 6765
    :catchall_29
    move-exception v2

    .line 6766
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6765
    throw v2
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    .prologue
    .line 5793
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->unregisterInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 5792
    return-void
.end method

.method unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V
    .registers 14
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "unfreezeSurfaceNow"    # Z
    .param p3, "force"    # Z

    .prologue
    const/4 v6, 0x0

    .line 4763
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v4, :cond_65

    .line 4766
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 4767
    .local v0, "N":I
    const/4 v2, 0x0

    .line 4768
    .local v2, "unfrozeWindows":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_f
    if-ge v1, v0, :cond_3d

    .line 4769
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 4770
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-eqz v4, :cond_2d

    .line 4771
    iput-boolean v6, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    .line 4772
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_27

    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-eqz v4, :cond_30

    .line 4778
    :cond_27
    :goto_27
    iput v6, v3, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 4779
    const/4 v2, 0x1

    .line 4780
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->setDisplayLayoutNeeded()V

    .line 4768
    :cond_2d
    add-int/lit8 v1, v1, 0x1

    goto :goto_f

    .line 4773
    :cond_30
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    const/4 v5, 0x2

    if-eq v4, v5, :cond_27

    .line 4775
    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 4776
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    iput-boolean v6, v4, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    goto :goto_27

    .line 4783
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_3d
    if-nez p3, :cond_41

    if-eqz v2, :cond_59

    .line 4785
    :cond_41
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-boolean v6, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    .line 4786
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    .line 4787
    iget-wide v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 4786
    sub-long/2addr v6, v8

    long-to-int v5, v6

    iput v5, v4, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    .line 4788
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 4789
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 4791
    :cond_59
    if-eqz p2, :cond_65

    .line 4792
    if-eqz v2, :cond_62

    .line 4793
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V

    .line 4795
    :cond_62
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    .line 4762
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "unfrozeWindows":Z
    :cond_65
    return-void
.end method

.method public updateAppOpsState()V
    .registers 15

    .prologue
    const/4 v8, 0x1

    const/4 v9, 0x0

    .line 2658
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v10

    .line 2659
    :try_start_5
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 2660
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_c
    if-ge v0, v2, :cond_4f

    .line 2661
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 2662
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 2663
    .local v3, "numWindows":I
    const/4 v5, 0x0

    .local v5, "winNdx":I
    :goto_1f
    if-ge v5, v3, :cond_4c

    .line 2664
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 2665
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iget v7, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v11, -0x1

    if-eq v7, v11, :cond_45

    .line 2666
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    iget v11, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v12

    .line 2667
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v13

    .line 2666
    invoke-virtual {v7, v11, v12, v13}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    move-result v1

    .line 2668
    .local v1, "mode":I
    if-eqz v1, :cond_48

    .line 2669
    const/4 v7, 0x3

    if-ne v1, v7, :cond_4a

    move v7, v8

    .line 2668
    :goto_42
    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V
    :try_end_45
    .catchall {:try_start_5 .. :try_end_45} :catchall_51

    .line 2663
    .end local v1    # "mode":I
    :cond_45
    add-int/lit8 v5, v5, 0x1

    goto :goto_1f

    .restart local v1    # "mode":I
    :cond_48
    move v7, v8

    .line 2668
    goto :goto_42

    :cond_4a
    move v7, v9

    .line 2669
    goto :goto_42

    .line 2660
    .end local v1    # "mode":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_4c
    add-int/lit8 v0, v0, 0x1

    goto :goto_c

    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4f
    monitor-exit v10

    .line 2657
    return-void

    .line 2658
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_51
    move-exception v7

    monitor-exit v10

    throw v7
.end method

.method updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;
    .registers 16
    .param p1, "uiMode"    # I

    .prologue
    .line 7654
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 7657
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v12, 0x1

    if-eq v11, v12, :cond_7f

    .line 7658
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v12, 0x3

    if-ne v11, v12, :cond_81

    const/4 v10, 0x1

    .line 7659
    .local v10, "rotated":Z
    :goto_f
    if-eqz v10, :cond_83

    .line 7660
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 7661
    .local v9, "realdw":I
    :goto_13
    if-eqz v10, :cond_86

    .line 7662
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 7663
    .local v8, "realdh":I
    :goto_17
    move v5, v9

    .line 7664
    .local v5, "dw":I
    move v2, v8

    .line 7666
    .local v2, "dh":I
    iget-boolean v11, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    if-eqz v11, :cond_28

    .line 7667
    if-le v9, v8, :cond_89

    .line 7669
    int-to-float v11, v8

    const v12, 0x3fa66666    # 1.3f

    div-float/2addr v11, v12

    float-to-int v7, v11

    .line 7670
    .local v7, "maxw":I
    if-ge v7, v9, :cond_28

    .line 7671
    move v5, v7

    .line 7683
    .end local v7    # "maxw":I
    :cond_28
    :goto_28
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v11, v5, v2, v12, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(IIII)I

    move-result v1

    .line 7684
    .local v1, "appWidth":I
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget v12, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v11, v5, v2, v12, p1}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(IIII)I

    move-result v0

    .line 7685
    .local v0, "appHeight":I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v4

    .line 7686
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    iput v11, v4, Landroid/view/DisplayInfo;->rotation:I

    .line 7687
    iput v5, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 7688
    iput v2, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 7689
    iget v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    iput v11, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    .line 7690
    iput v1, v4, Landroid/view/DisplayInfo;->appWidth:I

    .line 7691
    iput v0, v4, Landroid/view/DisplayInfo;->appHeight:I

    .line 7692
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 7693
    sget-object v12, Landroid/content/res/CompatibilityInfo;->DEFAULT_COMPATIBILITY_INFO:Landroid/content/res/CompatibilityInfo;

    const/4 v13, 0x0

    .line 7692
    invoke-virtual {v4, v11, v12, v13}, Landroid/view/DisplayInfo;->getLogicalMetrics(Landroid/util/DisplayMetrics;Landroid/content/res/CompatibilityInfo;Landroid/content/res/Configuration;)V

    .line 7694
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    invoke-virtual {v4, v11}, Landroid/view/DisplayInfo;->getAppMetrics(Landroid/util/DisplayMetrics;)V

    .line 7695
    iget-boolean v11, v3, Lcom/android/server/wm/DisplayContent;->mDisplayScalingDisabled:Z

    if-eqz v11, :cond_93

    .line 7696
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    const/high16 v12, 0x40000000    # 2.0f

    or-int/2addr v11, v12

    iput v11, v4, Landroid/view/DisplayInfo;->flags:I

    .line 7701
    :goto_64
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    .line 7702
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v12

    .line 7701
    invoke-virtual {v11, v12, v4}, Landroid/hardware/display/DisplayManagerInternal;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 7704
    iget-object v11, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    const/4 v12, 0x0

    const/4 v13, 0x0

    invoke-virtual {v11, v12, v13, v5, v2}, Landroid/graphics/Rect;->set(IIII)V

    .line 7709
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 7710
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 7709
    invoke-static {v11, v12}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    move-result v11

    iput v11, p0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    .line 7711
    return-object v4

    .line 7657
    .end local v0    # "appHeight":I
    .end local v1    # "appWidth":I
    .end local v2    # "dh":I
    .end local v4    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v5    # "dw":I
    .end local v8    # "realdh":I
    .end local v9    # "realdw":I
    .end local v10    # "rotated":Z
    :cond_7f
    const/4 v10, 0x1

    goto :goto_f

    .line 7658
    :cond_81
    const/4 v10, 0x0

    goto :goto_f

    .line 7660
    .restart local v10    # "rotated":Z
    :cond_83
    iget v9, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .restart local v9    # "realdw":I
    goto :goto_13

    .line 7662
    :cond_86
    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    goto :goto_17

    .line 7675
    .restart local v2    # "dh":I
    .restart local v5    # "dw":I
    .restart local v8    # "realdh":I
    :cond_89
    int-to-float v11, v9

    const v12, 0x3fa66666    # 1.3f

    div-float/2addr v11, v12

    float-to-int v6, v11

    .line 7676
    .local v6, "maxh":I
    if-ge v6, v8, :cond_28

    .line 7677
    move v2, v6

    goto :goto_28

    .line 7698
    .end local v6    # "maxh":I
    .restart local v0    # "appHeight":I
    .restart local v1    # "appWidth":I
    .restart local v4    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_93
    iget v11, v4, Landroid/view/DisplayInfo;->flags:I

    const v12, -0x40000001    # -1.9999999f

    and-int/2addr v11, v12

    iput v11, v4, Landroid/view/DisplayInfo;->flags:I

    goto :goto_64
.end method

.method updateFocusedWindowLocked(IZ)Z
    .registers 15
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    .prologue
    const-wide/16 v10, 0x20

    const/4 v9, 0x3

    const/4 v8, 0x2

    const/4 v5, 0x0

    const/4 v6, 0x1

    .line 9950
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 9951
    .local v3, "newFocus":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eq v7, v3, :cond_81

    .line 9952
    const-string/jumbo v7, "wmUpdateFocus"

    invoke-static {v10, v11, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 9955
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 9956
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 9958
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9960
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eq p1, v6, :cond_27

    .line 9961
    if-eq p1, v9, :cond_27

    move v5, v6

    .line 9959
    :cond_27
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v2

    .line 9962
    .local v2, "imWindowChanged":Z
    if-eqz v2, :cond_33

    .line 9963
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9964
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 9969
    :cond_33
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 9970
    .local v4, "oldFocus":Lcom/android/server/wm/WindowState;
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 9971
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9973
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, v4, v3}, Landroid/view/WindowManagerPolicy;->focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)I

    move-result v1

    .line 9975
    .local v1, "focusChanged":I
    if-eqz v2, :cond_51

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eq v4, v5, :cond_51

    .line 9977
    if-ne p1, v8, :cond_75

    .line 9978
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v5, v0, v6, p2}, Lcom/android/server/wm/WindowSurfacePlacer;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 9980
    and-int/lit8 v1, v1, -0x2

    .line 9988
    :cond_51
    :goto_51
    and-int/lit8 v5, v1, 0x1

    if-eqz v5, :cond_5e

    .line 9990
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9991
    if-ne p1, v8, :cond_5e

    .line 9992
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v5, v0, v6, p2}, Lcom/android/server/wm/WindowSurfacePlacer;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 9997
    :cond_5e
    if-eq p1, v6, :cond_67

    .line 10000
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5, v7, p2}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    .line 10003
    :cond_67
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->adjustForImeIfNeeded(Lcom/android/server/wm/DisplayContent;)V

    .line 10008
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    invoke-virtual {v5, v4, v3}, Lcom/android/server/wm/DisplayContent;->scheduleToastWindowsTimeoutIfNeededLocked(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 10011
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 10012
    return v6

    .line 9981
    :cond_75
    if-ne p1, v9, :cond_51

    .line 9984
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayersController:Lcom/android/server/wm/WindowLayersController;

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    invoke-virtual {v5, v7}, Lcom/android/server/wm/WindowLayersController;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    goto :goto_51

    .line 10014
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_81
    return v5
.end method

.method public updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .registers 8
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    .prologue
    .line 3782
    const-string/jumbo v1, "android.permission.MANAGE_APP_TOKENS"

    .line 3783
    const-string/jumbo v4, "updateOrientationFromAppTokens()"

    .line 3782
    invoke-direct {p0, v1, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_15

    .line 3784
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 3787
    :cond_15
    const/4 v0, 0x0

    .line 3788
    .local v0, "config":Landroid/content/res/Configuration;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 3790
    .local v2, "ident":J
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 3791
    :try_start_1d
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    :try_end_20
    .catchall {:try_start_1d .. :try_end_20} :catchall_26

    move-result-object v0

    .local v0, "config":Landroid/content/res/Configuration;
    monitor-exit v1

    .line 3795
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3796
    return-object v0

    .line 3790
    .local v0, "config":Landroid/content/res/Configuration;
    :catchall_26
    move-exception v4

    monitor-exit v1

    throw v4
.end method

.method updateOrientationFromAppTokensLocked(Z)Z
    .registers 6
    .param p1, "inTransaction"    # Z

    .prologue
    .line 3860
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3862
    .local v0, "ident":J
    :try_start_4
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getOrientationLocked()I

    move-result v2

    .line 3863
    .local v2, "req":I
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    if-eq v2, v3, :cond_1e

    .line 3864
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    .line 3867
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3, v2}, Landroid/view/WindowManagerPolicy;->setCurrentOrientationLw(I)V

    .line 3868
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z
    :try_end_16
    .catchall {:try_start_4 .. :try_end_16} :catchall_23

    move-result v3

    if-eqz v3, :cond_1e

    .line 3870
    const/4 v3, 0x1

    .line 3876
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3870
    return v3

    .line 3874
    :cond_1e
    const/4 v3, 0x0

    .line 3876
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3874
    return v3

    .line 3875
    .end local v2    # "req":I
    :catchall_23
    move-exception v3

    .line 3876
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3875
    throw v3
.end method

.method updatePointerIcon(Landroid/view/IWindow;)V
    .registers 12
    .param p1, "client"    # Landroid/view/IWindow;

    .prologue
    .line 11508
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    monitor-enter v7

    .line 11509
    :try_start_3
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get0(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)Z
    :try_end_8
    .catchall {:try_start_3 .. :try_end_8} :catchall_23

    move-result v6

    if-nez v6, :cond_d

    monitor-exit v7

    .line 11510
    return-void

    .line 11512
    :cond_d
    :try_start_d
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get1(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F

    move-result v3

    .line 11513
    .local v3, "mouseX":F
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mMousePositionTracker:Lcom/android/server/wm/WindowManagerService$MousePositionTracker;

    invoke-static {v6}, Lcom/android/server/wm/WindowManagerService$MousePositionTracker;->-get2(Lcom/android/server/wm/WindowManagerService$MousePositionTracker;)F
    :try_end_18
    .catchall {:try_start_d .. :try_end_18} :catchall_23

    move-result v4

    .local v4, "mouseY":F
    monitor-exit v7

    .line 11516
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 11517
    :try_start_1d
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;
    :try_end_1f
    .catchall {:try_start_1d .. :try_end_1f} :catchall_74

    if-eqz v6, :cond_26

    monitor-exit v7

    .line 11519
    return-void

    .line 11508
    .end local v3    # "mouseX":F
    .end local v4    # "mouseY":F
    :catchall_23
    move-exception v6

    monitor-exit v7

    throw v6

    .line 11521
    .restart local v3    # "mouseX":F
    .restart local v4    # "mouseY":F
    :cond_26
    const/4 v6, 0x0

    const/4 v8, 0x0

    :try_start_28
    invoke-virtual {p0, v6, p1, v8}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 11522
    .local v0, "callingWin":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_4a

    .line 11523
    const-string/jumbo v6, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "Bad requesting window "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_48
    .catchall {:try_start_28 .. :try_end_48} :catchall_74

    monitor-exit v7

    .line 11524
    return-void

    .line 11526
    :cond_4a
    :try_start_4a
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayContent()Lcom/android/server/wm/DisplayContent;
    :try_end_4d
    .catchall {:try_start_4a .. :try_end_4d} :catchall_74

    move-result-object v1

    .line 11527
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_52

    monitor-exit v7

    .line 11528
    return-void

    .line 11531
    :cond_52
    :try_start_52
    invoke-virtual {v1, v3, v4}, Lcom/android/server/wm/DisplayContent;->getTouchableWinAtPointLocked(FF)Lcom/android/server/wm/WindowState;
    :try_end_55
    .catchall {:try_start_52 .. :try_end_55} :catchall_74

    move-result-object v5

    .line 11532
    .local v5, "windowUnderPointer":Lcom/android/server/wm/WindowState;
    if-eq v5, v0, :cond_5a

    monitor-exit v7

    .line 11533
    return-void

    .line 11536
    :cond_5a
    :try_start_5a
    iget-object v6, v5, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 11537
    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowState;->translateToWindowX(F)F

    move-result v8

    .line 11538
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowState;->translateToWindowY(F)F

    move-result v9

    .line 11536
    invoke-interface {v6, v8, v9}, Landroid/view/IWindow;->updatePointerIcon(FF)V
    :try_end_67
    .catch Landroid/os/RemoteException; {:try_start_5a .. :try_end_67} :catch_69
    .catchall {:try_start_5a .. :try_end_67} :catchall_74

    :goto_67
    monitor-exit v7

    .line 11505
    return-void

    .line 11539
    :catch_69
    move-exception v2

    .line 11540
    .local v2, "e":Landroid/os/RemoteException;
    :try_start_6a
    const-string/jumbo v6, "WindowManager"

    const-string/jumbo v8, "unable to update pointer icon"

    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_73
    .catchall {:try_start_6a .. :try_end_73} :catchall_74

    goto :goto_67

    .line 11516
    .end local v0    # "callingWin":Lcom/android/server/wm/WindowState;
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "e":Landroid/os/RemoteException;
    .end local v5    # "windowUnderPointer":Lcom/android/server/wm/WindowState;
    :catchall_74
    move-exception v6

    monitor-exit v7

    throw v6
.end method

.method updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    .registers 10
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 9645
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 9646
    .local v3, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_12

    iget v4, p1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    if-ne v4, v5, :cond_12

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    move-result v4

    if-eqz v4, :cond_13

    .line 9644
    :cond_12
    :goto_12
    return-void

    .line 9647
    :cond_13
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getTask()Lcom/android/server/wm/Task;

    move-result-object v2

    .line 9656
    .local v2, "task":Lcom/android/server/wm/Task;
    if-eqz v2, :cond_22

    iget-object v4, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->getBoundsAnimating()Z

    move-result v4

    if-eqz v4, :cond_22

    .line 9657
    return-void

    .line 9659
    :cond_22
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setReportResizeHints()Z

    .line 9660
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v0

    .line 9665
    .local v0, "configChanged":Z
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDragResizeChanged()Z

    move-result v4

    if-eqz v4, :cond_75

    .line 9666
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDragResizingChangeReported()Z

    move-result v4

    if-eqz v4, :cond_73

    const/4 v1, 0x0

    .line 9676
    .local v1, "dragResizingChanged":Z
    :goto_36
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 9678
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    if-nez v4, :cond_77

    .line 9679
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    .line 9678
    if-nez v4, :cond_77

    .line 9680
    iget-boolean v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    .line 9678
    if-nez v4, :cond_77

    .line 9681
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOutsetsChanged:Z

    .line 9678
    if-nez v4, :cond_77

    .line 9682
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mFrameSizeChanged:Z

    .line 9678
    if-nez v4, :cond_77

    if-nez v0, :cond_77

    if-nez v1, :cond_77

    .line 9685
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizingReported()Z

    move-result v4

    if-eqz v4, :cond_77

    .line 9738
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-eqz v4, :cond_12

    .line 9739
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v4

    if-eqz v4, :cond_12

    .line 9743
    const/4 v4, 0x0

    iput-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 9744
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    .line 9745
    iget-wide v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 9744
    sub-long/2addr v4, v6

    long-to-int v4, v4

    iput v4, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    goto :goto_12

    .line 9666
    .end local v1    # "dragResizingChanged":Z
    :cond_73
    const/4 v1, 0x1

    .restart local v1    # "dragResizingChanged":Z
    goto :goto_36

    .line 9665
    .end local v1    # "dragResizingChanged":Z
    :cond_75
    const/4 v1, 0x0

    .restart local v1    # "dragResizingChanged":Z
    goto :goto_36

    .line 9705
    :cond_77
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_85

    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mAppDied:Z

    if-eqz v4, :cond_85

    .line 9706
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->removeAllDeadWindows()V

    .line 9707
    return-void

    .line 9710
    :cond_85
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastOverscanInsets:Landroid/graphics/Rect;

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 9711
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 9712
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastVisibleInsets:Landroid/graphics/Rect;

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 9713
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastStableInsets:Landroid/graphics/Rect;

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mStableInsets:Landroid/graphics/Rect;

    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 9714
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mLastOutsets:Landroid/graphics/Rect;

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mOutsets:Landroid/graphics/Rect;

    invoke-virtual {v4, v5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 9715
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V

    .line 9721
    iget-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-nez v4, :cond_b7

    if-nez v1, :cond_b7

    .line 9722
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isResizedWhileNotDragResizing()Z

    move-result v4

    .line 9721
    if-eqz v4, :cond_c3

    .line 9728
    :cond_b7
    const/4 v4, 0x1

    iput v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    .line 9729
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_c3

    .line 9730
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->clearAllDrawn()V

    .line 9733
    :cond_c3
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_12

    .line 9736
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_12
.end method

.method public updateRotation(ZZ)V
    .registers 3
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .prologue
    .line 6781
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 6780
    return-void
.end method

.method public updateRotationUnchecked(ZZ)V
    .registers 9
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .prologue
    .line 6816
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6818
    .local v2, "origId":J
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 6819
    const/4 v1, 0x0

    :try_start_8
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v0

    .line 6820
    .local v0, "changed":Z
    if-eqz v0, :cond_10

    if-eqz p2, :cond_1c

    .line 6821
    :cond_10
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    const/4 v5, 0x1

    iput-boolean v5, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 6822
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowSurfacePlacer;->performSurfacePlacement()V
    :try_end_1c
    .catchall {:try_start_8 .. :try_end_1c} :catchall_28

    :cond_1c
    monitor-exit v4

    .line 6826
    if-nez v0, :cond_21

    if-eqz p1, :cond_24

    .line 6827
    :cond_21
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    .line 6830
    :cond_24
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6812
    return-void

    .line 6818
    .end local v0    # "changed":Z
    :catchall_28
    move-exception v1

    monitor-exit v4

    throw v1
.end method

.method public updateRotationUncheckedLocked(Z)Z
    .registers 22
    .param p1, "inTransaction"    # Z

    .prologue
    .line 6842
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    if-lez v5, :cond_8

    .line 6846
    const/4 v5, 0x0

    return v5

    .line 6850
    :cond_8
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v3

    .line 6851
    .local v3, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v3, :cond_1b

    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    move-result v5

    if-eqz v5, :cond_1b

    .line 6856
    const/4 v5, 0x0

    return v5

    .line 6858
    :cond_1b
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v5, :cond_23

    .line 6863
    const/4 v5, 0x0

    return v5

    .line 6866
    :cond_23
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-nez v5, :cond_2b

    .line 6869
    const/4 v5, 0x0

    return v5

    .line 6872
    :cond_2b
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v12

    .line 6873
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 6875
    .local v19, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    move/from16 v16, v0

    .line 6876
    .local v16, "oldRotation":I
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    move-object/from16 v0, p0

    iget v7, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v5, v6, v7}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(II)I

    move-result v4

    .line 6877
    .local v4, "rotation":I
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move/from16 v0, v16

    invoke-interface {v5, v0, v4}, Landroid/view/WindowManagerPolicy;->shouldRotateSeamlessly(II)Z

    move-result v17

    .line 6879
    .local v17, "rotateSeamlessly":Z
    if-eqz v17, :cond_8a

    .line 6880
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v15, v5, -0x1

    .end local v17    # "rotateSeamlessly":Z
    .local v15, "i":I
    :goto_5b
    if-ltz v15, :cond_8a

    .line 6881
    move-object/from16 v0, v19

    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 6885
    .local v18, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mSeamlesslyRotated:Z

    if-eqz v5, :cond_6d

    .line 6886
    const/4 v5, 0x0

    return v5

    .line 6898
    :cond_6d
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->isChildWindow()Z

    move-result v5

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v6

    and-int/2addr v5, v6

    if-eqz v5, :cond_84

    .line 6899
    move-object/from16 v0, v18

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v5, v5, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceController:Lcom/android/server/wm/WindowSurfaceController;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowSurfaceController;->getTransformToDisplayInverse()Z

    move-result v5

    if-eqz v5, :cond_87

    .line 6880
    :cond_84
    :goto_84
    add-int/lit8 v15, v15, -0x1

    goto :goto_5b

    .line 6900
    :cond_87
    const/16 v17, 0x0

    .local v17, "rotateSeamlessly":Z
    goto :goto_84

    .line 6910
    .end local v15    # "i":I
    .end local v17    # "rotateSeamlessly":Z
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_8a
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    .line 6911
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mLastOrientation:I

    .line 6910
    invoke-interface {v5, v6, v4}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(II)Z

    move-result v5

    if-eqz v5, :cond_a7

    const/4 v2, 0x0

    .line 6920
    .local v2, "altOrientation":Z
    :goto_99
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    if-ne v5, v4, :cond_a9

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    if-ne v5, v2, :cond_a9

    .line 6922
    const/4 v5, 0x0

    return v5

    .line 6910
    .end local v2    # "altOrientation":Z
    :cond_a7
    const/4 v2, 0x1

    .restart local v2    # "altOrientation":Z
    goto :goto_99

    .line 6932
    :cond_a9
    move-object/from16 v0, p0

    iput v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    .line 6933
    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    .line 6934
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v5, v6}, Landroid/view/WindowManagerPolicy;->setRotationLw(I)V

    .line 6936
    const/4 v5, 0x1

    move-object/from16 v0, p0

    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:I

    .line 6937
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0xb

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6938
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v6, 0x7d0

    const/16 v8, 0xb

    invoke-virtual {v5, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 6939
    const/4 v5, 0x1

    move-object/from16 v0, p0

    iput-boolean v5, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 6940
    const/4 v5, 0x1

    iput-boolean v5, v12, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 6941
    const/4 v5, 0x2

    new-array v11, v5, [I

    .line 6942
    .local v11, "anim":[I
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v5

    if-eqz v5, :cond_15b

    .line 6943
    const/4 v5, 0x0

    const/4 v6, 0x1

    aput v5, v11, v6

    const/4 v5, 0x0

    const/4 v6, 0x0

    aput v5, v11, v6

    .line 6948
    :goto_ee
    if-nez v17, :cond_163

    .line 6949
    const/4 v5, 0x0

    aget v5, v11, v5

    const/4 v6, 0x1

    aget v6, v11, v6

    move-object/from16 v0, p0

    move/from16 v1, p1

    invoke-direct {v0, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 6952
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v6, 0x0

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v3

    .line 6970
    .end local v3    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :goto_106
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget v5, v5, Landroid/content/res/Configuration;->uiMode:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Lcom/android/server/wm/WindowManagerService;->updateDisplayAndOrientationLocked(I)Landroid/view/DisplayInfo;

    .line 6972
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v13

    .line 6973
    .local v13, "displayInfo":Landroid/view/DisplayInfo;
    if-nez p1, :cond_11a

    .line 6977
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 6982
    :cond_11a
    if-eqz v3, :cond_139

    .line 6983
    :try_start_11c
    invoke-virtual {v3}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v5

    .line 6982
    if-eqz v5, :cond_139

    .line 6985
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    .line 6986
    const-wide/16 v6, 0x2710

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getTransitionAnimationScaleLocked()F

    move-result v8

    .line 6987
    iget v9, v13, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v10, v13, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 6984
    invoke-virtual/range {v3 .. v10}, Lcom/android/server/wm/ScreenRotationAnimation;->setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z

    move-result v5

    if-eqz v5, :cond_139

    .line 6988
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 6992
    :cond_139
    if-eqz v17, :cond_16a

    .line 6993
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v15, v5, -0x1

    .restart local v15    # "i":I
    :goto_141
    if-ltz v15, :cond_16a

    .line 6994
    move-object/from16 v0, v19

    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 6995
    .restart local v18    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    move/from16 v0, v16

    invoke-virtual {v5, v0, v6}, Lcom/android/server/wm/WindowStateAnimator;->seamlesslyRotateWindow(II)V
    :try_end_158
    .catchall {:try_start_11c .. :try_end_158} :catchall_19e

    .line 6993
    add-int/lit8 v15, v15, -0x1

    goto :goto_141

    .line 6945
    .end local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v15    # "i":I
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    .restart local v3    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    :cond_15b
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, v11}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    goto :goto_ee

    .line 6958
    :cond_163
    const/4 v3, 0x0

    .line 6962
    .local v3, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    const/4 v5, 0x0

    move-object/from16 v0, p0

    iput v5, v0, Lcom/android/server/wm/WindowManagerService;->mSeamlessRotationCount:I

    goto :goto_106

    .line 6999
    .end local v3    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    .restart local v13    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_16a
    :try_start_16a
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerInternal:Landroid/hardware/display/DisplayManagerInternal;

    invoke-virtual {v5}, Landroid/hardware/display/DisplayManagerInternal;->performTraversalInTransactionFromWindowManager()V
    :try_end_171
    .catchall {:try_start_16a .. :try_end_171} :catchall_19e

    .line 7001
    if-nez p1, :cond_176

    .line 7002
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7009
    :cond_176
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v15, v5, -0x1

    .restart local v15    # "i":I
    :goto_17c
    if-ltz v15, :cond_1b7

    .line 7010
    move-object/from16 v0, v19

    invoke-virtual {v0, v15}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 7012
    .restart local v18    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_193

    .line 7013
    move-object/from16 v0, v18

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v5}, Lcom/android/server/wm/AppWindowToken;->destroySavedSurfaces()V

    .line 7015
    :cond_193
    move-object/from16 v0, v18

    iget-boolean v5, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v5, :cond_19b

    if-eqz v17, :cond_1a5

    .line 7009
    :cond_19b
    :goto_19b
    add-int/lit8 v15, v15, -0x1

    goto :goto_17c

    .line 7000
    .end local v15    # "i":I
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :catchall_19e
    move-exception v5

    .line 7001
    if-nez p1, :cond_1a4

    .line 7002
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7000
    :cond_1a4
    throw v5

    .line 7017
    .restart local v15    # "i":I
    .restart local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_1a5
    const/4 v5, 0x1

    move-object/from16 v0, v18

    iput-boolean v5, v0, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 7018
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mWindowPlacerLocked:Lcom/android/server/wm/WindowSurfacePlacer;

    const/4 v6, 0x0

    iput-boolean v6, v5, Lcom/android/server/wm/WindowSurfacePlacer;->mOrientationChangeComplete:Z

    .line 7019
    const/4 v5, 0x0

    move-object/from16 v0, v18

    iput v5, v0, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    goto :goto_19b

    .line 7022
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_1b7
    if-eqz v17, :cond_1cd

    .line 7023
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x36

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 7024
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v6, 0x7d0

    const/16 v8, 0x36

    invoke-virtual {v5, v8, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 7027
    :cond_1cd
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v15, v5, -0x1

    :goto_1d7
    if-ltz v15, :cond_1eb

    .line 7029
    :try_start_1d9
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v5, v15}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    iget-object v5, v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;->watcher:Landroid/view/IRotationWatcher;

    invoke-interface {v5, v4}, Landroid/view/IRotationWatcher;->onRotationChanged(I)V
    :try_end_1e8
    .catch Landroid/os/RemoteException; {:try_start_1d9 .. :try_end_1e8} :catch_206

    .line 7027
    :goto_1e8
    add-int/lit8 v15, v15, -0x1

    goto :goto_1d7

    .line 7037
    :cond_1eb
    if-nez v3, :cond_204

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    if-eqz v5, :cond_204

    .line 7038
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v5

    if-nez v5, :cond_204

    .line 7039
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/wm/WindowManagerService;->mAccessibilityController:Lcom/android/server/wm/AccessibilityController;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v6

    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/AccessibilityController;->onRotationChangedLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 7043
    :cond_204
    const/4 v5, 0x1

    return v5

    .line 7030
    :catch_206
    move-exception v14

    .local v14, "e":Landroid/os/RemoteException;
    goto :goto_1e8
.end method

.method updateStatusBarVisibilityLocked(I)Z
    .registers 13
    .param p1, "visibility"    # I

    .prologue
    .line 10355
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    if-ne v9, p1, :cond_6

    .line 10356
    const/4 v9, 0x0

    return v9

    .line 10358
    :cond_6
    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    xor-int/2addr v9, p1

    and-int/lit8 v9, v9, 0x7

    .line 10363
    not-int v10, p1

    .line 10358
    and-int v4, v9, v10

    .line 10365
    .local v4, "globalDiff":I
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastDispatchedSystemUiVisibility:I

    .line 10366
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v9, p1}, Lcom/android/server/input/InputManagerService;->setSystemUiVisibility(I)V

    .line 10367
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 10368
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 10369
    .local v0, "N":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_1e
    if-ge v5, v0, :cond_4e

    .line 10370
    invoke-virtual {v7, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 10372
    .local v8, "ws":Lcom/android/server/wm/WindowState;
    :try_start_26
    iget v1, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 10373
    .local v1, "curValue":I
    xor-int v9, v1, p1

    and-int v2, v9, v4

    .line 10374
    .local v2, "diff":I
    not-int v9, v2

    and-int/2addr v9, v1

    and-int v10, p1, v2

    or-int v6, v9, v10

    .line 10375
    .local v6, "newValue":I
    if-eq v6, v1, :cond_3c

    .line 10376
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    add-int/lit8 v9, v9, 0x1

    iput v9, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    .line 10377
    iput v6, v8, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 10379
    :cond_3c
    if-ne v6, v1, :cond_44

    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-boolean v9, v9, Landroid/view/WindowManager$LayoutParams;->hasSystemUiListeners:Z

    if-eqz v9, :cond_4b

    .line 10380
    :cond_44
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    iget v10, v8, Lcom/android/server/wm/WindowState;->mSeq:I

    invoke-interface {v9, v10, p1, v6, v2}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_4b
    .catch Landroid/os/RemoteException; {:try_start_26 .. :try_end_4b} :catch_50

    .line 10369
    .end local v1    # "curValue":I
    .end local v2    # "diff":I
    .end local v6    # "newValue":I
    :cond_4b
    :goto_4b
    add-int/lit8 v5, v5, 0x1

    goto :goto_1e

    .line 10387
    .end local v8    # "ws":Lcom/android/server/wm/WindowState;
    :cond_4e
    const/4 v9, 0x1

    return v9

    .line 10383
    .restart local v8    # "ws":Lcom/android/server/wm/WindowState;
    :catch_50
    move-exception v3

    .local v3, "e":Landroid/os/RemoteException;
    goto :goto_4b
.end method

.method updateTokenInPlaceLocked(Lcom/android/server/wm/AppWindowToken;I)V
    .registers 9
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "transit"    # I

    .prologue
    const/4 v4, 0x0

    .line 4596
    const/4 v0, -0x1

    if-eq p2, v0, :cond_19

    .line 4597
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    sget-object v1, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    if-ne v0, v1, :cond_11

    .line 4598
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setNullAnimation()V

    .line 4600
    :cond_11
    const/4 v2, 0x0

    move-object v0, p0

    move-object v1, p1

    move v3, p2

    move v5, v4

    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZZ)Z

    .line 4595
    :cond_19
    return-void
.end method

.method public validateAppTokens(ILjava/util/List;)V
    .registers 22
    .param p1, "stackId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wm/TaskGroup;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 3342
    .local p2, "tasks":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/wm/TaskGroup;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v16, v0

    monitor-enter v16

    .line 3343
    :try_start_7
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v15

    add-int/lit8 v7, v15, -0x1

    .line 3344
    .local v7, "t":I
    if-gez v7, :cond_1c

    .line 3345
    const-string/jumbo v15, "WindowManager"

    const-string/jumbo v17, "validateAppTokens: empty task list"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1a
    .catchall {:try_start_7 .. :try_end_1a} :catchall_142

    monitor-exit v16

    .line 3346
    return-void

    .line 3349
    :cond_1c
    const/4 v15, 0x0

    :try_start_1d
    move-object/from16 v0, p2

    invoke-interface {v0, v15}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/TaskGroup;

    .line 3350
    .local v9, "task":Lcom/android/server/wm/TaskGroup;
    iget v10, v9, Lcom/android/server/wm/TaskGroup;->taskId:I

    .line 3351
    .local v10, "taskId":I
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/Task;

    .line 3352
    .local v8, "targetTask":Lcom/android/server/wm/Task;
    invoke-virtual {v8}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3353
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_57

    .line 3354
    const-string/jumbo v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: no Display for taskId="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_55
    .catchall {:try_start_1d .. :try_end_55} :catchall_142

    monitor-exit v16

    .line 3355
    return-void

    .line 3358
    :cond_57
    :try_start_57
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v15, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/TaskStack;

    invoke-virtual {v15}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v5

    .line 3360
    .local v5, "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v15

    add-int/lit8 v11, v15, -0x1

    .local v11, "taskNdx":I
    :goto_6d
    if-ltz v11, :cond_d0

    if-ltz v7, :cond_d0

    .line 3361
    invoke-virtual {v5, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    iget-object v6, v15, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 3362
    .local v6, "localTokens":Lcom/android/server/wm/AppTokenList;
    move-object/from16 v0, p2

    invoke-interface {v0, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    .line 3363
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    iget-object v13, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    .line 3365
    .local v13, "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    move-object v4, v3

    .line 3366
    .local v4, "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    invoke-virtual {v15}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 3367
    if-eq v3, v4, :cond_a1

    .line 3368
    const-string/jumbo v15, "WindowManager"

    const-string/jumbo v17, "validateAppTokens: displayContent changed in TaskGroup list!"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_9f
    .catchall {:try_start_57 .. :try_end_9f} :catchall_142

    monitor-exit v16

    .line 3369
    return-void

    .line 3374
    :cond_a1
    :try_start_a1
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v15

    add-int/lit8 v12, v15, -0x1

    .local v12, "tokenNdx":I
    iget-object v15, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v15

    add-int/lit8 v14, v15, -0x1

    .line 3375
    .local v14, "v":I
    :goto_af
    if-ltz v12, :cond_cc

    if-ltz v14, :cond_cc

    .line 3376
    invoke-virtual {v6, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    .line 3377
    .local v2, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v15, v2, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v15, :cond_c0

    .line 3378
    add-int/lit8 v12, v12, -0x1

    .line 3379
    goto :goto_af

    .line 3381
    :cond_c0
    invoke-interface {v13, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    iget-object v0, v2, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    if-eq v15, v0, :cond_136

    .line 3388
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_cc
    if-gez v12, :cond_d0

    if-ltz v14, :cond_13c

    .line 3393
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :cond_d0
    if-gez v11, :cond_d4

    if-ltz v7, :cond_134

    .line 3394
    :cond_d4
    const-string/jumbo v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! ActivityManager="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3395
    const-string/jumbo v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! WindowManager="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3396
    const-string/jumbo v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! Callers="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    const/16 v18, 0x4

    invoke-static/range {v18 .. v18}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_134
    .catchall {:try_start_a1 .. :try_end_134} :catchall_142

    :cond_134
    monitor-exit v16

    .line 3341
    return-void

    .line 3384
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .restart local v12    # "tokenNdx":I
    .restart local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .restart local v14    # "v":I
    :cond_136
    add-int/lit8 v12, v12, -0x1

    .line 3385
    add-int/lit8 v14, v14, -0x1

    goto/16 :goto_af

    .line 3360
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_13c
    add-int/lit8 v11, v11, -0x1

    add-int/lit8 v7, v7, -0x1

    goto/16 :goto_6d

    .line 3342
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v5    # "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v7    # "t":I
    .end local v8    # "targetTask":Lcom/android/server/wm/Task;
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .end local v10    # "taskId":I
    .end local v11    # "taskNdx":I
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :catchall_142
    move-exception v15

    monitor-exit v16

    throw v15
.end method

.method public validateStackOrder([Ljava/lang/Integer;)V
    .registers 2
    .param p1, "remoteStackIds"    # [Ljava/lang/Integer;

    .prologue
    .line 3401
    return-void
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .registers 11
    .param p1, "client"    # Ljava/net/Socket;

    .prologue
    .line 7322
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v7

    if-eqz v7, :cond_8

    .line 7323
    const/4 v7, 0x0

    return v7

    .line 7326
    :cond_8
    const/4 v6, 0x1

    .line 7328
    .local v6, "result":Z
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 7330
    .local v3, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v4, 0x0

    .line 7334
    .local v4, "out":Ljava/io/BufferedWriter;
    :try_start_e
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v0

    .line 7335
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v5, Ljava/io/BufferedWriter;

    new-instance v7, Ljava/io/OutputStreamWriter;

    invoke-direct {v7, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v8, 0x2000

    invoke-direct {v5, v7, v8}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_1e} :catch_4b
    .catchall {:try_start_e .. :try_end_1e} :catchall_56

    .line 7337
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v5, "out":Ljava/io/BufferedWriter;
    if-eqz v3, :cond_39

    .line 7338
    :try_start_20
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v7

    invoke-static {v7}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 7339
    const/16 v7, 0x20

    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    .line 7340
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v7

    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 7342
    :cond_39
    const/16 v7, 0xa

    invoke-virtual {v5, v7}, Ljava/io/BufferedWriter;->write(I)V

    .line 7343
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->flush()V
    :try_end_41
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_41} :catch_63
    .catchall {:try_start_20 .. :try_end_41} :catchall_60

    .line 7347
    if-eqz v5, :cond_46

    .line 7349
    :try_start_43
    invoke-virtual {v5}, Ljava/io/BufferedWriter;->close()V
    :try_end_46
    .catch Ljava/io/IOException; {:try_start_43 .. :try_end_46} :catch_48

    :cond_46
    :goto_46
    move-object v4, v5

    .line 7356
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    :cond_47
    :goto_47
    return v6

    .line 7350
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_48
    move-exception v1

    .line 7351
    .local v1, "e":Ljava/io/IOException;
    const/4 v6, 0x0

    goto :goto_46

    .line 7344
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "e":Ljava/io/IOException;
    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_4b
    move-exception v2

    .line 7345
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .local v2, "e":Ljava/lang/Exception;
    :goto_4c
    const/4 v6, 0x0

    .line 7347
    if-eqz v4, :cond_47

    .line 7349
    :try_start_4f
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_52
    .catch Ljava/io/IOException; {:try_start_4f .. :try_end_52} :catch_53

    goto :goto_47

    .line 7350
    :catch_53
    move-exception v1

    .line 7351
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    goto :goto_47

    .line 7346
    .end local v1    # "e":Ljava/io/IOException;
    .end local v2    # "e":Ljava/lang/Exception;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catchall_56
    move-exception v7

    .line 7347
    .end local v4    # "out":Ljava/io/BufferedWriter;
    :goto_57
    if-eqz v4, :cond_5c

    .line 7349
    :try_start_59
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_5c
    .catch Ljava/io/IOException; {:try_start_59 .. :try_end_5c} :catch_5d

    .line 7346
    :cond_5c
    :goto_5c
    throw v7

    .line 7350
    :catch_5d
    move-exception v1

    .line 7351
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v6, 0x0

    goto :goto_5c

    .line 7346
    .end local v1    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catchall_60
    move-exception v7

    move-object v4, v5

    .end local v5    # "out":Ljava/io/BufferedWriter;
    .local v4, "out":Ljava/io/BufferedWriter;
    goto :goto_57

    .line 7344
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v5    # "out":Ljava/io/BufferedWriter;
    :catch_63
    move-exception v2

    .restart local v2    # "e":Ljava/lang/Exception;
    move-object v4, v5

    .end local v5    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    goto :goto_4c
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .registers 17
    .param p1, "client"    # Ljava/net/Socket;

    .prologue
    .line 7264
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v13

    if-eqz v13, :cond_8

    .line 7265
    const/4 v13, 0x0

    return v13

    .line 7268
    :cond_8
    const/4 v10, 0x1

    .line 7270
    .local v10, "result":Z
    new-instance v12, Lcom/android/server/wm/WindowList;

    invoke-direct {v12}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 7271
    .local v12, "windows":Lcom/android/server/wm/WindowList;
    iget-object v14, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v14

    .line 7273
    :try_start_11
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 7274
    .local v7, "numDisplays":I
    const/4 v3, 0x0

    .local v3, "displayNdx":I
    :goto_18
    if-ge v3, v7, :cond_2c

    .line 7275
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v13, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/DisplayContent;

    .line 7276
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v13

    invoke-virtual {v12, v13}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z
    :try_end_29
    .catchall {:try_start_11 .. :try_end_29} :catchall_6c

    .line 7274
    add-int/lit8 v3, v3, 0x1

    goto :goto_18

    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2c
    monitor-exit v14

    .line 7280
    const/4 v8, 0x0

    .line 7284
    .local v8, "out":Ljava/io/BufferedWriter;
    :try_start_2e
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v0

    .line 7285
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v9, Ljava/io/BufferedWriter;

    new-instance v13, Ljava/io/OutputStreamWriter;

    invoke-direct {v13, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v14, 0x2000

    invoke-direct {v9, v13, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_3e
    .catch Ljava/lang/Exception; {:try_start_2e .. :try_end_3e} :catch_82
    .catchall {:try_start_2e .. :try_end_3e} :catchall_8d

    .line 7287
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    :try_start_3e
    invoke-virtual {v12}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 7288
    .local v1, "count":I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_43
    if-ge v6, v1, :cond_6f

    .line 7289
    invoke-virtual {v12, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/WindowState;

    .line 7290
    .local v11, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v11}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v13

    invoke-static {v13}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v13

    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 7291
    const/16 v13, 0x20

    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V

    .line 7292
    iget-object v13, v11, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v13}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v13

    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 7293
    const/16 v13, 0xa

    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(I)V
    :try_end_69
    .catch Ljava/lang/Exception; {:try_start_3e .. :try_end_69} :catch_9a
    .catchall {:try_start_3e .. :try_end_69} :catchall_97

    .line 7288
    add-int/lit8 v6, v6, 0x1

    goto :goto_43

    .line 7271
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v3    # "displayNdx":I
    .end local v6    # "i":I
    .end local v7    # "numDisplays":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .end local v11    # "w":Lcom/android/server/wm/WindowState;
    :catchall_6c
    move-exception v13

    monitor-exit v14

    throw v13

    .line 7296
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v3    # "displayNdx":I
    .restart local v6    # "i":I
    .restart local v7    # "numDisplays":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :cond_6f
    :try_start_6f
    const-string/jumbo v13, "DONE.\n"

    invoke-virtual {v9, v13}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 7297
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->flush()V
    :try_end_78
    .catch Ljava/lang/Exception; {:try_start_6f .. :try_end_78} :catch_9a
    .catchall {:try_start_6f .. :try_end_78} :catchall_97

    .line 7301
    if-eqz v9, :cond_7d

    .line 7303
    :try_start_7a
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_7d
    .catch Ljava/io/IOException; {:try_start_7a .. :try_end_7d} :catch_7f

    :cond_7d
    :goto_7d
    move-object v8, v9

    .line 7310
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    :cond_7e
    :goto_7e
    return v10

    .line 7304
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v6    # "i":I
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_7f
    move-exception v4

    .line 7305
    .local v4, "e":Ljava/io/IOException;
    const/4 v10, 0x0

    goto :goto_7d

    .line 7298
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v4    # "e":Ljava/io/IOException;
    .end local v6    # "i":I
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_82
    move-exception v5

    .line 7299
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .local v5, "e":Ljava/lang/Exception;
    :goto_83
    const/4 v10, 0x0

    .line 7301
    if-eqz v8, :cond_7e

    .line 7303
    :try_start_86
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_89
    .catch Ljava/io/IOException; {:try_start_86 .. :try_end_89} :catch_8a

    goto :goto_7e

    .line 7304
    :catch_8a
    move-exception v4

    .line 7305
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    goto :goto_7e

    .line 7300
    .end local v4    # "e":Ljava/io/IOException;
    .end local v5    # "e":Ljava/lang/Exception;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catchall_8d
    move-exception v13

    .line 7301
    .end local v8    # "out":Ljava/io/BufferedWriter;
    :goto_8e
    if-eqz v8, :cond_93

    .line 7303
    :try_start_90
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_93
    .catch Ljava/io/IOException; {:try_start_90 .. :try_end_93} :catch_94

    .line 7300
    :cond_93
    :goto_93
    throw v13

    .line 7304
    :catch_94
    move-exception v4

    .line 7305
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v10, 0x0

    goto :goto_93

    .line 7300
    .end local v4    # "e":Ljava/io/IOException;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catchall_97
    move-exception v13

    move-object v8, v9

    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v8, "out":Ljava/io/BufferedWriter;
    goto :goto_8e

    .line 7298
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_9a
    move-exception v5

    .restart local v5    # "e":Ljava/lang/Exception;
    move-object v8, v9

    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    goto :goto_83
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 21
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    .prologue
    .line 7380
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v14

    if-eqz v14, :cond_8

    .line 7381
    const/4 v14, 0x0

    return v14

    .line 7384
    :cond_8
    const/4 v12, 0x1

    .line 7385
    .local v12, "success":Z
    const/4 v4, 0x0

    .line 7386
    .local v4, "data":Landroid/os/Parcel;
    const/4 v11, 0x0

    .line 7388
    .local v11, "reply":Landroid/os/Parcel;
    const/4 v9, 0x0

    .line 7393
    .local v9, "out":Ljava/io/BufferedWriter;
    const/16 v14, 0x20

    :try_start_e
    move-object/from16 v0, p3

    invoke-virtual {v0, v14}, Ljava/lang/String;->indexOf(I)I

    move-result v8

    .line 7394
    .local v8, "index":I
    const/4 v14, -0x1

    if-ne v8, v14, :cond_1b

    .line 7395
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v8

    .line 7397
    :cond_1b
    const/4 v14, 0x0

    move-object/from16 v0, p3

    invoke-virtual {v0, v14, v8}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v3

    .line 7398
    .local v3, "code":Ljava/lang/String;
    const/16 v14, 0x10

    invoke-static {v3, v14}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    move-result-wide v14

    long-to-int v7, v14

    .line 7401
    .local v7, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v14

    if-ge v8, v14, :cond_41

    .line 7402
    add-int/lit8 v14, v8, 0x1

    move-object/from16 v0, p3

    invoke-virtual {v0, v14}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p3

    .line 7407
    :goto_37
    move-object/from16 v0, p0

    invoke-direct {v0, v7}, Lcom/android/server/wm/WindowManagerService;->findWindow(I)Lcom/android/server/wm/WindowState;

    move-result-object v13

    .line 7408
    .local v13, "window":Lcom/android/server/wm/WindowState;
    if-nez v13, :cond_45

    .line 7409
    const/4 v14, 0x0

    return v14

    .line 7404
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_41
    const-string/jumbo p3, ""

    goto :goto_37

    .line 7412
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_45
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v4

    .line 7413
    .local v4, "data":Landroid/os/Parcel;
    const-string/jumbo v14, "android.view.IWindow"

    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 7414
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 7415
    move-object/from16 v0, p3

    invoke-virtual {v4, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 7416
    const/4 v14, 0x1

    invoke-virtual {v4, v14}, Landroid/os/Parcel;->writeInt(I)V

    .line 7417
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    move-result-object v14

    const/4 v15, 0x0

    invoke-virtual {v14, v4, v15}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    .line 7419
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v11

    .line 7421
    .local v11, "reply":Landroid/os/Parcel;
    iget-object v14, v13, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v14}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    .line 7423
    .local v2, "binder":Landroid/os/IBinder;
    const/4 v14, 0x1

    const/4 v15, 0x0

    invoke-interface {v2, v14, v4, v11, v15}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 7425
    invoke-virtual {v11}, Landroid/os/Parcel;->readException()V

    .line 7427
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    move-result v14

    if-nez v14, :cond_95

    .line 7428
    new-instance v10, Ljava/io/BufferedWriter;

    new-instance v14, Ljava/io/OutputStreamWriter;

    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v15

    invoke-direct {v14, v15}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    invoke-direct {v10, v14}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V
    :try_end_8b
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_8b} :catch_a7
    .catchall {:try_start_e .. :try_end_8b} :catchall_e4

    .line 7429
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v10, "out":Ljava/io/BufferedWriter;
    :try_start_8b
    const-string/jumbo v14, "DONE\n"

    invoke-virtual {v10, v14}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 7430
    invoke-virtual {v10}, Ljava/io/BufferedWriter;->flush()V
    :try_end_94
    .catch Ljava/lang/Exception; {:try_start_8b .. :try_end_94} :catch_fa
    .catchall {:try_start_8b .. :try_end_94} :catchall_f7

    move-object v9, v10

    .line 7437
    .end local v10    # "out":Ljava/io/BufferedWriter;
    :cond_95
    if-eqz v4, :cond_9a

    .line 7438
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 7440
    :cond_9a
    if-eqz v11, :cond_9f

    .line 7441
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    .line 7443
    :cond_9f
    if-eqz v9, :cond_a4

    .line 7445
    :try_start_a1
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_a4
    .catch Ljava/io/IOException; {:try_start_a1 .. :try_end_a4} :catch_a5

    .line 7452
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    :cond_a4
    :goto_a4
    return v12

    .line 7446
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catch_a5
    move-exception v5

    .local v5, "e":Ljava/io/IOException;
    goto :goto_a4

    .line 7433
    .end local v2    # "binder":Landroid/os/IBinder;
    .end local v3    # "code":Ljava/lang/String;
    .end local v4    # "data":Landroid/os/Parcel;
    .end local v5    # "e":Ljava/io/IOException;
    .end local v7    # "hashCode":I
    .end local v8    # "index":I
    .end local v11    # "reply":Landroid/os/Parcel;
    .end local v13    # "window":Lcom/android/server/wm/WindowState;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    :catch_a7
    move-exception v6

    .line 7434
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .local v6, "e":Ljava/lang/Exception;
    :goto_a8
    :try_start_a8
    const-string/jumbo v14, "WindowManager"

    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v16, "Could not send command "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p2

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string/jumbo v16, " with parameters "

    invoke-virtual/range {v15 .. v16}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    move-object/from16 v0, p3

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    invoke-static {v14, v15, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_d1
    .catchall {:try_start_a8 .. :try_end_d1} :catchall_e4

    .line 7435
    const/4 v12, 0x0

    .line 7437
    if-eqz v4, :cond_d7

    .line 7438
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 7440
    :cond_d7
    if-eqz v11, :cond_dc

    .line 7441
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    .line 7443
    :cond_dc
    if-eqz v9, :cond_a4

    .line 7445
    :try_start_de
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_e1
    .catch Ljava/io/IOException; {:try_start_de .. :try_end_e1} :catch_e2

    goto :goto_a4

    .line 7446
    :catch_e2
    move-exception v5

    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_a4

    .line 7436
    .end local v5    # "e":Ljava/io/IOException;
    .end local v6    # "e":Ljava/lang/Exception;
    :catchall_e4
    move-exception v14

    .line 7437
    :goto_e5
    if-eqz v4, :cond_ea

    .line 7438
    invoke-virtual {v4}, Landroid/os/Parcel;->recycle()V

    .line 7440
    :cond_ea
    if-eqz v11, :cond_ef

    .line 7441
    invoke-virtual {v11}, Landroid/os/Parcel;->recycle()V

    .line 7443
    :cond_ef
    if-eqz v9, :cond_f4

    .line 7445
    :try_start_f1
    invoke-virtual {v9}, Ljava/io/BufferedWriter;->close()V
    :try_end_f4
    .catch Ljava/io/IOException; {:try_start_f1 .. :try_end_f4} :catch_f5

    .line 7436
    :cond_f4
    :goto_f4
    throw v14

    .line 7446
    :catch_f5
    move-exception v5

    .restart local v5    # "e":Ljava/io/IOException;
    goto :goto_f4

    .line 7436
    .end local v5    # "e":Ljava/io/IOException;
    .restart local v2    # "binder":Landroid/os/IBinder;
    .restart local v3    # "code":Ljava/lang/String;
    .restart local v4    # "data":Landroid/os/Parcel;
    .restart local v7    # "hashCode":I
    .restart local v8    # "index":I
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v11    # "reply":Landroid/os/Parcel;
    .restart local v13    # "window":Lcom/android/server/wm/WindowState;
    :catchall_f7
    move-exception v14

    move-object v9, v10

    .end local v10    # "out":Ljava/io/BufferedWriter;
    .local v9, "out":Ljava/io/BufferedWriter;
    goto :goto_e5

    .line 7433
    .end local v9    # "out":Ljava/io/BufferedWriter;
    .restart local v10    # "out":Ljava/io/BufferedWriter;
    :catch_fa
    move-exception v6

    .restart local v6    # "e":Ljava/lang/Exception;
    move-object v9, v10

    .end local v10    # "out":Ljava/io/BufferedWriter;
    .restart local v9    # "out":Ljava/io/BufferedWriter;
    goto :goto_a8
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;)I
    .registers 8
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .prologue
    .line 7058
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    .line 7059
    .local v2, "watcherBinder":Landroid/os/IBinder;
    new-instance v0, Lcom/android/server/wm/WindowManagerService$9;

    invoke-direct {v0, p0, v2}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    .line 7077
    .local v0, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 7079
    :try_start_c
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    const/4 v5, 0x0

    invoke-interface {v3, v0, v5}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 7080
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    new-instance v5, Lcom/android/server/wm/WindowManagerService$RotationWatcher;

    invoke-direct {v5, p0, p1, v0}, Lcom/android/server/wm/WindowManagerService$RotationWatcher;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IRotationWatcher;Landroid/os/IBinder$DeathRecipient;)V

    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1e
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_1e} :catch_25
    .catchall {:try_start_c .. :try_end_1e} :catchall_22

    .line 7085
    :goto_1e
    :try_start_1e
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I
    :try_end_20
    .catchall {:try_start_1e .. :try_end_20} :catchall_22

    monitor-exit v4

    return v3

    .line 7077
    :catchall_22
    move-exception v3

    monitor-exit v4

    throw v3

    .line 7081
    :catch_25
    move-exception v1

    .local v1, "e":Landroid/os/RemoteException;
    goto :goto_1e
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    .prologue
    const/4 v4, 0x0

    .line 9458
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v2, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 9461
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_38

    .line 9462
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 9463
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Requested window "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, " does not exist"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 9462
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 9464
    .local v0, "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_2e

    .line 9465
    throw v0

    .line 9467
    :cond_2e
    const-string/jumbo v2, "WindowManager"

    const-string/jumbo v3, "Failed looking up window"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9468
    return-object v4

    .line 9470
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_38
    if-eqz p1, :cond_7c

    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    if-eq v2, p1, :cond_7c

    .line 9471
    new-instance v0, Ljava/lang/IllegalArgumentException;

    .line 9472
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "Requested window "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, " is in session "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 9473
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    .line 9472
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 9473
    const-string/jumbo v3, ", not "

    .line 9472
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 9471
    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 9474
    .restart local v0    # "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_72

    .line 9475
    throw v0

    .line 9477
    :cond_72
    const-string/jumbo v2, "WindowManager"

    const-string/jumbo v3, "Failed looking up window"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9478
    return-object v4

    .line 9481
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    :cond_7c
    return-object v1
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .registers 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    .prologue
    .line 9453
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-virtual {p0, p1, v0, p3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method
